<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />
  <meta http-equiv="Content-Style-Type" content="text/css" />
  <meta name="GENERATOR" content="Quadralay WebWorks Publisher Professional Edition 7.0.5.1025" />
  <meta name="TEMPLATEBASE" content="Acucorp WWH" />
  <meta name="LASTUPDATED" content="06/14/06 08:28:08" />
  <title>WRITE Statement</title>
  <link rel="StyleSheet" href="document.css" type="text/css" />
  <link rel="StyleSheet" href="catalog.css" type="text/css" />
<script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/context.js"></script>
  <script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/towwhdir.js"></script>
  <script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/wwhpagef.js"></script>

  <script type="text/javascript" language="JavaScript1.2">
   <!--
    // Set reference to top level help frame
    //
    var  WWHFrame = WWHGetWWHFrame("");
   // -->
  </script>
 </head>

 <body onLoad="WWHUpdate();">

    <a href="../docs.htm" target="acudoc"><img src="images/sbooks.gif" width="70" height="27" border="0" alt="Books" align="right" /></a>
    <span style="font-size: 18px ; font-weight: bold"><font face="Arial, Helvetica, sans-serif">
       ACUCOBOL-GT Reference Manual <br />
    </font></span>
    <span style="font-size: 14px ; font-weight: bold"><font face="Arial, Helvetica, sans-serif">
       Version 7.2
     </font></span>

 <p />

 <blockquote>
<p class="breadcrumb"><a href="gt36.htm"><br />Chapter 6:  Procedure Division</a> &gt; <a href="gt3678.htm">6.6  Procedure Division Statements </a> &gt; </p>
<a name="wp1042928"> </a><h2 class="pHeading2">
WRITE Statement
</h2>
<a name="wp1042931"> </a><p class="pBody">
The WRITE statement adds a record to a file.
</p>
<a name="wp1042933"> </a><h3 class="pHeadingRef">
General Format
</h3>
<a name="wp1042934"> </a><h3 class="pHeadingRef">
Format 1
</h3>
<div class="pPreformatted"><pre class="pPreformatted">
<u class="cUnderline">WRITE</u> record-name [ <u class="cUnderline">FROM</u> source ]<a name="wp1042935"> </a>
<a name="wp1042936"> </a>
   [ {<u class="cUnderline">BEFORE</u>} ADVANCING { number [LINE ] } ]<a name="wp1042937"> </a>
     {<u class="cUnderline">AFTER</u> }           {        [LINES] }<a name="wp1042938"> </a>
                        {      <u class="cUnderline">PAGE</u>      }<a name="wp1042939"> </a>
                        { mnemonic-name  }         <em class="cEmphasis">(HP COBOL)</em><a name="wp1042940"> </a>
<a name="wp1042941"> </a>
<a name="wp1042942"> </a>
   [ AT {<u class="cUnderline">END-OF-PAGE</u>} statement-1 ]<a name="wp1042943"> </a>
        {<u class="cUnderline">EOP</u>        }<a name="wp1042944"> </a>
<a name="wp1042945"> </a>
   [ <u class="cUnderline">NOT</u> AT {<u class="cUnderline">END-OF-PAGE</u>} statement-2 ]<a name="wp1042946"> </a>
            {<u class="cUnderline">EOP</u>        }<a name="wp1042947"> </a>
<a name="wp1042948"> </a>
   [ <u class="cUnderline">END-WRITE</u> ]<a name="wp1042949"> </a>
</pre></div>
<a name="wp1042950"> </a><h3 class="pHeadingRef">
Format 2
</h3>
<div class="pPreformatted"><pre class="pPreformatted">
<u class="cUnderline">WRITE</u> record-name [ <u class="cUnderline">FROM</u> source ]<a name="wp1042951"> </a>
<a name="wp1042952"> </a>
   [ <u class="cUnderline">INVALID</u> KEY statement-1 ]<a name="wp1042953"> </a>
<a name="wp1042954"> </a>
   [ <u class="cUnderline">NOT</u> <u class="cUnderline">INVALID</u> KEY statement-2 ]<a name="wp1042955"> </a>
<a name="wp1042956"> </a>
   [ <u class="cUnderline">END-WRITE</u> ]<a name="wp1042957"> </a>
</pre></div>
<a name="wp1042958"> </a><h3 class="pHeadingRef">
Format 3
</h3>
<div class="pPreformatted"><pre class="pPreformatted">
<u class="cUnderline">WRITE</u> record-name [ <u class="cUnderline">FROM</u> source ] WITH <u class="cUnderline">NO</u> { <u class="cUnderline">CONTROL</u>    }<a name="wp1042960"> </a>
                                          { <u class="cUnderline">CONVERSION</u> }<a name="wp1042961"> </a>
</pre></div>
<a name="wp1042962"> </a><h3 class="pHeadingRef">
Syntax Rules
</h3>
<div class="pSmartList1"><ol type="1" class="pSmartList1">
<a name="wp1042963"> </a><div class="pSmartList1"><li><em class="cEmphasis">Record-name</em> is the name of a record associated with a file described in the File Section of the Data Division.  The associated file may not be a sort file.  </li></div>
<a name="wp1042964"> </a><div class="pSmartList1"><li><em class="cEmphasis">Source</em> is a data item or literal.  It may not share any storage area with <em class="cEmphasis">record-name</em>.  </li></div>
<a name="wp1042965"> </a><div class="pSmartList1"><li><em class="cEmphasis">Number</em> is an integer numeric literal or data item.  It must be non-negative.  </li></div>
<a name="wp1042967"> </a><div class="pSmartList1"><li><em class="cEmphasis">Mnemonic-name</em> is a user-defined word that may be assigned to Special Names in the ADVANCING clause of the WRITE statement.  (This is a feature of <em class="cEmphasis">HP COBOL</em>.  For details, see section 4.3.2, &quot;Special Names Paragraph,&quot; in <em class="cEmphasis">Transitioning to ACUCOBOL-GT</em>.) </li></div>
<a name="wp1042968"> </a><div class="pSmartList1"><li><em class="cEmphasis">Statement-1</em> and <em class="cEmphasis">statement-2</em> are imperative statements.</li></div>
<a name="wp1042969"> </a><div class="pSmartList1"><li>A Format 1 WRITE statement must be associated with a sequential file.  A Format 2 WRITE statement must be associated with a relative or indexed file.  </li></div>
<a name="wp1042970"> </a><div class="pSmartList1"><li>The words END-OF-PAGE and EOP are equivalent.</li></div>
<a name="wp1042972"> </a><div class="pSmartList1"><li>If the END-OF-PAGE phrase is used, the file description entry containing <em class="cEmphasis">record-name</em> must have a LINAGE clause.  </li></div>
<a name="wp1042973"> </a><div class="pSmartList1"><li>The ADVANCING PAGE and END-OF-PAGE phrases cannot both be used in the same WRITE statement.</li></div>
<a name="wp1042974"> </a><div class="pSmartList1"><li>A Format 3 WRITE statement must be associated with a sequential file.</li></div>
</ol></div>
<a name="wp1042976"> </a><h3 class="pHeadingRef">
General Rules
</h3>
<div class="pSmartList1"><ol type="1" class="pSmartList1">
<a name="wp1042977"> </a><div class="pSmartList1"><li>The file associated with <em class="cEmphasis">record-name</em> must be open when the WRITE statement executes.  For sequential access mode files, the file must be open in the OUTPUT or EXTEND modes.  For random and dynamic access mode files, the file must be open in the OUTPUT, I-O, or EXTEND mode.  </li></div>
<a name="wp1042978"> </a><div class="pSmartList1"><li>The WRITE statement adds the contents of <em class="cEmphasis">record-name</em> to the file according to the following rules:</li></div>
<div class="pSmartList2"><ol type="a" class="pSmartList2">
<a name="wp1042979"> </a><div class="pSmartList2"><li>For sequential access mode files, the record is added to the end of the file.  If the file is indexed, the record's primary key must contain a value that is larger than all of the primary keys currently in the file.  If a relative file has a RELATIVE KEY data item specified for it, the record number of the added record is moved to this data item when the WRITE statement completes.  </li></div>
<a name="wp1042980"> </a><div class="pSmartList2"><li>For random and dynamic access mode files, the record is inserted into the file according to its key value.  For relative files, the record is placed at the record number described by the file's RELATIVE KEY data item.  For indexed files, the values of <em class="cEmphasis">record-name's</em> key items are used to insert the record in the file to maintain the correct key orderings.</li></div>
</ol></div>
<a name="wp1042981"> </a><div class="pSmartList1"><li>If the FROM phrase is used, the <em class="cEmphasis">source</em> item is moved to <em class="cEmphasis">record-name</em> according to the rules of the MOVE statement before <em class="cEmphasis">record-name</em> is written to the file.  </li></div>
<a name="wp1042982"> </a><div class="pSmartList1"><li>The FILE STATUS data item is updated by the WRITE statement.  </li></div>
<a name="wp1042983"> </a><div class="pSmartList1"><li>Some sequential files are considered to be print files.  A print file has page positioning information specified in it along with the record data.  A file with the PRINT option of the ASSIGN clause specified for it is a print file.  A file that is referenced by any WRITE statement that contains an ADVANCING phrase is also a print file.  </li></div>
<a name="wp1042987"> </a><div class="pSmartList1"><li>If the ADVANCING phrase is specified, the file is treated as a print file and the following occurs: </li></div>
<div class="pSmartList2"><ol type="a" class="pSmartList2">
<a name="wp1042988"> </a><div class="pSmartList2"><li>If <em class="cEmphasis">number</em> is positive, the representation of the printed page is advanced a number of lines equal to that value.  </li></div>
<a name="wp1042989"> </a><div class="pSmartList2"><li>If <em class="cEmphasis">number</em> is zero, no repositioning of the representation of the printed page is performed.  </li></div>
<a name="wp1042990"> </a><div class="pSmartList2"><li>If the PAGE phrase is used, the representation of the printed page is advanced to the next page boundary.  If the associated file has a LINAGE clause specified for it, this is done by spacing the appropriate number of lines.  Otherwise this is done by physically advancing the device to the top of the next physical page. </li></div>
<a name="wp1042992"> </a><div class="pSmartList2"><li>If the BEFORE phrase is specified, the page advancement specified occurs after <em class="cEmphasis">record-name</em> is added to the file.</li></div>
<a name="wp1042993"> </a><div class="pSmartList2"><li>If the AFTER phrase is used, the page advancement specified occurs before <em class="cEmphasis">record-name</em> is added to the file.</li></div>
<a name="wp1042994"> </a><div class="pSmartList2"><li>If no ADVANCING phrase is specified, and the file is a print file, AFTER ADVANCING 1 LINE is implied.  </li></div>
</ol></div>
<a name="wp1042996"> </a><div class="pSmartList1"><li>The invalid key condition exists when any of the following occur: </li></div>
<div class="pSmartList2"><ol type="a" class="pSmartList2">
<a name="wp1042997"> </a><div class="pSmartList2"><li>A relative file record is written in the random or dynamic access modes, and the record number indicated by the RELATIVE KEY data item is already used by another record.  </li></div>
<a name="wp1042998"> </a><div class="pSmartList2"><li>An indexed file record is written and the primary key value in <em class="cEmphasis">record-name</em> is used by another record already in the file.</li></div>
<a name="wp1042999"> </a><div class="pSmartList2"><li>An alternate key value in <em class="cEmphasis">record-name</em> is already being used by a record in the file, and that alternate key does not allow for duplicates.</li></div>
</ol></div>
<a name="wp1043000"> </a><div class="pSmartList1"><li>When the invalid-key condition exists, the WRITE statement is unsuccessful and the following occurs:</li></div>
<div class="pSmartList2"><ol type="a" class="pSmartList2">
<a name="wp1043001"> </a><div class="pSmartList2"><li>If the INVALID KEY phrase is specified, <em class="cEmphasis">statement-1</em> executes; otherwise</li></div>
<a name="wp1043002"> </a><div class="pSmartList2"><li>If an appropriate USE AFTER EXCEPTION procedure exists, that error procedure executes; otherwise</li></div>
<a name="wp1043003"> </a><div class="pSmartList2"><li>A message is printed and the program halts.</li></div>
</ol></div>
<a name="wp1043004"> </a><div class="pSmartList1"><li>If the WRITE statement is successful and the NOT INVALID KEY phrase is specified, <em class="cEmphasis">statement-2</em> is executed.</li></div>
<a name="wp1043005"> </a><div class="pSmartList1"><li>The ordering of indexed file keys for alternate keys that allow duplicates is the order in which the records are written to the file for those duplicated values.  </li></div>
<a name="wp1043006"> </a><div class="pSmartList1"><li>The current file position is not modified by the WRITE statement.  </li></div>
<a name="wp1043007"> </a><div class="pSmartList1"><li>The logical size of the record written to the file is the size of <em class="cEmphasis">record-name</em>.  The physical size may be different due to physical characteristics of the file.</li></div>
<a name="wp1043008"> </a><div class="pSmartList1"><li>If the file associated with <em class="cEmphasis">record-name</em> has a LINAGE clause, the following rules apply:</li></div>
<div class="pSmartList2"><ol type="a" class="pSmartList2">
<a name="wp1043011"> </a><div class="pSmartList2"><li>An <em class="cEmphasis">automatic page overflow</em> condition occurs when the WRITE statement cannot be fully accommodated in the page body.  This occurs when the WRITE statement would cause the LINAGE-COUNTER to exceed the number of lines in the page body specified by the LINAGE clause.  When this happens, the line is presented before or after (depending on the phrase used) the device is positioned to the first line of the next logical page.  </li></div>
<a name="wp1043012"> </a><div class="pSmartList2"><li>An <em class="cEmphasis">end-of-page</em> condition occurs when the WRITE statement causes printing or spacing in the footing area of the page body.  This occurs when the WRITE statement causes the LINAGE-COUNTER to equal or exceed the value of the FOOTING phrase of the associated LINAGE clause.  If no FOOTING phrase is present, then the end-of-page condition cannot occur.  Note that the end-of-page condition does not imply any automatic device positioning. </li></div>
<a name="wp1043013"> </a><div class="pSmartList2"><li>If the END-OF-PAGE phrase is used, then <em class="cEmphasis">statement-1</em> executes if either an automatic page overflow or an end-of-page condition exists.  Otherwise <em class="cEmphasis">statement-2</em> executes (if specified).</li></div>
</ol></div>
<a name="wp1043014"> </a><div class="pSmartList1"><li>The WRITE statement removes trailing spaces from <em class="cEmphasis">record-name</em> if the file specifies trailing-space suppression. For related information, see:</li></div>
<div class="pSmartList2"><ul class="pSmartList2">
<a name="wp1125122"> </a><div class="pSmartList2"><li>General Rule number 7b (above)</li></div>
<a name="wp1125166"> </a><div class="pSmartList2"><li><a  href="gt348.htm#wp1034858"><span style="font-family: Arial, Verdana, Helvetica, sans-serif">Section 4.3.1, &quot;File-Control Paragraph&quot;</span></a></li></div>
<a name="wp1125167"> </a><div class="pSmartList2"><li><a  href="gt359.htm#wp1034468"><span style="font-family: Arial, Verdana, Helvetica, sans-serif">Section 5.1.7, &quot;File Types&quot;</span></a> under &quot;Text Records&quot;  </li></div>
<a name="wp1125168"> </a><div class="pSmartList2"><li>Appendix H, Book 4, under the subheading STRIP_TRAILING_SPACES </li></div>
</ul></div>
<a name="wp1043019"> </a><div class="pSmartList1"><li>A Format 3 WRITE statement writes the data in record-name to its file without any additional carriage-control information.  In addition, if the NO&#160;CONVERSION option is specified, no trailing spaces are removed from the record, even if they otherwise would be.  Use this to send information to devices when carriage-control is inappropriate, for example, when sending a form to a laser printer.  </li></div>
<a name="wp1043021"> </a><div class="pSmartList1"><li>Depending on the host environment, it is possible that records written with a Format 3 WRITE statement cannot later be retrieved with a READ statement. </li></div>
</ol></div>
<a name="wp1078959"> </a><p class="pNote">
<hr />
<b>Note:  </b>For configuration variables related to the WRITE statement, see Appendix H, Book 4, <em class="cEmphasis">Appendices</em> under:  CARRIAGE_CONTROL_FILTER, COMPRESS_FACTOR, FLUSH_COUNT, FLUSH_ON_ACCEPT, MIN_REC_SIZE, PAGE_EJECT_ON_CLOSE, STRIP_TRAILING_SPACES, V_BUFFERS, and V_BUFFER_DATA.
<hr />
</p>
<a name="wp1033784"> </a><p class="pBody">

</p>
 </blockquote>

 <hr />

 <table align="left" border="0" cellspacing="0" cellpadding="0">
   <tr>
     <td align="left" width="300">
       <span style="font-size: 12px ; font-weight: bold ; font-family: Arial, Helvetica, sans-serif">
         <a href="http://www.acucorp.com">Acucorp, Inc.</a><br />
       </span>
       <span style="font-size: 10px ; font-family: Arial, Helvetica, sans-serif">
         Voice: 800.262.6585 (U.S.A. and Canada)<br />
         Voice: 858.689.4500<br />
         Fax: 858.689.4550<br />
         Please share your comments on this manual<br />
         or on any Acucorp documentation with the<br />
         <a href="mailto:docfeedback@acucorp.com">Acucorp Communications Department</a>.<br />
       </span>
     </td>
   </tr>
 </table>

<script type="text/javascript" language="JavaScript1.2">
   <!--
    document.write(WWHRelatedTopicsDivTag() + WWHPopupDivTag());
   // -->
  </script>

 
</body>
</html>
