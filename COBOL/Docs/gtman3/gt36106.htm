<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />
  <meta http-equiv="Content-Style-Type" content="text/css" />
  <meta name="GENERATOR" content="Quadralay WebWorks Publisher Professional Edition 7.0.5.1025" />
  <meta name="TEMPLATEBASE" content="Acucorp WWH" />
  <meta name="LASTUPDATED" content="06/14/06 08:28:08" />
  <title>DISPLAY control-type-name</title>
  <link rel="StyleSheet" href="document.css" type="text/css" />
  <link rel="StyleSheet" href="catalog.css" type="text/css" />
<script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/context.js"></script>
  <script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/towwhdir.js"></script>
  <script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/wwhpagef.js"></script>

  <script type="text/javascript" language="JavaScript1.2">
   <!--
    // Set reference to top level help frame
    //
    var  WWHFrame = WWHGetWWHFrame("");
   // -->
  </script>
 </head>

 <body onLoad="WWHUpdate();">

    <a href="../docs.htm" target="acudoc"><img src="images/sbooks.gif" width="70" height="27" border="0" alt="Books" align="right" /></a>
    <span style="font-size: 18px ; font-weight: bold"><font face="Arial, Helvetica, sans-serif">
       ACUCOBOL-GT Reference Manual <br />
    </font></span>
    <span style="font-size: 14px ; font-weight: bold"><font face="Arial, Helvetica, sans-serif">
       Version 7.2
     </font></span>

 <p />

 <blockquote>
<p class="breadcrumb"><a href="gt36.htm"><br />Chapter 6:  Procedure Division</a> &gt; <a href="gt3678.htm">6.6  Procedure Division Statements </a> &gt; </p>
<a name="wp1038656"> </a><h2 class="pHeading2">
DISPLAY control-type-name
</h2>
<a name="wp1038659"> </a><h3 class="pHeadingRef">
Format 14
</h3>
<a name="wp1038661"> </a><p class="pBody">
<span class="cBoldItalic">DISPLAY control-type-name</span> creates a graphical control, including a graphical ActiveX or COM control.
</p>
<div class="pPreformatted"><pre class="pPreformatted">
<u class="cUnderline">DISPLAY</u> {control-type-name  }<a name="wp1038662"> </a>
        {<u class="cUnderline">OBJECT</u> control-type}<a name="wp1038663"> </a>
<a name="wp1038664"> </a>
 [ title ]<a name="wp1038665"> </a>
<a name="wp1038666"> </a>
 [ <u class="cUnderline">UPON</u> new-window ]<a name="wp1038667"> </a>
</pre></div>
<a name="wp1038668"> </a><p class="pBody">
Remaining phrases are optional, can appear in any order.
</p>
<div class="pPreformatted"><pre class="pPreformatted">
{<u class="cUnderline">IDENTIFICATION</u>} {IS} control-id<a name="wp1038669"> </a>
{<u class="cUnderline">ID</u>            } {= }<a name="wp1038670"> </a>
<a name="wp1038671"> </a>
<u class="cUnderline">AT</u> screen-loc   [<u class="cUnderline">CELL</u>  ]<a name="wp1038672"> </a>
                [<u class="cUnderline">CELLS</u> ]<a name="wp1038673"> </a>
                [<u class="cUnderline">PIXEL</u> ]<a name="wp1038674"> </a>
                [<u class="cUnderline">PIXELS</u>]<a name="wp1038675"> </a>
<a name="wp1038676"> </a>
AT <u class="cUnderline">LINE</u> NUMBER line-num   [<u class="cUnderline">CELL</u>  ]<a name="wp1038677"> </a>
                          [<u class="cUnderline">CELLS</u> ]<a name="wp1038678"> </a>
                          [<u class="cUnderline">PIXEL</u> ]<a name="wp1038679"> </a>
                          [<u class="cUnderline">PIXELS</u>]<a name="wp1038680"> </a>
<a name="wp1038681"> </a>
AT {<u class="cUnderline">COLUMN</u>  } NUMBER col-num   [<u class="cUnderline">CELL</u>  ]<a name="wp1038682"> </a>
   {<u class="cUnderline">COL</u>     }                  [<u class="cUnderline">CELLS</u> ]<a name="wp1038683"> </a>
   {<u class="cUnderline">POSITION</u>}                  [<u class="cUnderline">PIXEL</u> ]<a name="wp1038684"> </a>
   {<u class="cUnderline">POS</u>     }                  [<u class="cUnderline">PIXELS</u>]<a name="wp1038685"> </a>
<a name="wp1038686"> </a>
AT <u class="cUnderline">CLINE</u> NUMBER cline-num   [CELL ]<a name="wp1038687"> </a>
                            [CELLS]<a name="wp1038688"> </a>
<a name="wp1038689"> </a>
AT <u class="cUnderline">CCOL</u> NUMBER ccol-num   [CELL ]<a name="wp1038690"> </a>
                          [CELLS]<a name="wp1038691"> </a>
<a name="wp1038692"> </a>
<u class="cUnderline">SIZE</u>  {IS} length [<u class="cUnderline">CELL</u>  ]<a name="wp1038693"> </a>
      {= }        [<u class="cUnderline">CELLS </u>]<a name="wp1038694"> </a>
                  [<u class="cUnderline">PIXEL</u> ]<a name="wp1038695"> </a>
                  [<u class="cUnderline">PIXELS</u>]<a name="wp1038696"> </a>
<a name="wp1038697"> </a>
<u class="cUnderline">LINES</u> {IS} height [<u class="cUnderline">CELL</u>  ]<a name="wp1038698"> </a>
      {= }        [<u class="cUnderline">CELLS </u>]<a name="wp1038699"> </a>
                  [<u class="cUnderline">PIXEL</u> ]<a name="wp1038700"> </a>
                  [<u class="cUnderline">PIXELS</u>]<a name="wp1038701"> </a>
<a name="wp1038702"> </a>
<u class="cUnderline">CSIZE</u>   {IS} clength  [<u class="cUnderline">CELL</u> ]<a name="wp1038704"> </a>
        {= }          [<u class="cUnderline">CELLS</u>]<a name="wp1038705"> </a>
<a name="wp1038706"> </a>
<u class="cUnderline">CLINES</u>  {IS} cheight  [<u class="cUnderline">CELL</u> ]<a name="wp1038707"> </a>
        {= }          [<u class="cUnderline">CELLS</u>]<a name="wp1038708"> </a>
<a name="wp1038709"> </a>
<u class="cUnderline">MAX-HEIGHT</u> {IS} max-height<a name="wp1095119"> </a>
           {= }<a name="wp1095120"> </a>
<a name="wp1095121"> </a>
<u class="cUnderline">MAX-WIDTH</u>  {IS} max-width<a name="wp1095122"> </a>
           {= }<a name="wp1095123"> </a>
<a name="wp1095124"> </a>
<u class="cUnderline">MIN-HEIGHT</u> {IS} min-height<a name="wp1095125"> </a>
           {= }<a name="wp1095126"> </a>
<a name="wp1095127"> </a>
<u class="cUnderline">MIN-WIDTH</u>  {IS} min-width<a name="wp1095128"> </a>
           {= }<a name="wp1095129"> </a>
<a name="wp1095130"> </a>
<u class="cUnderline">TITLE</u> {IS} title<a name="wp1038710"> </a>
      {= }<a name="wp1038711"> </a>
<a name="wp1038712"> </a>
<u class="cUnderline">KEY</u>   {IS} key-letter<a name="wp1038713"> </a>
      {= }<a name="wp1038714"> </a>
<a name="wp1038715"> </a>
{<u class="cUnderline">COLOR</u> } IS color-val<a name="wp1038716"> </a>
{<u class="cUnderline">COLOUR</u>}<a name="wp1038717"> </a>
<a name="wp1038718"> </a>
{<u class="cUnderline">FOREGROUND-COLOR</u> } IS fg-color<a name="wp1038719"> </a>
{<u class="cUnderline">FOREGROUND-COLOUR</u>}<a name="wp1038720"> </a>
<a name="wp1038721"> </a>
{<u class="cUnderline">BACKGROUND-COLOR</u> } IS bg-color<a name="wp1038722"> </a>
{<u class="cUnderline">BACKGROUND-COLOUR</u>}<a name="wp1038723"> </a>
<a name="wp1038724"> </a>
{<u class="cUnderline">HIGHLIGHT</u>}<a name="wp1038725"> </a>
{<u class="cUnderline">HIGH</u>     }<a name="wp1038726"> </a>
{<u class="cUnderline">BOLD</u>     }<a name="wp1038727"> </a>
{<u class="cUnderline">LOWLIGHT</u> }<a name="wp1038728"> </a>
{<u class="cUnderline">LOW</u>      }<a name="wp1038729"> </a>
{<u class="cUnderline">STANDARD</u> }<a name="wp1038730"> </a>
<a name="wp1038731"> </a>
{<u class="cUnderline">BACKGROUND-HIGH</u>    }<a name="wp1038732"> </a>
{<u class="cUnderline">BACKGROUND-LOW</u>     }<a name="wp1038733"> </a>
{<u class="cUnderline">BACKGROUND-STANDARD</u>}<a name="wp1038734"> </a>
<a name="wp1038735"> </a>
<u class="cUnderline">STYLE</u> {IS} style-flags<a name="wp1038736"> </a>
      {= }<a name="wp1038737"> </a>
<a name="wp1038738"> </a>
{style-name} ...<a name="wp1038739"> </a>
<a name="wp1038740"> </a>
<u class="cUnderline">VALUE</u> {IS} [ <u class="cUnderline">MULTIPLE</u> ] value [ <u class="cUnderline">LENGTH</u> {IS} length-1 ]<a name="wp1038741"> </a>
      {= } [ <u class="cUnderline">TABLE</u>    ]                {= }<a name="wp1038742"> </a>
<a name="wp1038743"> </a>
<u class="cUnderline">FONT</u> {IS} font-handle<a name="wp1038744"> </a>
     {= }<a name="wp1038745"> </a>
<a name="wp1038746"> </a>
<u class="cUnderline">HANDLE</u> {IN} control-handle<a name="wp1038747"> </a>
       {IS}<a name="wp1038748"> </a>
<a name="wp1081258"> </a>
<u class="cUnderline">LAYOUT-DATA</u> {IS} layout-data<a name="wp1081472"> </a>
            {= }<a name="wp1081473"> </a>
<a name="wp1081474"> </a>
<u class="cUnderline">ENABLED</u>  {IS} {<u class="cUnderline">TRUE</u>         }<a name="wp1081259"> </a>
         {= } {<u class="cUnderline">FALSE</u>        }<a name="wp1081260"> </a>
              {enabled-state}<a name="wp1038752"> </a>
<a name="wp1038753"> </a>
<u class="cUnderline">VISIBLE</u>  {IS} {<u class="cUnderline">TRUE</u>         }<a name="wp1038754"> </a>
         {= } {<u class="cUnderline">FALSE</u>        }<a name="wp1038755"> </a>
              {visible-state}<a name="wp1038756"> </a>
<a name="wp1038757"> </a>
POP-UP <u class="cUnderline">MENU</u> {IS}  {menu-1}<a name="wp1038758"> </a>
            {= }  {<u class="cUnderline">NULL</u>}<a name="wp1038759"> </a>
<a name="wp1038760"> </a>
<u class="cUnderline">HELP-ID</u> {IS} help-id<a name="wp1038761"> </a>
        {= }<a name="wp1038762"> </a>
<a name="wp1038763"> </a>
<u class="cUnderline">EVENT-LIST</u>    {IS} ( event-value { event-value ... } )<a name="wp1170881"> </a>
              {= }<a name="wp1170882"> </a>
<a name="wp1170883"> </a>
<u class="cUnderline">AX-EVENT-LIST</u> {IS} ( ax-event-value { ax-event-value ... } )<a name="wp1170884"> </a>
              {= }<a name="wp1170885"> </a>
<a name="wp1170886"> </a>
<u class="cUnderline">EXCLUDE-EVENT-LIST</u> {IS} list-state<a name="wp1170887"> </a>
                   {= }<a name="wp1170888"> </a>
<a name="wp1170891"> </a>
<u class="cUnderline">EVENT</u> PROCEDURE IS { proc-1 [ {<u class="cUnderline">THROUGH</u>} proc-2 ] }<a name="wp1038764"> </a>
                              {<u class="cUnderline">THRU</u>   }<a name="wp1038765"> </a>
                   { <u class="cUnderline">NULL</u>                        }<a name="wp1038766"> </a>
<a name="wp1038767"> </a>
{{property-name         } {IS } property-option <a name="wp1038768"> </a>
                                        [GIVING result-1]}. ...<a name="wp1123230"> </a>
 {<u class="cUnderline">PROPERTY</u> property-type} {ARE}<a name="wp1038769"> </a>
</pre></div>
<a name="wp1038770"> </a><p class="pBody">
where <em class="cEmphasis">property-option</em> is one of the following:
</p>
<div class="pPreformatted"><pre class="pPreformatted">
    { property-value [ LENGTH {IS} length-1 ] }<a name="wp1038771"> </a>
    {                         {= }            }<a name="wp1038772"> </a>
    { ( {property-value} ... )                }<a name="wp1038773"> </a>
    {                                         }<a name="wp1038774"> </a>
    { {<u class="cUnderline">MULTIPLE</u>} property-table               }<a name="wp1038775"> </a>
    { {<u class="cUnderline">TABLE</u>   }                              }<a name="wp1038776"> </a>
</pre></div>
<a name="wp1038778"> </a><h3 class="pHeadingRef">
Syntax Rules
</h3>
<div class="pSmartList1"><ol type="1" class="pSmartList1">
<a name="wp1038779"> </a><div class="pSmartList1"><li>Different formats of the DISPLAY statement may be mixed together in one DISPLAY statement, as long as no ambiguity results.  The effect is the same as specifying each DISPLAY statement separately.</li></div>
<a name="wp1038780"> </a><div class="pSmartList1"><li><em class="cEmphasis">Control-type-name</em> is one of the control type reserved words known by the compiler.  </li></div>
<a name="wp1038781"> </a><div class="pSmartList1"><li><em class="cEmphasis">Control-type</em> is a numeric literal or data item.  </li></div>
<a name="wp1038782"> </a><div class="pSmartList1"><li><em class="cEmphasis">New-window</em> is a USAGE HANDLE or PIC X(10) data items.  If used, the UPON phrase must be the first optional phrase specified.  </li></div>
<a name="wp1038783"> </a><div class="pSmartList1"><li><em class="cEmphasis">Control-id</em> is an integer numeric literal or data item.  Its value should be in the range of 0 to 32767.</li></div>
<a name="wp1038784"> </a><div class="pSmartList1"><li><em class="cEmphasis">Screen-loc</em> is an integer data item or literal containing exactly 4, 6, or 8 digits.  It may also be a group item of 4, 6, or 8 characters.  If a numeric item is used, it must be a non-negative integer.</li></div>
<a name="wp1038785"> </a><div class="pSmartList1"><li><em class="cEmphasis">Line-num</em>, <em class="cEmphasis">col-num</em>, <em class="cEmphasis">cline-num, ccol-num, length, height, clength, and cheight </em>are numeric data items or literals.  They may be non-integer values, except when pixels are specified.  You can also specify the value of any of these items with an arithmetic expression.  </li></div>
<a name="wp1095170"> </a><div class="pSmartList1"><li><em class="cEmphasis">Max-height</em>, <em class="cEmphasis">max-width</em>, <em class="cEmphasis">min-height</em>, and <em class="cEmphasis">min-width</em> are numeric data items or literals.</li></div>
<a name="wp1038786"> </a><div class="pSmartList1"><li><em class="cEmphasis">Color-val</em> is a numeric data item or literal.  <em class="cEmphasis">Color-val </em>can also be an arithmetic expression. </li></div>
<a name="wp1038787"> </a><div class="pSmartList1"><li><em class="cEmphasis">Fg-color</em> and <em class="cEmphasis">bg-color</em> are integer literals or numeric data items. They may be arithmetic expressions.  See <a  href="gt3630.htm#wp1034866">section 6.4.9</a>, &quot;FOREGROUND-COLOR and BACKGROUND-COLOR Phrases&quot;, for a more detailed discussion of color settings and values. </li></div>
<a name="wp1038789"> </a><div class="pSmartList1"><li><em class="cEmphasis">Title</em> is an alphanumeric literal or data item.  In Format 14, <em class="cEmphasis">title</em> may appear only once, either in a TITLE phrase or the initial <em class="cEmphasis">title</em> option.  The <em class="cEmphasis">title</em> option must be the first option specified.  </li></div>
<a name="wp1038790"> </a><div class="pSmartList1"><li><em class="cEmphasis">Key-letter</em> is an alphanumeric literal or data item.</li></div>
<a name="wp1038791"> </a><div class="pSmartList1"><li><em class="cEmphasis">Font-handle </em>is a data item of type USAGE HANDLE or HANDLE OF FONT.  </li></div>
<a name="wp1038792"> </a><div class="pSmartList1"><li><em class="cEmphasis">Style-flags</em> is a numeric expression.  </li></div>
<a name="wp1038793"> </a><div class="pSmartList1"><li><em class="cEmphasis">Style-name</em> is the name of a style associated with the class of control being described.  If <em class="cEmphasis">control-type-name</em> is omitted, then you may not use the <em class="cEmphasis">style-name</em> phrase.  You may use the STYLE phrase instead.  </li></div>
<a name="wp1038794"> </a><div class="pSmartList1"><li><em class="cEmphasis">Value</em> is a literal or data item.  If the MULTIPLE option is specified, then <em class="cEmphasis">value</em> must be a one-dimensional table.  In this case, <em class="cEmphasis">value</em> is not subscripted.  </li></div>
<a name="wp1038795"> </a><div class="pSmartList1"><li><em class="cEmphasis">Length-1</em> is a numeric literal or data item.  The LENGTH phrase may be specified only if the immediately preceding <em class="cEmphasis">value</em> or <em class="cEmphasis">property-value</em> is an alphanumeric literal or data item, and not a figurative constant.  In addition, the MULTIPLE option may not be specified along with the LENGTH phrase. </li></div>
<a name="wp1038796"> </a><div class="pSmartList1"><li><em class="cEmphasis">Control-handle </em>is a USAGE HANDLE data item.  </li></div>
<a name="wp1081488"> </a><div class="pSmartList1"><li><em class="cEmphasis">Layout-data</em> is an integer literal, data item, or expression.</li></div>
<a name="wp1038797"> </a><div class="pSmartList1"><li><em class="cEmphasis">Enabled-state</em>, <em class="cEmphasis">visible-state</em>, and <em class="cEmphasis">help-id</em> are integer numeric literals or data items.</li></div>
<a name="wp1038798"> </a><div class="pSmartList1"><li><em class="cEmphasis">Menu-1</em> is a USAGE HANDLE or HANDLE OF MENU data item.</li></div>
<a name="wp1170957"> </a><div class="pSmartList1"><li><em class="cEmphasis">Event-value</em> and <em class="cEmphasis">ax-event-value</em> are numeric literals or data items that identify an event type.  List elements must be enclosed in parentheses. Elements must be separated by a space.  If the list contains a single element, the parentheses can be omitted.</li></div>
<a name="wp1170958"> </a><div class="pSmartList1"><li><em class="cEmphasis">List-state</em> is an integer literal or numeric data item.  Valid values are &quot;0&quot; and &quot;1&quot;.</li></div>
<a name="wp1038799"> </a><div class="pSmartList1"><li><em class="cEmphasis">Proc-1</em> and <em class="cEmphasis">proc-2</em> are procedure names.</li></div>
<a name="wp1038800"> </a><div class="pSmartList1"><li><em class="cEmphasis">Property-name</em> is the name of a property specific to the type of control being referenced.  If the type of control is unknown to the compiler (as in a &quot;DISPLAY OBJECT object-1&quot; statement), then <em class="cEmphasis">property-name</em> may not be used.  You must use the PROPERTY <em class="cEmphasis">property-type</em> option instead.  </li></div>
<a name="wp1038801"> </a><div class="pSmartList1"><li><em class="cEmphasis">Property-type </em>is a numeric literal or data item.  It identifies the property to modify.  The numeric values that identify the various control properties can be found in the COPY library &quot;controls.def&quot;. </li></div>
<a name="wp1038802"> </a><div class="pSmartList1"><li><em class="cEmphasis">Property-value</em> is a literal or data item.  <em class="cEmphasis">Property-value</em> may also be a numeric expression (however, only the first <em class="cEmphasis">property-value</em> in a phrase may be an expression, subsequent values must be literals or data items).  When multiple values are specified, the parentheses are required.  An example of their use is: DISPLAY-COLUMNS = ( 1, 20 )</li></div>
<a name="wp1038803"> </a><div class="pSmartList1"><li><em class="cEmphasis">Property-table</em> is a data item that appears in a one-dimensional table.  No index should be specified.  </li></div>
<a name="wp1038804"> </a><div class="pSmartList1"><li><em class="cEmphasis">Result-1</em> is a numeric data item.  </li></div>
<a name="wp1038805"> </a><div class="pSmartList1"><li>If the <em class="cEmphasis">title</em> option is used, it must be the first optional phrase.</li></div>
<a name="wp1038806"> </a><div class="pSmartList1"><li>If the UPON phrase is specified, it must be the first optional phrase, except when the <em class="cEmphasis">title</em> option is used, then the UPON phrase must be second, following the <em class="cEmphasis">title</em> phrase. </li></div>
<a name="wp1038807"> </a><div class="pSmartList1"><li>If the AT phrase is specified, neither the LINE nor the COLUMN phrase may be specified.</li></div>
<a name="wp1038808"> </a><div class="pSmartList1"><li>If the COLOR phrase is specified, neither the FOREGROUND-COLOR nor the BACKGROUND-COLOR phrase may be specified. </li></div>
<a name="wp1038809"> </a><div class="pSmartList1"><li>If the CELLS option is used in either the SIZE or CSIZE phrase, it must be present in both phrases if both are specified.  The same rule applies to the CELLS option in the LINES and CLINES phrases.  </li></div>
<a name="wp1038810"> </a><div class="pSmartList1"><li>The HANDLE phrase may be specified anywhere in the statement after the required initial elements.  </li></div>
<a name="wp1038811"> </a><div class="pSmartList1"><li>IS and &quot;=&quot; are synonymous.  </li></div>
<a name="wp1038812"> </a><div class="pSmartList1"><li>COLUMN, COL, POSITION, and POS are equivalent.</li></div>
<a name="wp1038813"> </a><div class="pSmartList1"><li>HIGHLIGHT, HIGH, and BOLD are synonymous.</li></div>
<a name="wp1038814"> </a><div class="pSmartList1"><li>LOWLIGHT and LOW are equivalent.  </li></div>
<a name="wp1038815"> </a><div class="pSmartList1"><li>COLOR and COLOUR are synonymous.  </li></div>
<a name="wp1038816"> </a><div class="pSmartList1"><li>FOREGROUND-COLOR and FOREGROUND-COLOUR are synonymous.  </li></div>
<a name="wp1038817"> </a><div class="pSmartList1"><li>BACKGROUND-COLOR and BACKGROUND-COLOUR are synonymous.  </li></div>
<a name="wp1038818"> </a><div class="pSmartList1"><li>MULTIPLE and TABLE are synonymous.  </li></div>
</ol></div>
<a name="wp1038820"> </a><h3 class="pHeadingRef">
General Rules
</h3>
<div class="pSmartList1"><ol type="1" class="pSmartList1">
<a name="wp1038822"> </a><div class="pSmartList1"><li>The DISPLAY control-type-name verb creates a new control and displays it on the screen.  A handle to the new control is returned in <em class="cEmphasis">control-handle</em>.  The handle is used in future references to the control.  If <em class="cEmphasis">control-handle</em> is not specified, the control is an <em class="cEmphasis">anonymous</em> <em class="cEmphasis">control</em>.  Anonymous controls can be referenced in future statements only by position.  </li></div>
<a name="wp1038823"> </a><div class="pSmartList1"><li><em class="cEmphasis">Control-type-name</em> identifies the type of the control.  The exact set of controls available and their types are discussed in Chapter 5, Book&#160;2, <em class="cEmphasis">User Interface Programming.</em>  Use OBJECT <em class="cEmphasis">control-type</em> when the control type is not known at compile time.  At run time, <em class="cEmphasis">control-type</em> must contain the identifying number of a control type known to the system.  If it does not correspond to any control type, the DISPLAY statement is ignored and <em class="cEmphasis">control-handle</em> is set to NULL.  The identifying number of each control type is defined in the &quot;controls.def&quot; COPY file.  </li></div>
<a name="wp1038824"> </a><div class="pSmartList1"><li>The LENGTH option of the VALUE and property phrases establishes the exact size of the source data to use.  Without the LENGTH option, a text value presented to the control is the data contained in the COBOL data element with trailing spaces removed.  When you specify the LENGTH option, exactly <em class="cEmphasis">length-1</em> characters of the data are used instead.  No trailing space removal occurs.  This is useful in a few cases when you need to treat trailing spaces as data.  </li></div>
<a name="wp1038825"> </a><p class="pIndented1">
If <em class="cEmphasis">length-1</em> is a value larger than the size of the data item it is modifying, then the size of the data item is used instead.  If <em class="cEmphasis">length-1</em> is negative, it is ignored and the default handling occurs.  
</p>
<a name="wp1038826"> </a><div class="pSmartList1"><li>Some properties return specific values when set.  These values are placed in <em class="cEmphasis">result-1</em> of the GIVING phrase.  The meaning of the value depends on the property being set; see the documentation for the specific property.  Properties that do not have a pre-defined return value set <em class="cEmphasis">result-1</em> to &quot;1&quot; if the property was set successfully, or &quot;0&quot; if not.  When a property is being given multiple values in a single assignment (for example: &quot;Display-Columns = (1, 10, 30)&quot;), then <em class="cEmphasis">result-1</em> is set in response to the last value assigned.  </li></div>
<a name="wp1038828"> </a><div class="pSmartList1"><li>After the DISPLAY statement is executed, the cursor is positioned at the first whole column immediately to the right of the control.  If this column is past the right edge of the current subwindow, the cursor is not moved from its previous location.  </li></div>
<a name="wp1038829"> </a><div class="pSmartList1"><li>Once created, a control remains in existence until one of the following events:</li></div>
<div class="pSmartList2"><ol type="a" class="pSmartList2">
<a name="wp1038830"> </a><div class="pSmartList2"><li>The control is explicitly destroyed with a DESTROY verb; or,</li></div>
<a name="wp1038831"> </a><div class="pSmartList2"><li>if the control has the TEMPORARY style, the control is &quot;overwritten&quot; (as defined in <a  href="gt3512.htm#wp1034544">section 5.2, &quot;Data Names&quot;</a>); or</li></div>
<a name="wp1038832"> </a><div class="pSmartList2"><li>the window containing the control is destroyed.</li></div>
</ol></div>
<a name="wp1038834"> </a><div class="pSmartList1"><li>Under some systems, controls do not interact properly with <em class="cEmphasis">pop-up</em> subwindows.  This is due to the fact that the controls are maintained by the GUI directly while pop-up subwindows are managed by the ACUCOBOL-GT runtime system.  Since the GUI is not aware of the pop-up nature of the subwindow, it displays the control over the subwindow, even if the program's intent is to have the pop-up subwindow on top.  For this reason, pop-up subwindows are not recommended for programs that will be using graphical controls.  You should use floating windows instead. </li></div>
<a name="wp1038837"> </a><div class="pSmartList1"><li>The POP-UP MENU phrase associates a pop-up menu with the control.  If <em class="cEmphasis">menu-1</em> is specified, then the menu associated with <em class="cEmphasis">menu-1 </em>becomes the pop-up menu.  If NULL is specified, the control is not given a pop-up menu.  Pop-up menus are activated by a machine-dependent technique.  Under Windows, the technique is to right-click on the control.  </li></div>
<a name="wp1038838"> </a><div class="pSmartList1"><li>See <a  href="gt3630.htm#wp1034866">section 6.4.9, &quot;Common Screen Options,&quot;</a> for a description of the remaining optional phrases.  Any phrases not described there behave in the same manner as in a Format 1 DISPLAY statement.  </li></div>
<a name="wp1153503"> </a><div class="pSmartList1"><li>The runtime ignores events from all controls while it is creating an ActiveX control, via the DISPLAY statement or otherwise.  If you are using a control that delivers significant information using events and you don't want to miss those events while you are creating a new control, set the CONTROL_CREATION_EVENTS runtime configuration variable to &quot;1&quot; (On, True, Yes). Alternatively, you could avoid creating an ActiveX control when you are expecting an event.</li></div>
</ol></div>
 </blockquote>

 <hr />

 <table align="left" border="0" cellspacing="0" cellpadding="0">
   <tr>
     <td align="left" width="300">
       <span style="font-size: 12px ; font-weight: bold ; font-family: Arial, Helvetica, sans-serif">
         <a href="http://www.acucorp.com">Acucorp, Inc.</a><br />
       </span>
       <span style="font-size: 10px ; font-family: Arial, Helvetica, sans-serif">
         Voice: 800.262.6585 (U.S.A. and Canada)<br />
         Voice: 858.689.4500<br />
         Fax: 858.689.4550<br />
         Please share your comments on this manual<br />
         or on any Acucorp documentation with the<br />
         <a href="mailto:docfeedback@acucorp.com">Acucorp Communications Department</a>.<br />
       </span>
     </td>
   </tr>
 </table>

<script type="text/javascript" language="JavaScript1.2">
   <!--
    document.write(WWHRelatedTopicsDivTag() + WWHPopupDivTag());
   // -->
  </script>

 
</body>
</html>
