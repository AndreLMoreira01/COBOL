<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />
  <meta http-equiv="Content-Style-Type" content="text/css" />
  <meta name="GENERATOR" content="Quadralay WebWorks Publisher Professional Edition 7.0.5.1025" />
  <meta name="TEMPLATEBASE" content="Acucorp WWH" />
  <meta name="LASTUPDATED" content="06/14/06 08:28:08" />
  <title>DISPLAY INITIAL WINDOW</title>
  <link rel="StyleSheet" href="document.css" type="text/css" />
  <link rel="StyleSheet" href="catalog.css" type="text/css" />
<script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/context.js"></script>
  <script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/towwhdir.js"></script>
  <script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/wwhpagef.js"></script>

  <script type="text/javascript" language="JavaScript1.2">
   <!--
    // Set reference to top level help frame
    //
    var  WWHFrame = WWHGetWWHFrame("");
   // -->
  </script>
 </head>

 <body onLoad="WWHUpdate();">

    <a href="../docs.htm" target="acudoc"><img src="images/sbooks.gif" width="70" height="27" border="0" alt="Books" align="right" /></a>
    <span style="font-size: 18px ; font-weight: bold"><font face="Arial, Helvetica, sans-serif">
       ACUCOBOL-GT Reference Manual <br />
    </font></span>
    <span style="font-size: 14px ; font-weight: bold"><font face="Arial, Helvetica, sans-serif">
       Version 7.2
     </font></span>

 <p />

 <blockquote>
<p class="breadcrumb"><a href="gt36.htm"><br />Chapter 6:  Procedure Division</a> &gt; <a href="gt3678.htm">6.6  Procedure Division Statements </a> &gt; </p>
<a name="wp1038359"> </a><h2 class="pHeading2">
DISPLAY INITIAL WINDOW
</h2>
<a name="wp1038362"> </a><h3 class="pHeadingRef">
Format 12
</h3>
<a name="wp1038366"> </a><p class="pBody">
<span class="cBoldItalic">DISPLAY INITIAL WINDOW</span> creates and displays the main application window and independent windows.
</p>
<div class="pPreformatted"><pre class="pPreformatted">
<u class="cUnderline">DISPLAY</u> {<u class="cUnderline">INITIAL</u>    } [<u class="cUnderline">GRAPHICAL</u>] <u class="cUnderline">WINDOW</u><a name="wp1038367"> </a>
        {<u class="cUnderline">STANDARD</u>   }<a name="wp1038368"> </a>
        {<u class="cUnderline">INDEPENDENT</u>}<a name="wp1038369"> </a>
</pre></div>
<a name="wp1038370"> </a><p class="pBody">
Remaining phrases are optional, can appear in any order.
</p>
<div class="pPreformatted"><pre class="pPreformatted">
<u class="cUnderline">MODELESS</u><a name="wp1038371"> </a>
<a name="wp1038372"> </a>
<u class="cUnderline">LINK</u> TO <u class="cUnderline">THREAD</u><a name="wp1038373"> </a>
<a name="wp1038374"> </a>
<u class="cUnderline">SCREEN</u> <u class="cUnderline">LINE</u> NUMBER screen-line<a name="wp1038375"> </a>
<a name="wp1038376"> </a>
<u class="cUnderline">SCREEN</u> {<u class="cUnderline">COLUMN</u>  } NUMBER screen-col<a name="wp1038377"> </a>
       {<u class="cUnderline">COL</u>     }<a name="wp1038378"> </a>
       {<u class="cUnderline">POSITION</u>}<a name="wp1038379"> </a>
       {<u class="cUnderline">POS</u>     }<a name="wp1038380"> </a>
<a name="wp1038381"> </a>
<u class="cUnderline">AT</u> screen-loc                       <em class="cEmphasis">(independent only)</em><a name="wp1038382"> </a>
<a name="wp1038383"> </a>
AT <u class="cUnderline">LINE</u> NUMBER screen-line          <em class="cEmphasis">(independent only)</em><a name="wp1038384"> </a>
<a name="wp1038385"> </a>
AT {<u class="cUnderline">COLUMN</u>  } NUMBER screen-col     <em class="cEmphasis">(independent only)</em><a name="wp1038386"> </a>
   {<u class="cUnderline">COL</u>     }<a name="wp1038387"> </a>
   {<u class="cUnderline">POSITION</u>}<a name="wp1038388"> </a>
   {<u class="cUnderline">POS</u>     }<a name="wp1038389"> </a>
<a name="wp1038390"> </a>
<u class="cUnderline">SIZE</u>  length<a name="wp1038391"> </a>
<a name="wp1038392"> </a>
<u class="cUnderline">LINES</u> height<a name="wp1038393"> </a>
<a name="wp1038394"> </a>
<u class="cUnderline">FONT</u> {IS} font-1<a name="wp1038395"> </a>
     {= }<a name="wp1038396"> </a>
<a name="wp1038397"> </a>
<u class="cUnderline">CONTROL</u> <u class="cUnderline">FONT</u> {IS} font-3<a name="wp1038398"> </a>
             {= }<a name="wp1038399"> </a>
<a name="wp1038400"> </a>
<u class="cUnderline">CELL</u> <a name="wp1038401"> </a>
 {<u class="cUnderline">SIZE</u>  } [IS]  {cell-units                                 }<a name="wp1038402"> </a>
 {<u class="cUnderline">HEIGHT</u>} [= ]  {control-type-name  FONT font-2 [<u class="cUnderline">SEPARATE</u>  ]}<a name="wp1038403"> </a>
 {<u class="cUnderline">WIDTH</u> }       {control-type-name  FONT        [<u class="cUnderline">OVERLAPPED</u>]}<a name="wp1038404"> </a>
<a name="wp1038405"> </a>
{<u class="cUnderline">ERASE</u>} SCREEN<a name="wp1038406"> </a>
{<u class="cUnderline">BLANK</u>}<a name="wp1038407"> </a>
<a name="wp1038408"> </a>
{<u class="cUnderline">REVERSE-VIDEO</u>}<a name="wp1038409"> </a>
{<u class="cUnderline">REVERSE</u>      }<a name="wp1038410"> </a>
{<u class="cUnderline">REVERSED</u>     }<a name="wp1038411"> </a>
<a name="wp1038412"> </a>
WITH {<u class="cUnderline">COLOR</u> } color-val<a name="wp1038413"> </a>
     {<u class="cUnderline">COLOUR</u>}<a name="wp1038414"> </a>
<a name="wp1038415"> </a>
{<u class="cUnderline">FOREGROUND-COLOR</u> } IS fg-color<a name="wp1038416"> </a>
{<u class="cUnderline">FOREGROUND-COLOUR</u>}<a name="wp1038417"> </a>
<a name="wp1038418"> </a>
{<u class="cUnderline">BACKGROUND-COLOR</u> } IS bg-color<a name="wp1038419"> </a>
{<u class="cUnderline">BACKGROUND-COLOUR</u>}<a name="wp1038420"> </a>
<a name="wp1038421"> </a>
{<u class="cUnderline">HIGHLIGHT</u>}<a name="wp1038422"> </a>
{<u class="cUnderline">HIGH</u>     }<a name="wp1038423"> </a>
{<u class="cUnderline">BOLD</u>     }<a name="wp1038424"> </a>
{<u class="cUnderline">LOWLIGHT</u> }<a name="wp1038425"> </a>
{<u class="cUnderline">LOW</u>      }<a name="wp1038426"> </a>
{<u class="cUnderline">STANDARD</u> }<a name="wp1038427"> </a>
<a name="wp1038428"> </a>
{<u class="cUnderline">BACKGROUND-HIGH</u>    }<a name="wp1038429"> </a>
{<u class="cUnderline">BACKGROUND-LOW</u>     }<a name="wp1038430"> </a>
{<u class="cUnderline">BACKGROUND-STANDARD</u>}<a name="wp1038431"> </a>
<a name="wp1038432"> </a>
{ [<u class="cUnderline">USER-GRAY</u>] [<u class="cUnderline">USER-WHITE</u>] }<a name="wp1038433"> </a>
{        <u class="cUnderline">USER-COLORS</u>       }<a name="wp1038434"> </a>
<a name="wp1038435"> </a>
<u class="cUnderline">TITLE-BAR</u><a name="wp1038436"> </a>
<a name="wp1038437"> </a>
[<u class="cUnderline">TOP</u>   ] [<u class="cUnderline">CENTERED</u>] <u class="cUnderline">TITLE</u> IS title<a name="wp1038438"> </a>
[<u class="cUnderline">BOTTOM</u>] [<u class="cUnderline">LEFT</u>    ]<a name="wp1038439"> </a>
         [<u class="cUnderline">RIGHT</u>   ]<a name="wp1038440"> </a>
<a name="wp1038441"> </a>
WITH <u class="cUnderline">SYSTEM</u> <u class="cUnderline">MENU</u><a name="wp1038442"> </a>
<a name="wp1038443"> </a>
WITH <u class="cUnderline">NO</u> <u class="cUnderline">SCROLL</u><a name="wp1038444"> </a>
<a name="wp1038445"> </a>
WITH <u class="cUnderline">NO</u> <u class="cUnderline">WRAP</u><a name="wp1038446"> </a>
<a name="wp1038447"> </a>
{<u class="cUnderline">NO-CLOSE</u>}<a name="wp1107762"> </a>
<a name="wp1107763"> </a>
{<u class="cUnderline">AUTO-RESIZE</u>}<a name="wp1038448"> </a>
{<u class="cUnderline">RESIZABLE</u>  }<a name="wp1038449"> </a>
<a name="wp1038450"> </a>
<u class="cUnderline">MIN-SIZE</u>  {= } min-size<a name="wp1038451"> </a>
          {IS}<a name="wp1038452"> </a>
<u class="cUnderline">MAX-SIZE</u>  {= } max-size<a name="wp1038453"> </a>
          {IS}<a name="wp1038454"> </a>
<u class="cUnderline">MIN-LINES</u> {= } min-lines<a name="wp1038455"> </a>
          {IS}<a name="wp1038456"> </a>
<u class="cUnderline">MAX-LINES</u> {= } max-lines<a name="wp1038457"> </a>
          {IS}<a name="wp1038458"> </a>
<a name="wp1038459"> </a>
<u class="cUnderline">AUTO-MINIMIZE</u><a name="wp1038460"> </a>
<a name="wp1038461"> </a>
<u class="cUnderline">CONTROL</u> <u class="cUnderline">VALUE</u> {IS} control-val<a name="wp1038462"> </a>
              {= }<a name="wp1038463"> </a>
<a name="wp1038464"> </a>
<u class="cUnderline">LAYOUT-MANAGER</u> {IS} manager<a name="wp1081057"> </a>
               {= }<a name="wp1081058"> </a>
<a name="wp1081059"> </a>
<u class="cUnderline">VISIBLE</u> {IS} {<u class="cUnderline">TRUE</u>         }<a name="wp1038465"> </a>
        {= } {<u class="cUnderline">FALSE</u>        }<a name="wp1038466"> </a>
             {visible-state}<a name="wp1038467"> </a>
<a name="wp1038468"> </a>
<u class="cUnderline">POP-UP</u> <u class="cUnderline">MENU</u> {IS}  {menu-1}<a name="wp1038469"> </a>
            {= }  {<u class="cUnderline">NULL</u>}<a name="wp1038470"> </a>
<a name="wp1038471"> </a>
{<u class="cUnderline">POP-UP</u> AREA IS  } handle-name<a name="wp1038472"> </a>
{<u class="cUnderline">HANDLE</u>     {IS} }<a name="wp1038473"> </a>
            {IN}<a name="wp1038474"> </a>
<a name="wp1038475"> </a>
<u class="cUnderline">CONTROLS-UNCROPPED</u><a name="wp1038476"> </a>
<a name="wp1038477"> </a>
<u class="cUnderline">EVENT</u> PROCEDURE IS { proc-1 [ {<u class="cUnderline">THROUGH</u>} proc-2 ] }<a name="wp1038478"> </a>
                              {<u class="cUnderline">THRU</u>   }<a name="wp1038479"> </a>
                   { <u class="cUnderline">NULL</u>                        }<a name="wp1038480"> </a>
</pre></div>
<a name="wp1038482"> </a><h3 class="pHeadingRef">
Syntax Rules
</h3>
<div class="pSmartList1"><ol type="1" class="pSmartList1">
<a name="wp1038483"> </a><div class="pSmartList1"><li>Different formats of the DISPLAY statement may be mixed together in one DISPLAY statement, as long as no ambiguity results.  The effect is the same as specifying each DISPLAY statement separately.</li></div>
<a name="wp1038484"> </a><div class="pSmartList1"><li><em class="cEmphasis">Screen-line</em> and <em class="cEmphasis">screen-col</em> are numeric expressions.</li></div>
<a name="wp1038485"> </a><div class="pSmartList1"><li><em class="cEmphasis">Screen-loc</em> is an integer data item or literal containing exactly 4 or 6 digits.  It may also be a group item of 4 or 6 characters.  If a numeric item is used, it must be a non-negative integer.</li></div>
<a name="wp1038486"> </a><div class="pSmartList1"><li><em class="cEmphasis">Line-num</em>, <em class="cEmphasis">col-num, length, </em>and<em class="cEmphasis"> height </em>are numeric data items or literals.  They may be non-integer values.  You can also specify the value of any of these items with an arithmetic expression.  </li></div>
<a name="wp1038487"> </a><div class="pSmartList1"><li><em class="cEmphasis">Font-1, font-2</em> and <em class="cEmphasis">font-3</em> are data items described as USAGE HANDLE or HANDLE OF FONT.  They should contain valid handles to screen fonts.  </li></div>
<a name="wp1038488"> </a><div class="pSmartList1"><li><em class="cEmphasis">Cell-units</em> is a positive integer data item or literal.  </li></div>
<a name="wp1038489"> </a><div class="pSmartList1"><li><em class="cEmphasis">Control-type-name</em> is one of the control type reserved words known by the compiler.  </li></div>
<a name="wp1038490"> </a><div class="pSmartList1"><li><em class="cEmphasis">Color-val</em> is a numeric data item or literal.  <em class="cEmphasis">Color-val </em>can also be an arithmetic expression, except when used in the Screen Section. </li></div>
<a name="wp1038491"> </a><div class="pSmartList1"><li><em class="cEmphasis">Fg-color</em> and <em class="cEmphasis">bg-color</em> are integer literals or numeric data items. They may be arithmetic expressions.  See <a  href="gt3630.htm#wp1034866">section 6.4.9</a>, &quot;FOREGROUND-COLOR and BACKGROUND-COLOR Phrases,&quot; for a more detailed discussion of color settings and values. </li></div>
<a name="wp1038492"> </a><div class="pSmartList1"><li><em class="cEmphasis">Title</em> is an alphanumeric literal or data item.</li></div>
<a name="wp1038493"> </a><div class="pSmartList1"><li><em class="cEmphasis">Min-size, max-size, min-lines</em> and <em class="cEmphasis">max-lines</em> are integer literals or data items.  </li></div>
<a name="wp1038494"> </a><div class="pSmartList1"><li><em class="cEmphasis">Control-value</em> is a numeric expression.</li></div>
<a name="wp1127150"> </a><div class="pSmartList1"><li>The word &quot;NO-CLOSE&quot; is reserved by the compiler only when it appears in a Format 11 or 12 DISPLAY statement.</li></div>
<a name="wp1081118"> </a><div class="pSmartList1"><li><em class="cEmphasis">Manager</em> is a USAGE HANDLE or HANDLE OF LAYOUT-MANAGER that contains a valid reference to a layout manager.</li></div>
<a name="wp1038495"> </a><div class="pSmartList1"><li><em class="cEmphasis">Visible-state</em> is a numeric literal or data item.</li></div>
<a name="wp1038496"> </a><div class="pSmartList1"><li><em class="cEmphasis">Menu-1</em> is a USAGE HANDLE or HANDLE OF MENU data item.</li></div>
<a name="wp1038497"> </a><div class="pSmartList1"><li><em class="cEmphasis">Handle-name</em> is a USAGE HANDLE, HANDLE OF WINDOW, or PIC X(10) data item.</li></div>
<a name="wp1038498"> </a><div class="pSmartList1"><li><em class="cEmphasis">Proc-1</em> and <em class="cEmphasis">proc-2</em> are procedure names.</li></div>
<a name="wp1038499"> </a><div class="pSmartList1"><li>You must compile allowing for recursive paragraphs in order to specify the EVENT PROCEDURE phrase.  Compiling for recursive paragraphs is allowed by default, but can be turned off with the &quot;-Zr0&quot; compiler option.</li></div>
<a name="wp1038500"> </a><div class="pSmartList1"><li>The SCREEN LINE phrase and the SCREEN COLUMN phrase must be used together.  If they are used, you cannot use the AT, LINE, or COLUMN phrases.  </li></div>
<a name="wp1038501"> </a><div class="pSmartList1"><li>If the COLOR phrase is specified, neither the FOREGROUND-COLOR nor the BACKGROUND-COLOR phrase may be specified. </li></div>
<a name="wp1038502"> </a><div class="pSmartList1"><li>The POP-UP/HANDLE phrase may be specified anywhere in the statement after the required initial elements.  </li></div>
<a name="wp1038503"> </a><div class="pSmartList1"><li>IS and &quot;=&quot; are synonymous.  </li></div>
<a name="wp1038504"> </a><div class="pSmartList1"><li>COLUMN, COL, POSITION, and POS are equivalent.</li></div>
<a name="wp1038505"> </a><div class="pSmartList1"><li>BLANK and ERASE are equivalent.</li></div>
<a name="wp1038506"> </a><div class="pSmartList1"><li>HIGHLIGHT, HIGH, and BOLD are synonymous.</li></div>
<a name="wp1038507"> </a><div class="pSmartList1"><li>LOWLIGHT and LOW are equivalent.  </li></div>
<a name="wp1038508"> </a><div class="pSmartList1"><li>REVERSE-VIDEO, REVERSE, and REVERSED are equivalent.</li></div>
<a name="wp1038509"> </a><div class="pSmartList1"><li>COLOR and COLOUR are synonymous.  </li></div>
<a name="wp1038510"> </a><div class="pSmartList1"><li>FOREGROUND-COLOR and FOREGROUND-COLOUR are synonymous.  </li></div>
<a name="wp1038511"> </a><div class="pSmartList1"><li>BACKGROUND-COLOR and BACKGROUND-COLOUR are synonymous.  </li></div>
</ol></div>
<a name="wp1038513"> </a><h3 class="pHeadingRef">
General Rules
</h3>
<div class="pSmartList1"><ol type="1" class="pSmartList1">
<a name="wp1038514"> </a><div class="pSmartList1"><li>The DISPLAY INITIAL WINDOW verb creates the main application window.  The main application window has several special properties.  If it is minimized, all other windows in the application are also minimized.  If it is closed, the application terminates.  A program can have only one main application window.</li></div>
<a name="wp1038515"> </a><div class="pSmartList1"><li>If you attempt to create a main application window after one already exists, the DISPLAY INITIAL WINDOW statement will have no effect other than to set <em class="cEmphasis">handle-name</em> to NULL.</li></div>
<a name="wp1038517"> </a><div class="pSmartList1"><li>The runtime automatically constructs the main application window if needed.  This occurs any time a screen operation is dictated by the program and the program has not yet constructed a main application window.  When this occurs, the runtime executes the following implied statement:</li></div>
<div class="pPreformattedRelative"><pre class="pPreformattedRelative">
DISPLAY INITIAL WINDOW<a name="wp1064577"> </a>
    TITLE-BAR,<a name="wp1064578"> </a>
    SYSTEM MENU,<a name="wp1064579"> </a>
    AUTO-MINIMIZE,<a name="wp1038521"> </a>
    AUTO-RESIZE.<a name="wp1038522"> </a>
</pre></div>
<a name="wp1038523"> </a><div class="pSmartList1"><li>The main application window is always <em class="cEmphasis">modeless</em>.  A modeless window is one where the user can switch to another window while the current window is still open.  You can include the word MODELESS in the statement as commentary. </li></div>
<a name="wp1038524"> </a><div class="pSmartList1"><li>The INDEPENDENT phrase creates an independent window.  Independent windows act like additional main application windows.  Independent windows have the following traits:</li></div>
<div class="pSmartList2"><ol type="a" class="pSmartList2">
<a name="wp1038525"> </a><div class="pSmartList2"><li>Independent windows do not have a parent.  As a result, any other window in the application can be placed over them.  Also, destroying another window in the application will not destroy the independent window.  </li></div>
<a name="wp1038526"> </a><div class="pSmartList2"><li>Although they do not have a parent, independent windows use the <em class="cEmphasis">current</em> window to determine their default fonts, cell size, and colors.  Also, independent windows use the current window when determining their position.  This is computed in the same manner as it is for floating windows.  </li></div>
<a name="wp1038527"> </a><div class="pSmartList2"><li>Independent windows can be minimized separately.  Under Windows and Windows NT, each visible independent window has its own button on the task bar.  </li></div>
<a name="wp1038528"> </a><div class="pSmartList2"><li>Independent windows process their close box in the same manner as floating windows--by generating a CMD-CLOSE event.  </li></div>
<a name="wp1038529"> </a><div class="pSmartList2"><li>Independent windows can be created before the main window.  In this case, there is no current window to provide defaults, so the independent window uses the same defaults as the main application window would.  The window is located on the screen as follows:</li></div>
<a name="wp1038530"> </a><p class="pIndented2">
According to SCREEN LINE and SCREEN COL, if specified; otherwise
</p>
<a name="wp1038531"> </a><p class="pIndented2">
If the window has a title bar, the host system places the window as if it were a new application; otherwise
</p>
<a name="wp1038532"> </a><p class="pIndented2">
The window is centered in the screen.  
</p>
<a name="wp1038533"> </a><p class="pIndented2">
Note that LINE and COL (without the SCREEN option) are ignored in these cases.  
</p>
<a name="wp1038534"> </a><div class="pSmartList2"><li>If an independent window is current when the main application window is created, the defaults for the main window are derived from the independent window.  </li></div>
</ol></div>
<a name="wp1038535"> </a><div class="pSmartList1"><li>Most of the phrases allowed for DISPLAY INITIAL WINDOW work in exactly the same way that they work in a DISPLAY FLOATING WINDOW (format 11) statement.  The following rules are supplemental.</li></div>
</ol></div>
<a name="wp1038536"> </a><p class="pBody">
<b class="cBold">SCREEN-LINE and SCREEN-COLUMN Phrases</b>
</p>
<a name="wp1038537"> </a><p class="pBody">
Under Windows, the runtime ensures that the initial window is fully visible, so the location specified by <em class="cEmphasis">screen-line</em> and <em class="cEmphasis">screen-col</em> may not be used if that would place a portion of the window off the screen (the closest allowed location is used).
</p>
<a name="wp1038538"> </a><p class="pBody">
<b class="cBold">TITLE-BAR Phrase</b>
</p>
<a name="wp1038539"> </a><p class="pBody">
If you specify a TITLE-BAR but do not give a TITLE, the default title is the name of the program (PROGRAM-ID in the IDENTIFICATION DIVISION).
</p>
<a name="wp1038540"> </a><p class="pBody">
<b class="cBold">AUTO-MINIMIZE Phrase</b>
</p>
<div class="pSmartList1"><ol type="1" class="pSmartList1">
<a name="wp1038542"> </a><div class="pSmartList1"><li>The AUTO-MINIMIZE phrase indicates that a minimize button should be displayed.  The runtime handles the minimizing and restoring of the application automatically.  If you do not specify AUTO-MINIMIZE, the user is not allowed to minimize the application.</li></div>
<a name="wp1038543"> </a><div class="pSmartList1"><li>In addition, the AUTO-MINIMIZE phrase implies the SYSTEM MENU and TITLE-BAR phrases.</li></div>
</ol></div>
<a name="wp1038544"> </a><p class="pBody">
<b class="cBold">Window location and size</b>
</p>
<div class="pSmartList1"><ol type="1" class="pSmartList1">
<a name="wp1038546"> </a><div class="pSmartList1"><li>The window's location on the screen is determined by the host system, as are its initial dimensions if it is resizable.  You can use the SCREEN runtime configuration variable to specify the initial window dimensions (including whether it is maximized or minimized).  </li></div>
<a name="wp1038549"> </a><p class="pIndented1">
On a character-based system, the initial window always occupies the entire terminal surface.  Setting the various sizing options has no effect.
</p>
<a name="wp1038550"> </a><div class="pSmartList1"><li>If you do not use the LINES and SIZE phrases, the lines and size values are taken from the SIZE option of the SCREEN runtime configuration variable.  If SCREEN is not set, the default size  is 25 lines by 80 columns.  The host system may provide a smaller default (for example, 24-line character-based terminals will default to 24 lines).</li></div>
</ol></div>
<a name="wp1038554"> </a><p class="pBody">
<b class="cBold">STANDARD Phrase</b> 
</p>
<a name="wp1038555"> </a><p class="pBody">
The STANDARD option is identical to the INITIAL option except that it automatically implies the following options:
</p>
<div class="pSmartList1"><ol type="1" class="pSmartList1">
<a name="wp1038556"> </a><div class="pSmartList1"><li>TITLE-BAR</li></div>
<a name="wp1038557"> </a><div class="pSmartList1"><li>SYSTEM MENU</li></div>
<a name="wp1038558"> </a><div class="pSmartList1"><li>AUTO-MINIMIZE</li></div>
<a name="wp1038559"> </a><div class="pSmartList1"><li>USER-COLORS</li></div>
<a name="wp1038560"> </a><div class="pSmartList1"><li>For graphical systems, a black foreground on a white background.  For character-based systems, a white foreground on a black background.  You may override these default colors with the various color setting phrases.</li></div>
</ol></div>
<a name="wp1038561"> </a><p class="pBody">
<b class="cBold">GRAPHICAL Phrase</b>
</p>
<a name="wp1038562"> </a><p class="pBody">
The GRAPHICAL phrase has the same effect as in the DISPLAY FLOATING WINDOW statement.
</p>
<a name="wp1038563"> </a><p class="pBody">
<b class="cBold">VISIBLE Phrase</b>
</p>
<a name="wp1038564"> </a><p class="pBody">
The VISIBLE option determines whether the window created is visible or invisible.  If the FALSE option is used, or <em class="cEmphasis">visible-state</em> is the value zero, then the window is invisible.  Otherwise, the window is visible.  If the VISIBLE phrase is omitted, then the window is visible.  
</p>
<a name="wp1038565"> </a><p class="pBody">
<b class="cBold">POP-UP MENU Phrase</b>
</p>
<a name="wp1038566"> </a><p class="pBody">
The POP-UP MENU phrase associates a pop-up menu with the window.  If <em class="cEmphasis">menu-1</em> is specified, then the menu associated with <em class="cEmphasis">menu-1 </em>becomes the pop-up menu.  If NULL is specified, the window is not given a pop-up menu.  Pop-up menus are activated by a machine-dependent technique.  Under Windows, the technique is to right-click on the window's background.
</p>
<a name="wp1038567"> </a><p class="pBody">
<b class="cBold">CONTROLS-UNCROPPED Phrase</b>
</p>
<a name="wp1038568"> </a><p class="pBody">
Normally, when you create a control in a window, the control is cropped to fit the current subwindow's dimensions.  In addition, if the control's home position is outside of the current subwindow, the control is not created.  Adding the phrase CONTROLS-UNCROPPED overrides these rules.  When this phrase is used, the control is created with the specified location and dimensions, regardless of whether the control will be physically in the window.  
</p>
<a name="wp1038569"> </a><p class="pBody">
This can be useful when you are dealing with RESIZABLE windows.  Sometimes a resizable window is too small to show all of the controls that your program creates.  Normally, these controls either would not be created or would be cropped.  This could produce odd results when the window is later resized larger by the user.  Although the resized window is now large enough to show everything, the controls still show their cropped appearance, because their (cropped) creation size is recorded in the controls as their actual size.  Specifying CONTROLS-UNCROPPED avoids the cropping behavior.  
</p>
<a name="wp1038570"> </a><p class="pBody">
This style is useful also when you want to place a combo-box near the bottom of a window.  Because the size of the drop-down portion of the combo-box is determined by the control's overall height, cropping the control limits the drop-down box to the window's boundaries.  If you want the box to drop down beyond the edge of the window, you need to use the CONTROLS-UNCROPPED window style to allow this.  
</p>
<a name="wp1038571"> </a><p class="pBody">
<b class="cBold">EVENT PROCEDURE Phrase</b>
</p>
<div class="pSmartList1"><ol type="1" class="pSmartList1">
<a name="wp1038572"> </a><div class="pSmartList1"><li>A window's event procedure is executed whenever an event is processed for that window.  The event procedure is executed as if it were the target of a PERFORM statement.  Only the window's own events trigger the event procedure.  Events generated by controls contained in the window do not trigger the window's event procedure (they trigger the control's event procedure instead).  The event procedure executes while the event is being processed, before the event causes termination of any executing ACCEPT statement.  See <a  href="gt3557.htm#wp1037068">section 5.9.6, &quot;PROCEDURE Clause,&quot;</a> for more information about event procedures.  </li></div>
<a name="wp1038573"> </a><div class="pSmartList1"><li>Specifying <em class="cEmphasis">proc-1</em> assigns that procedure as the window's event procedure.  Flow of control returns at the end of <em class="cEmphasis">proc-1</em>, unless <em class="cEmphasis">proc-2</em> is specified, in which case flow of control returns at the end of <em class="cEmphasis">proc-2</em>.  If you specify the NULL option, the window does not have an event procedure.  This is the default, so the NULL option is treated as commentary.  </li></div>
</ol></div>
<a name="wp1185305"> </a><p style="font-family: Arial, Verdana, Helvetica, sans-serif">
<hr />
<b>Tip:  </b> The Support area of the Acucorp Web site includes a sample program that demonstrates how a main application window can be coded to detect the system display's screen resolution and then size itself to fill the entire screen.  To download the program, open your Web browser and navigate to: www.acucorp.com/support/public/sample_programs/index.php.  Select the category &quot;Graphical User Interface Sample Programs&quot; from the drop down list, and click on &quot;WIN-START-MAX.cbl&quot;.
<hr />
</p>
 </blockquote>

 <hr />

 <table align="left" border="0" cellspacing="0" cellpadding="0">
   <tr>
     <td align="left" width="300">
       <span style="font-size: 12px ; font-weight: bold ; font-family: Arial, Helvetica, sans-serif">
         <a href="http://www.acucorp.com">Acucorp, Inc.</a><br />
       </span>
       <span style="font-size: 10px ; font-family: Arial, Helvetica, sans-serif">
         Voice: 800.262.6585 (U.S.A. and Canada)<br />
         Voice: 858.689.4500<br />
         Fax: 858.689.4550<br />
         Please share your comments on this manual<br />
         or on any Acucorp documentation with the<br />
         <a href="mailto:docfeedback@acucorp.com">Acucorp Communications Department</a>.<br />
       </span>
     </td>
   </tr>
 </table>

<script type="text/javascript" language="JavaScript1.2">
   <!--
    document.write(WWHRelatedTopicsDivTag() + WWHPopupDivTag());
   // -->
  </script>

 
</body>
</html>
