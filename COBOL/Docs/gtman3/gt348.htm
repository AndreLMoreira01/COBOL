<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />
  <meta http-equiv="Content-Style-Type" content="text/css" />
  <meta name="GENERATOR" content="Quadralay WebWorks Publisher Professional Edition 7.0.5.1025" />
  <meta name="TEMPLATEBASE" content="Acucorp WWH" />
  <meta name="LASTUPDATED" content="06/14/06 08:27:48" />
  <title>4.3.1  File-Control Paragraph</title>
  <link rel="StyleSheet" href="document.css" type="text/css" />
  <link rel="StyleSheet" href="catalog.css" type="text/css" />
<script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/context.js"></script>
  <script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/towwhdir.js"></script>
  <script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/wwhpagef.js"></script>

  <script type="text/javascript" language="JavaScript1.2">
   <!--
    // Set reference to top level help frame
    //
    var  WWHFrame = WWHGetWWHFrame("");
   // -->
  </script>
 </head>

 <body onLoad="WWHUpdate();">

    <a href="../docs.htm" target="acudoc"><img src="images/sbooks.gif" width="70" height="27" border="0" alt="Books" align="right" /></a>
    <span style="font-size: 18px ; font-weight: bold"><font face="Arial, Helvetica, sans-serif">
       ACUCOBOL-GT Reference Manual <br />
    </font></span>
    <span style="font-size: 14px ; font-weight: bold"><font face="Arial, Helvetica, sans-serif">
       Version 7.2
     </font></span>

 <p />

 <blockquote>
<p class="breadcrumb"><a href="gt34.htm"><br />Chapter 4:  Environment Division</a> &gt; <a href="gt347.htm">4.3  Input-Output Section</a> &gt; </p>
<a name="wp1034858"> </a><h2 class="pHeading2">
4.3.1  File-Control Paragraph
</h2>
<a name="wp1034860"> </a><p class="pBody">
The FILE-CONTROL paragraph contains descriptions of the physical aspects of the files the program uses.
</p>
<a name="wp1034861"> </a><h3 class="pHeadingRef">
General Format
</h3>
<div class="pPreformatted"><pre class="pPreformatted">
[ <u class="cUnderline">FILE-CONTROL</u>. ]  { file-control-entry } ...<a name="wp1034862"> </a>
</pre></div>
<a name="wp1034863"> </a><p class="pBody">
or
</p>
<div class="pPreformatted"><pre class="pPreformatted">
{ file-control-entry } ...<a name="wp1034864"> </a>
</pre></div>
<a name="wp1034865"> </a><p class="pBody">
<em class="cEmphasis">File-control-entry</em> has one of the following formats:
</p>
<a name="wp1036917"> </a><h3 class="pHeadingRef">
Format 1 - Sequential Files
</h3>
<div class="pPreformatted"><pre class="pPreformatted">
<u class="cUnderline">SELECT</u> [ <u class="cUnderline">OPTIONAL</u> ] file-name<a name="wp1036918"> </a>
<a name="wp1036919"> </a>
   <u class="cUnderline">ASSIGN</u> TO [ <u class="cUnderline">DYNAMIC</u> ] [ device  ] [ file-spec ]<a name="wp1034869"> </a>
             [ <u class="cUnderline">EXTERNAL</u>]<a name="wp1036985"> </a>
<a name="wp1035997"> </a>
 [ [ <u class="cUnderline">ORGANIZATION</u> IS ] [<u class="cUnderline">BINARY</u>] <u class="cUnderline">SEQUENTIAL</u> ]<a name="wp1034870"> </a>
                       [<u class="cUnderline">RECORD</u>]<a name="wp1036925"> </a>
                       [<u class="cUnderline">LINE</u>  ]<a name="wp1034871"> </a>
<a name="wp1035996"> </a>
 [ <u class="cUnderline">ACCESS</u> MODE IS <u class="cUnderline">SEQUENTIAL</u> ]<a name="wp1034872"> </a>
<a name="wp1035995"> </a>
 [ <u class="cUnderline">RESERVE</u> {number} [<u class="cUnderline">ALTERNATE</u>] [AREA ]]<a name="wp1034873"> </a>
           {<u class="cUnderline">NO</u>    }             [AREAS]<a name="wp1034874"> </a>
<a name="wp1034875"> </a>
 [ <u class="cUnderline">LOCK</u> MODE IS {<u class="cUnderline">EXCLUSIVE</u>}<a name="wp1034876"> </a>
                {<u class="cUnderline">AUTOMATIC</u>}<a name="wp1034877"> </a>
                {<u class="cUnderline">MANUAL</u>   }<a name="wp1034878"> </a>
<a name="wp1035998"> </a>
 [ <u class="cUnderline">RECORD</u> <u class="cUnderline">DELIMITER</u> IS <u class="cUnderline">STANDARD-1</u> ]<a name="wp1034879"> </a>
<a name="wp1035999"> </a>
 [ FILE <u class="cUnderline">STATUS</u> IS status-variable ]<a name="wp1034880"> </a>
<a name="wp1036000"> </a>
 [ <u class="cUnderline">PADDING</u> CHARACTER IS pad-char ] .<a name="wp1034881"> </a>
</pre></div>
<a name="wp1034882"> </a><h3 class="pHeadingRef">
Format 2 - Relative Files
</h3>
<div class="pPreformatted"><pre class="pPreformatted">
<u class="cUnderline">SELECT</u> [<u class="cUnderline">OPTIONAL</u>] file-name<a name="wp1034883"> </a>
<a name="wp1036992"> </a>
   <u class="cUnderline">ASSIGN</u> TO [ <u class="cUnderline">DYNAMIC</u> ] [ device  ] [ file-spec ]<a name="wp1036998"> </a>
             [ <u class="cUnderline">EXTERNAL</u>]<a name="wp1037000"> </a>
<a name="wp1036994"> </a>
 [ <u class="cUnderline">ORGANIZATION</u> IS ] <u class="cUnderline">RELATIVE</u><a name="wp1034887"> </a>
<a name="wp1034888"> </a>
 [ <u class="cUnderline">ACCESS</u> MODE IS <a name="wp1034889"> </a>
<a name="wp1034890"> </a>
   { <u class="cUnderline">SEQUENTIAL</u> [ <u class="cUnderline">RELATIVE</u> KEY IS rel-key ] } ]<a name="wp1034891"> </a>
   { <u class="cUnderline">RANDOM</u>       <u class="cUnderline">RELATIVE</u> KEY IS rel-key   }<a name="wp1034892"> </a>
   { <u class="cUnderline">DYNAMIC</u>      <u class="cUnderline">RELATIVE</u> KEY IS rel-key   }<a name="wp1034893"> </a>
<a name="wp1034894"> </a>
 [ <u class="cUnderline">LOCK</u> MODE IS { <u class="cUnderline">EXCLUSIVE</u>                     }<a name="wp1034895"> </a>
                { <u class="cUnderline">AUTOMATIC</u> [ multiple-option ] }<a name="wp1034896"> </a>
                { <u class="cUnderline">MANUAL</u>    [ multiple-option ] }<a name="wp1034897"> </a>
<a name="wp1034898"> </a>
 [ <u class="cUnderline">RESERVE</u> {number} [<u class="cUnderline">ALTERNATE</u>] [AREA ]]<a name="wp1034899"> </a>
           {<u class="cUnderline">NO</u>    }             [AREAS]<a name="wp1034900"> </a>
<a name="wp1034901"> </a>
 [ FILE <u class="cUnderline">STATUS</u> IS status-variable ] .<a name="wp1034902"> </a>
</pre></div>
<a name="wp1034903"> </a><p class="pBody">
See the multiple-option format at the end of the formats.
</p>
<a name="wp1034904"> </a><h3 class="pHeadingRef">
Format 3 - Indexed Files
</h3>
<div class="pPreformatted"><pre class="pPreformatted">
<u class="cUnderline">SELECT</u> [<u class="cUnderline">OPTIONAL</u>] file-name<a name="wp1034905"> </a>
<a name="wp1034906"> </a>
   <u class="cUnderline">ASSIGN</u> TO [ <u class="cUnderline">DYNAMIC</u> ] [ device  ] [ file-spec ]<a name="wp1037004"> </a>
             [ <u class="cUnderline">EXTERNAL</u>]<a name="wp1037005"> </a>
<a name="wp1034908"> </a>
 [ <u class="cUnderline">WITH</u>  {<u class="cUnderline">COMPRESSION</u>} ... ]<a name="wp1034909"> </a>
         {<u class="cUnderline">ENCRYPTION</u> }<a name="wp1034910"> </a>
<a name="wp1034911"> </a>
 [ <u class="cUnderline">COMPRESSION</u> CONTROL VALUE IS factor ] <a name="wp1034912"> </a>
<a name="wp1034913"> </a>
 [ <u class="cUnderline">ORGANIZATION</u> IS ] <u class="cUnderline">INDEXED</u><a name="wp1034914"> </a>
<a name="wp1036001"> </a>
 [ <u class="cUnderline">ACCESS</u> MODE IS  {<u class="cUnderline">SEQUENTIAL</u>} ]<a name="wp1034915"> </a>
                   {<u class="cUnderline">RANDOM</u>    }<a name="wp1034916"> </a>
                   {<u class="cUnderline">DYNAMIC</u>   }<a name="wp1034917"> </a>
<a name="wp1034918"> </a>
 [ <u class="cUnderline">RECORD</u> KEY IS key-name [= seg-name ...]<a name="wp1034919"> </a>
    [ WITH [<u class="cUnderline">NO</u>] <u class="cUnderline">DUPLICATES</u> ] ] ...<a name="wp1036160"> </a>
<a name="wp1034920"> </a>
 [ <u class="cUnderline">ALTERNATE</u> <u class="cUnderline">RECORD</u> KEY IS alt-name [= seg-name ...]<a name="wp1034921"> </a>
    [ WITH [<u class="cUnderline">NO</u>] <u class="cUnderline">DUPLICATES</u> ] ] ...<a name="wp1034923"> </a>
<a name="wp1034924"> </a>
 [ <u class="cUnderline">LOCK</u> MODE IS { <u class="cUnderline">EXCLUSIVE</u> [ WITH <u class="cUnderline">MASS-UPDATE</u> ] }<a name="wp1034925"> </a>
                { <u class="cUnderline">AUTOMATIC</u> [ multiple-option  ] }<a name="wp1034926"> </a>
                { <u class="cUnderline">MANUAL</u>    [ multiple-option  ] }<a name="wp1034927"> </a>
<a name="wp1034928"> </a>
 [ <u class="cUnderline">RESERVE</u> {number} [<u class="cUnderline">ALTERNATE</u>]  [AREA ]]<a name="wp1034929"> </a>
           {<u class="cUnderline">NO</u>    }              [AREAS]<a name="wp1034931"> </a>
<a name="wp1034932"> </a>
 [ FILE <u class="cUnderline">STATUS</u> IS status-variable ] <a name="wp1034933"> </a>
<a name="wp1034934"> </a>
 [ COLLATING <u class="cUnderline">SEQUENCE</u> IS alphabet-name ] .<a name="wp1034935"> </a>
</pre></div>
<a name="wp1034936"> </a><h3 class="pHeadingRef">
Format 4 - Sort Files
</h3>
<div class="pPreformatted"><pre class="pPreformatted">
<u class="cUnderline">SELECT</u> file-name<a name="wp1034937"> </a>
<a name="wp1034938"> </a>
   <u class="cUnderline">ASSIGN</u> TO [ <u class="cUnderline">DYNAMIC</u> ] [ device  ] [ file-spec ]<a name="wp1037010"> </a>
             [ <u class="cUnderline">EXTERNAL</u>]<a name="wp1037011"> </a>
<a name="wp1034940"> </a>
 [ FILE <u class="cUnderline">STATUS</u> IS status-variable ] .<a name="wp1034941"> </a>
<a name="wp1036705"> </a>
</pre></div>
<a name="wp1034942"> </a><p class="pNote">
<hr />
<b>Note:  </b><em class="cEmphasis">multiple-option</em> has the following format for both Format 2 and<b class="cBold"> </b>Format 3.
<hr />
</p>
<div class="pPreformatted"><pre class="pPreformatted">
WITH { LOCK <u class="cUnderline">ON</u> [ <u class="cUnderline">MULTIPLE</u> ] { <u class="cUnderline">RECORD</u>  } } [WITH <u class="cUnderline">ROLLBACK</u>]<a name="wp1034943"> </a>
                            { <u class="cUnderline">RECORDS</u> }<a name="wp1034944"> </a>
     { <u class="cUnderline">ROLLBACK</u>                         }<a name="wp1034945"> </a>
</pre></div>
<a name="wp1034946"> </a><h3 class="pHeadingRef">
Syntax Rules
</h3>
<div class="pSmartList1"><ol type="1" class="pSmartList1">
<a name="wp1034947"> </a><div class="pSmartList1"><li><em class="cEmphasis">File-spec</em> must be either a nonnumeric literal or the name of an alphanumeric Working-Storage data item.  See Book 1, section 6.1.3, for information about creating Vision indexed files.</li></div>
<a name="wp1034949"> </a><div class="pSmartList1"><li><em class="cEmphasis">Device</em> must be one of these words: INPUT, OUTPUT, INPUT-OUTPUT, RANDOM, DISK, DISC, PRINT, PRINTER, PRINTER-1, TAPE, CASSETTE, CARD-PUNCH, CARD-READER, CONSOLE, MAGNETIC-TAPE, DISPLAY, KEYBOARD, SORT, MERGE, SORT-MERGE or SORT-WORK.  The last four may be used only with sort files.  </li></div>
<a name="wp1037044"> </a><div class="pSmartList1"><li>If DYNAMIC is specified, <em class="cEmphasis">file-spec</em> must be specified and must be the name of a data item.  This data item need not be defined in the program, although it can be.</li></div>
<a name="wp1037355"> </a><div class="pSmartList1"><li>If EXTERNAL is specified, <em class="cEmphasis">file-spec</em> must be specified and must be a user-defined COBOL word.</li></div>
<a name="wp1037356"> </a><div class="pSmartList1"><li><em class="cEmphasis">Status-variable</em> must be the name of an alphanumeric Working-Storage or Linkage data item with a size of 2 characters.  The compiler also allows <em class="cEmphasis">status-variable</em> to be a numeric item, however in this case it emits a Warning.</li></div>
<a name="wp1034951"> </a><div class="pSmartList1"><li><em class="cEmphasis">Rel-key</em> must name an unsigned integer data item.  It must not be in the record description entry for the same file.</li></div>
<a name="wp1034952"> </a><div class="pSmartList1"><li><em class="cEmphasis">Factor </em>must be a numeric literal from zero to 100, inclusive.</li></div>
<a name="wp1034953"> </a><div class="pSmartList1"><li>The key of an indexed file may have any PICTURE and USAGE.  Regardless of the PICTURE and USAGE specified, the key is always treated as an alphanumeric data item when the sort order of the file is determined (the individual bytes are compared with the collating sequence). </li></div>
<a name="wp1034954"> </a><div class="pSmartList1"><li><em class="cEmphasis">Seg-name</em> must name a data item in the same file's record description entry.  A seg-name may not be a group item that contains variable-occurrence data items.  </li></div>
<a name="wp1034955"> </a><div class="pSmartList1"><li>If <em class="cEmphasis">seg-name</em> is used to define a split RECORD KEY, then <em class="cEmphasis">key-name</em> is a user-defined word.  Otherwise, <em class="cEmphasis">key-name</em> must name a data item in the same file's record description entry.  It may not be a group item that contains variable-occurrence data items.  </li></div>
<a name="wp1034956"> </a><div class="pSmartList1"><li>If <em class="cEmphasis">seg-name</em> is used to define a split ALTERNATE RECORD KEY, then <em class="cEmphasis">alt-name</em> is a user-defined word.  Otherwise, <em class="cEmphasis">alt-name</em> must name a data item in the same file's record description entry.  It may not be a group item that contains variable-occurrence data items.  </li></div>
<a name="wp1034957"> </a><div class="pSmartList1"><li><em class="cEmphasis">Number</em> must be an integer literal.  </li></div>
<a name="wp1034958"> </a><div class="pSmartList1"><li><em class="cEmphasis">Alphabet-name</em> is the name of an alphabet declared in the Special-Names paragraph.</li></div>
<a name="wp1034959"> </a><div class="pSmartList1"><li><em class="cEmphasis">Pad-char</em> must be either a single-character literal or a single-character alphanumeric data item.  When a PADDING CHARACTER is specified, the last block of the file is padded with <em class="cEmphasis">pad-char</em>.  When the file is read, any final portion of a block that consists solely of padding characters is skipped.</li></div>
<a name="wp1034962"> </a><div class="pSmartList1"><li>SELECT must be the first clause in a FILE-CONTROL entry.  The other clauses may follow in any order.  The SELECT clause may appear in Area A, all other clauses must appear in Area B.  </li></div>
<a name="wp1034963"> </a><div class="pSmartList1"><li>Each file described in the Data Division must be specified exactly once in the FILE-CONTROL paragraph.  </li></div>
<a name="wp1034964"> </a><div class="pSmartList1"><li>Each file described by a SELECT clause must have exactly one corresponding file description in the Data Division.</li></div>
<a name="wp1036937"> </a><div class="pSmartList1"><li>ORGANIZATION IS RECORD SEQUENTIAL is synonymous with ORGANIZATION IS BINARY SEQUENTIAL.</li></div>
</ol></div>
<a name="wp1034965"> </a><h3 class="pHeadingRef">
General Rules
</h3>
<div class="pSmartList1"><ol type="1" class="pSmartList1">
<a name="wp1036079"> </a><div class="pSmartList1"><li>When the FILE STATUS clause is specified, a value will be moved into<b style="font-weight: bold" class="cBold"> </b><em style="font-weight: normal" class="cEmphasis">status-variable</em> after the execution of every statement that references the corresponding file.  This value indicates the status of the statement.  (See <a  href="gt3628.htm#wp1034849">section 6.4.7, &quot;I/O Status.&quot;</a>)</li></div>
<a name="wp1036081"> </a><div class="pSmartList1"><li>The ACCESS MODE clause specifies the order in which records are read or written.  If it is not specified, SEQUENTIAL is implied.</li></div>
<a name="wp1034971"> </a><div class="pSmartList1"><li>For sequential access, the records are accessed according to the organization of the file: </li></div>
<div class="pSmartList2"><ul class="pSmartList2">
<a name="wp1034972"> </a><div class="pSmartList2"><li>Sequential files - The sequence is the same as that established by the execution of WRITE statements that created the file.</li></div>
<a name="wp1034973"> </a><div class="pSmartList2"><li>Relative files - The sequence is the order of ascending relative record numbers for the file's existing records.</li></div>
<a name="wp1034974"> </a><div class="pSmartList2"><li>Indexed files - The sequence is the order of ascending record key values for the file's current key of reference.</li></div>
</ul></div>
<a name="wp1034976"> </a><div class="pSmartList1"><li>Random access indicates that the file will be accessed only by key value. </li></div>
<a name="wp1034978"> </a><div class="pSmartList1"><li>Dynamic access indicates that the file will be accessed both randomly and sequentially. </li></div>
<a name="wp1034980"> </a><div class="pSmartList1"><li>The ASSIGN clause specifies the association of the file to a storage device.  The rules for interpreting the ASSIGN clause are described in Book 1, section 2.8.  If the <em class="cEmphasis">file-spec</em> phrase is missing, then <em class="cEmphasis">file-name</em> will be treated as an alphanumeric literal and substituted for it (exception: rule 7.a below).  In this case, <em class="cEmphasis">file-name</em> should conform to the host operating system's rules for file names.  Note that the ASSIGN clause is required even if both <em class="cEmphasis">device </em>and <em class="cEmphasis">file-spec</em> are missing.  </li></div>
<a name="wp1034983"> </a><div class="pSmartList1"><li>The <em class="cEmphasis">device</em> phrase of the ASSIGN clause is not required.  If it is specified, it can affect the processing of the file in a variety of ways.  If the file is not a sequential file, then the <em class="cEmphasis">device</em> phrase is ignored.  If it is a sequential file, then the following applies depending on the <em class="cEmphasis">device</em> phrase used: </li></div>
<div class="pSmartList2"><ol type="a" class="pSmartList2">
<a name="wp1034984"> </a><div class="pSmartList2"><li><b class="cBold">PRINT, PRINTER, PRINTER-1</b> - A sequential file marked with one of these <em class="cEmphasis">device</em> phrases will be treated as a &quot;print&quot; file.  Print files may not be opened for INPUT or I/O.  When records are written to a print file, trailing spaces are first removed from the record.  Print files have printer carriage control information added to them as specified by the WRITE statements that add records to the file.  If &quot;PRINTER&quot; or &quot;PRINTER-1&quot; is specified, and no <em class="cEmphasis">file-spec</em> is specified, then the external file name is treated as &quot;PRINTER&quot; or &quot;PRINTER-1&quot; (unless RM/COBOL compatibility mode is being used, in which case rule 6 applies instead).  Normally, these names are translated at runtime to the name of the system spooler.  This is an exception to rule 6 above.</li></div>
<a name="wp1034987"> </a><div class="pSmartList2"><li><b class="cBold">CARD-PUNCH, CARD-READER, CASSETTE, INPUT, INPUT-OUTPUT, MAGNETIC-TAPE, OUTPUT</b> - Any of these <em class="cEmphasis">device</em> phrases indicates that trailing spaces should be removed from records before they are added to the file.  This will have effect only if the file is a &quot;line&quot; sequential file.  When records are read from one of these files, the records are automatically padded with spaces to reach the maximum record size.  A file with one of these designators may not be opened for I/O.  </li></div>
<a name="wp1034988"> </a><div class="pSmartList2"><li><b class="cBold">DISPLAY, KEYBOARD</b> - Causes the default file type to be &quot;line&quot; sequential.  You may override this by specifying the file type explicitly in the ORGANIZATION clause.  This rule is provided for compatibility with ICOBOL, which uses this method for specifying line sequential files.  </li></div>
<a name="wp1034990"> </a><div class="pSmartList2"><li><b class="cBold">RANDOM, DISK, DISC, TAPE, CONSOLE</b> - Indicates no additional processing.  This is the same as if the <em class="cEmphasis">device</em> phrase were omitted.  </li></div>
<a name="wp1037162"> </a><div class="pSmartList2"><li><b class="cBold">MERGE, SORT, SORT-MERGE, SORT-WORK</b> - Also indicates no additional processing.  These <em class="cEmphasis">device</em> phrases may be associated with a sort file only.</li></div>
</ol></div>
<a name="wp1037163"> </a><div class="pSmartList1"><li>The word DYNAMIC in an ASSIGN phrase indicates that <em class="cEmphasis">file-spec</em> is the name of a variable that contains the file's name.  Because this is the normal meaning of <em class="cEmphasis">file-spec</em> when it refers to a variable, the word DYNAMIC is largely commentary.</li></div>
<a name="wp1037072"> </a><div class="pSmartList1"><li>When DYNAMIC is specified, if <em class="cEmphasis">file-spec</em> refers to a variable that is not otherwise defined, the compiler creates a Working-Storage variable by that name that is PIC X(256).  It is the program's responsibility to move a valid file name to this data item prior to opening the file.</li></div>
<a name="wp1037073"> </a><div class="pSmartList1"><li>The word EXTERNAL in an ASSIGN phrase indicates that the COBOL word that makes up <em class="cEmphasis">file-spec</em> is the name of the file itself.  This name is processed first by ignoring any characters that appear before the last hyphen in the word (including the hyphen itself).  For example:</li></div>
<div class="pPreformattedRelative"><pre class="pPreformattedRelative">
   ASSIGN TO EXTERNAL UT-S-MYFILE<a name="wp1037145"> </a>
</pre></div>
<a name="wp1037146"> </a><p class="pIndented1">
results in &quot;MYFILE&quot; being used for the file name.  In other COBOL systems, this name is normally assigned to a specific file name using environment variables.  This kind of name mapping occurs automatically under ACUCOBOL-GT.  There is no special meaning associated with ASSIGN phrases containing the EXTERNAL option.  Such files have name mapping applied through the environment just like all other files.
</p>
<a name="wp1037409"> </a><p class="pNoteList">
<hr />
<b>Note:  </b>If neither DYNAMIC or EXTERNAL is included in the ASSIGN clause, you can use the &quot;--fileAssign=&quot; compiler option to specify DYNAMIC or EXTERNAL at compile time.  See section 2.1.6, in Book 1, <em class="cEmphasis">ACUCOBOL-GT User's Guide</em>. 
<hr />
</p>
<a name="wp1037147"> </a><div class="pSmartList1"><li>The WITH COMPRESSION phrase of the ASSIGN clause specifies that file record compression is desired.  This phrase must be specified before the ORGANIZATION IS INDEXED phrase.  The Vision file system supports compression, but not all file systems do.   The WITH COMPRESSION phrase takes effect only when the file is initially created or re-created via the OPEN statement.  When no compression <em class="cEmphasis">factor</em> is specified (see next paragraph), WITH COMPRESSION uses the default compression factor (70).  </li></div>
<a name="wp1034993"> </a><p class="pIndented1">
A compression <em class="cEmphasis">factor</em> other than the default may be selected via the COMPRESSION CONTROL VALUE IS clause.  The <em class="cEmphasis">factor</em> must be a numeric literal from zero (meaning no compression) to 100 (maximum compression).  A compression factor of 1 is equivalent to the default compression.  
</p>
<a name="wp1034995"> </a><p class="pIndented1">
The exact meaning of the compression factor depends upon the host file system.  See Book 1, section 6.1.3, for specifics about the Vision file system.  
</p>
<a name="wp1034996"> </a><div class="pSmartList1"><li>The WITH ENCRYPTION phrase specifies that record encryption is desired on the file.  Encryption is currently available with the Vision indexed file system only.  The ENCRYPTION clause takes effect only when the file is initially created or re-created via the OPEN statement.  </li></div>
<a name="wp1034998"> </a><div class="pSmartList1"><li>The ORGANIZATION clause specifies the logical structure of the file.  This is established when a file is first created and may not be changed.  If it is absent, then SEQUENTIAL organization is implied.  </li></div>
<a name="wp1035000"> </a><div class="pSmartList1"><li>Records stored in an ORGANIZATION IS RELATIVE file are uniquely identified by record number.  The relative record number of a given record specifies the record's ordinal position in the file.  The first record has a relative record number of one.  </li></div>
<a name="wp1036342"> </a><div class="pSmartList1"><li>Records in an ORGANIZATION IS INDEXED file are uniquely identified by the values in the record's primary key.  </li></div>
<a name="wp1036343"> </a><div class="pSmartList1"><li>The primary key is identified by the RECORD KEY clause.  Records are ordered in ascending collating sequence by the primary key.  If the WITH DUPLICATES phrase is present, the primary key may contain duplicate values, if the indexed file system supports them.  Vision supports duplicate primary key values.  If WITH DUPLICATES is used with a file system that does not support them, when the file is created via the OPEN statement a status of &quot;0M&quot; is returned, indicating that the file was successfully created but that duplicate primary keys are not supported.  When WITH DUPLICATES is used with Vision and other file systems that support it, the rules that govern how REWRITE and DELETE operations are handled are determined by the file system.  The rules for Vision are as follows:</li></div>
<div class="pSmartList2"><ol type="a" class="pSmartList2">
<a name="wp1036277"> </a><div class="pSmartList2"><li>If the last record locked via a READ statement is still locked and it matches the primary key value specified in a REWRITE or DELETE statement, that record is the record rewritten or deleted.</li></div>
<a name="wp1036285"> </a><div class="pSmartList2"><li>Otherwise, the first record with the matching key value is rewritten or deleted.</li></div>
</ol></div>
<a name="wp1036264"> </a><p class="pIndented1">
For information about how HP e3000 KSAM handles REWRITE and DELETE with duplicate primary keys, see Chapter 4, &quot;HP COBOL Conversions,&quot; in <em class="cEmphasis">Transitioning to ACUCOBOL-GT</em>.
</p>
<a name="wp1036290"> </a><p class="pIndented1">
The WITH NO DUPLICATES phrase is commentary.  By default, duplicate primary key values are not allowed.  
</p>
<a name="wp1036204"> </a><div class="pSmartList1"><li>The ALTERNATE RECORD KEY clause specifies additional record keys for an indexed file.  If the WITH DUPLICATES phrase is present, then these key values may contain duplicated values.  Otherwise, each key value must be unique for a given key.</li></div>
<a name="wp1035007"> </a><p class="pIndented1">
You may specify the word &quot;NO&quot; in front of the word &quot;DUPLICATES&quot; in a declaration of an alternate indexed file key.  This is useful for ICOBOL compatibility mode where, by default, alternate keys allow duplicates.   
</p>
<a name="wp1035009"> </a><div class="pSmartList1"><li>Up to 16 seg-names may be specified in Vision Version 4 to indicate that a primary or alternate key consists of non-contiguous data elements.  In Vision Version 3, up to six seg-names may be specified, and in Version 2, only one seg-name may be specified.  The key-name or alt-name is then a user-defined word that can be used in READ and START.  </li></div>
<a name="wp1035010"> </a><div class="pSmartList1"><li>The OPTIONAL phrase, if specified, indicates that the file need not be present when the program is run.  The exact effects of this phrase are detailed in the discussion of the <a  href="gt36127.htm#wp1195819">OPEN Statement</a>.  Note that the &quot;-Fp&quot; compile option causes all files to be treated as if the OPTIONAL phrase is present.</li></div>
<a name="wp1035011"> </a><div class="pSmartList1"><li>The LOCK MODE clause specifies how file and record locking should be handled for the file.  Each mode has the following characteristics:</li></div>
<a name="wp1035013"> </a><p style="text-align: left" class="pListOptions">
<b class="cBold">AUTOMATIC</b>	Each time a record is read from a file open for I/O, that record is locked unless the WITH NO LOCK option is used on the READ statement.  Files open for INPUT do not lock records.
</p>
<a name="wp1035015"> </a><p style="text-align: left" class="pListOptions">
<b class="cBold">MANUAL</b> 	Records read from a file with manual locking are locked only if the WITH LOCK option is used on the READ statement.  Like automatic mode, files open for INPUT do not lock records even if WITH LOCK is specified.
</p>
<a name="wp1035017"> </a><p style="text-align: left" class="pListOptions">
<b class="cBold">EXCLUSIVE</b>	Exclusive mode files are opened with a lock on the entire file.  No locking options may be specified on an OPEN statement associated with an exclusive mode file.  Instead, files opened for INPUT are treated as if they were opened with the ALLOWING READERS phrase, and files opened for OUTPUT, I-O, or EXTEND are treated as if they were opened with the ALLOWING NO OTHERS phrase.  If the WITH MASS-UPDATE phrase is used, then the MASS-UPDATE option is implied for each OPEN (except for OPEN INPUT).  See the <a  href="gt36127.htm#wp1195819">OPEN Statement</a> for details on these options.  
</p>
<a name="wp1035020"> </a><div class="pSmartList1"><li>If the COLLATING SEQUENCE phrase is used, the <em class="cEmphasis">alphabet-name</em> is the name of an alphabet declared in Special-Names.  This alphabet can be standard or can be a custom alphabet defined by the programmer to allow special handling.  For example, upper-case and lower-case letters could be mapped together so that two keys that are alphabetically the same (but differ in case) would be treated as the same letter.  European character sets can also be re-ordered in Special-Names (so that keys are sorted alphabetically).</li></div>
<a name="wp1035023"> </a><div class="pSmartList1"><li>If the LOCK ON MULTIPLE RECORDS phrase is used, then the program may lock more than one record in the file at once.  If the MULTIPLE option is not used, then each I-O statement automatically unlocks the currently locked record before executing.  When the MULTIPLE option is used, then record locks are released only when an UNLOCK or a CLOSE statement is executed for the file.  The ROLLBACK clause is useful when you compile with &quot;-Fl&quot;, which enables single locking rules as the lock mode default.  When the ROLLBACK clause is used with this phrase, multiple locking rules are enabled for the file, regardless of the compiler option used.   </li></div>
<a name="wp1035028"> </a><div class="pSmartList1"><li>If the LOCK phrase is omitted, LOCK MODE IS AUTOMATIC is implied, unless the &quot;-Fm&quot; compiler option is used, in which case LOCK MODE IS MANUAL is implied.  In ICOBOL compatibility mode (&quot;-Ci&quot;), the default is LOCK MODE IS MANUAL WITH MULTIPLE RECORDS.  </li></div>
<a name="wp1035033"> </a><div class="pSmartList1"><li>The RECORD DELIMITER and RESERVE AREA clauses are treated as commentary by the compiler.  </li></div>
<a name="wp1035034"> </a><div class="pSmartList1"><li>If the ROLLBACK clause is specified, then WITH LOCK ON MULTIPLE RECORDS will automatically be in effect.  However, if you compile with the &quot;-Fl&quot; option, then you must specify multiple locking rules for the files that need them.  </li></div>
<a name="wp1035035"> </a><div class="pSmartList1"><li>If the ROLLBACK clause is specified, the runtime will automatically effect a START TRANSACTION before opening the file, and a COMMIT after opening it.  Thus, every OPEN of the file will automatically be done within a transaction; the COBOL code need not explicitly include the START TRANSACTION and COMMIT. </li></div>
<a name="wp1035037"> </a><div class="pSmartList1"><li>It is possible that a RECORDING MODE clause may appear in the IBM DOS/VS COBOL &quot;-Cv&quot; compatibility mode and be ignored by the ACUCOBOL-GT compiler.  See Chapter 5, &quot;IBM DOS/VS COBOL Conversions,&quot; in <em class="cEmphasis">Transitioning to ACUCOBOL-GT</em> for more information.</li></div>
</ol></div>
 </blockquote>

 <hr />

 <table align="left" border="0" cellspacing="0" cellpadding="0">
   <tr>
     <td align="left" width="300">
       <span style="font-size: 12px ; font-weight: bold ; font-family: Arial, Helvetica, sans-serif">
         <a href="http://www.acucorp.com">Acucorp, Inc.</a><br />
       </span>
       <span style="font-size: 10px ; font-family: Arial, Helvetica, sans-serif">
         Voice: 800.262.6585 (U.S.A. and Canada)<br />
         Voice: 858.689.4500<br />
         Fax: 858.689.4550<br />
         Please share your comments on this manual<br />
         or on any Acucorp documentation with the<br />
         <a href="mailto:docfeedback@acucorp.com">Acucorp Communications Department</a>.<br />
       </span>
     </td>
   </tr>
 </table>

<script type="text/javascript" language="JavaScript1.2">
   <!--
    document.write(WWHRelatedTopicsDivTag() + WWHPopupDivTag());
   // -->
  </script>

 
</body>
</html>
