<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />
  <meta http-equiv="Content-Style-Type" content="text/css" />
  <meta name="GENERATOR" content="Quadralay WebWorks Publisher Professional Edition 7.0.5.1025" />
  <meta name="TEMPLATEBASE" content="Acucorp WWH" />
  <meta name="LASTUPDATED" content="06/14/06 08:24:34" />
  <title>5.15.1  Push Button: Common Properties</title>
  <link rel="StyleSheet" href="document.css" type="text/css" />
  <link rel="StyleSheet" href="catalog.css" type="text/css" />
<script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/context.js"></script>
  <script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/towwhdir.js"></script>
  <script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/wwhpagef.js"></script>

  <script type="text/javascript" language="JavaScript1.2">
   <!--
    // Set reference to top level help frame
    //
    var  WWHFrame = WWHGetWWHFrame("");
   // -->
  </script>
 </head>

 <body onLoad="WWHUpdate();">

    <a href="../docs.htm" target="acudoc"><img src="images/sbooks.gif" width="70" height="27" border="0" alt="Books" align="right" /></a>
    <span style="font-size: 18px ; font-weight: bold"><font face="Arial, Helvetica, sans-serif">
       ACUCOBOL-GT User Interface Programming <br />
    </font></span>
    <span style="font-size: 14px ; font-weight: bold"><font face="Arial, Helvetica, sans-serif">
       Version 7.2
     </font></span>

 <p />

 <blockquote>
<p class="breadcrumb"><a href="gt25.htm">Chapter 5:  Control Types Reference</a> &gt; <a href="gt2566.htm">5.15  Push Button </a> &gt; </p>
<a name="wp1027879"> </a><h2 class="pHeading2">
5.15.1  Push Button: Common Properties
</h2>
<a name="wp1102307"> </a><p class="pBody">
The set of push button common properties includes:
</p>
<a name="wp1027880"> </a><h3 class="pHeadingRef">
TITLE
</h3>
<a name="wp1027883"> </a><p class="pBody">
A push button's title appears centered in the button.  The &quot;TITLE&quot; phrase is used to specify the title.  A <em class="cEmphasis">key letter</em> may be specified in the title (see section 6.4.9 of Book 3, <em class="cEmphasis">Reference Manual</em>).
</p>
<a name="wp1027884"> </a><h3 class="pHeadingRef">
VALUE
</h3>
<a name="wp1027887"> </a><p class="pBody">
Push buttons do not use values.
</p>
<a name="wp1027888"> </a><h3 class="pHeadingRef">
SIZE
</h3>
<a name="wp1027891"> </a><p class="pBody">
The LINES and SIZE values describe the size of the button's title area.  The LINES value describes the height of the title area.  The SIZE value is the width of the title area, using the width of the &quot;0&quot; (zero) character as the base unit.  Added to the title area is overhead for the push button's border.  The exact size of the border area is system-dependent.  Note that the title area may be larger than the actual title.  The title itself is centered both vertically and horizontally in the title area.  
</p>
<a name="wp1027892"> </a><p class="pBody">
When the program executes on a non-graphical system, the values specified in the CLINES and CSIZE phrases, if present, are used in place of the values specified by the LINES and SIZE phrases.
</p>
<a name="wp1027893"> </a><p class="pBody">
The default LINES value is &quot;1&quot;.  The default SIZE value is &quot;8&quot;.
</p>
<a name="wp1027894"> </a><p class="pBody">
When the BITMAP style is used, the LINES and SIZE values have a different meaning.  The values are the number of pixels in the height and width of the bitmap image (see <a  href="gt238.htm#wp1026228">section 3.7, &quot;Bitmap Buttons,&quot;</a> for details).  If omitted, the default values depend on the host system.  Under Windows, the default LINES value is &quot;15&quot; and the default SIZE value is &quot;16&quot;.  These correspond to the size of buttons typically found on a toolbar.  
</p>
<a name="wp1027895"> </a><h3 class="pHeadingRef">
COLOR
</h3>
<a name="wp1027898"> </a><p class="pBody">
Push buttons ignore any colors specified.  The actual colors used are system-dependent.  Under Windows, the user selects the colors in the Control Panel.  
</p>
<a name="wp1214134"> </a><h3 class="pHeadingRef">
EVENT-LIST, EXCLUDE-EVENT-LIST
</h3>
<a name="wp1214135"> </a><p class="pBody">
EVENT-LIST is an exclusive list of events that are either sent to or withheld (blocked) from the program depending on the value of EXCLUDE-EVENT-LIST.  See section 6.4.9, &quot;Common Screen Options,&quot; in Book 3.
</p>
<a name="wp1027901"> </a><h3 class="pHeadingRef">
STYLES
</h3>
<a name="wp1027904"> </a><h5 class="pHeading4">
DEFAULT-BUTTON   
</h5>
<a name="wp1071612"> </a><p class="pBody">
This style indicates that this button is the <em class="cEmphasis">default</em> push button.  The user can <em class="cEmphasis">push</em> (activate) the default button by typing a termination key that has a termination code of &quot;13&quot;.  Under the default runtime configuration, this is the &quot;Return&quot; (or &quot;Enter&quot;) key.  When this occurs, the runtime generates a <em class="cEmphasis">button pushed</em> event instead of the normal termination event.  This ensures that the program treats the &quot;Return&quot; key and the default push button in the same manner (since they both generate the same event).  See the TERMINATION-VALUE property described below for related information.  
</p>
<a name="wp1027905"> </a><p class="pBody">
Push buttons with the DEFAULT-BUTTON style are typically displayed differently by the host system.  Under Microsoft Windows, default push buttons have a thicker border.  Only one button should have the DEFAULT-BUTTON style at any one time.  If more than one button has the DEFAULT-BUTTON style, the meaning is ambiguous.  Note that the DEFAULT-BUTTON style is implied by the OK-BUTTON style.
</p>
<a name="wp1027908"> </a><h5 class="pHeading4">
ESCAPE-BUTTON   
</h5>
<a name="wp1071628"> </a><p class="pBody">
Similar to the DEFAULT-BUTTON style, this style indicates that the push button corresponds to the &quot;Escape&quot; key.  The user can <em class="cEmphasis">push</em> this button by typing a key that has an exception value of &quot;27&quot; (i.e., the &quot;Escape&quot; key in the default configuration).  When this occurs, the runtime generates a <em class="cEmphasis">button pushed</em> event instead of the normal exception event.  This ensures that your program handles the &quot;Escape&quot; key and the escape button in the same manner.  Note that only one enabled button should have the ESCAPE-BUTTON style at any one time.  See the EXCEPTION-VALUE property below for related information.  
</p>
<a name="wp1027911"> </a><h5 class="pHeading4">
NO-AUTO-DEFAULT  
</h5>
<a name="wp1071635"> </a><p class="pBody">
Normally, when a push button is activated, it becomes the default push button.  The runtime accomplishes this by giving the DEFAULT-BUTTON style to the activated push button and removing it from any other push button in the same floating window.  This allows the user to type the &quot;Return&quot; key to <em class="cEmphasis">push</em> the active button.  If you specify NO-AUTO-DEFAULT, then this behavior is not applied when this button is made active.  The default push button, if any, remains unchanged.
</p>
<a name="wp1027914"> </a><h5 class="pHeading4">
SELF-ACT 
</h5>
<a name="wp1168287"> </a><p class="pBody">
Normally, when the user clicks on a button with the mouse, the mouse requests that it be activated by sending a CMD-GOTO event to your program (see <a  href="gt26.htm#wp1035078">Chapter 6, &quot;Events Reference&quot;</a>).  After being activated, the button can then return that it has been pushed.  Buttons with the SELF-ACT style are <em class="cEmphasis">self-activated</em> instead.  This means that they do not send the CMD-GOTO event to your program when clicked.  Instead they activate themselves and then send the appropriate button pushed termination status to the program.  If you also assign an exception value to the button, it will act just like the equivalent function key.  For example, the following statement fragment builds a&#160;push button that behaves just like function key 1 (usually marked&#160;&quot;F1&quot;).  
</p>
<div class="pPreformattedRelative"><pre class="pPreformattedRelative">
DISPLAY PUSH-BUTTON, SELF-ACT, EXCEPTION-VALUE=1<a name="wp1027916"> </a>
</pre></div>
<a name="wp1027917"> </a><p class="pBody">
Self-activating buttons behave differently in some additional, subtle, ways.  Normally, if the user down-clicks on a push button and then moves the mouse away before releasing the button, the push button remains active (shown in Windows by a thicker border around the button).  But the button is not <em class="cEmphasis">clicked</em>.  Self-activating buttons do not remain active.  Instead, they re-activate the previous control.  This is done because self-activating controls don't tell the program about the down-click event.  To ensure that the program and screen states are consistent, the previous control is re-activated.  Also, self-activating buttons do not automatically become the default push button when clicked on with the mouse.
</p>
<a name="wp1027918"> </a><p class="pBody">
Generally speaking, there is rarely a need to use this style for push buttons defined in a group within the Screen Section.  The Screen Section handler performs all the button activation needed when the group is accepted.  The SELF-ACT style is mostly useful when you define individual push buttons using the DISPLAY verb (or as elementary Screen Section items) and you do not want to program the activation of those buttons.  A common use would be to add push buttons to an existing application where the push buttons will perform the same operation as some function key.  In this case, you can simply create the push button with the SELF-ACT style and an exception value that is the same as the function key.  Usually, no other coding is needed because the button will perform all of its own activation and simulate the function key when it is clicked.
</p>
<a name="wp1027919"> </a><p class="pNoteListHead">
<hr />
<b>Note:  </b>The SELF-ACT style performs automatic activation only when the user clicks on the button with the mouse or uses its key letter.  You must still program your own activation if you want the user to be able to visit the button in some other fashion (for example, by using the &quot;Tab&quot; key to move to the button).
</p>
<a name="wp1027920"> </a><p class="pNoteListEnd">
Also note that this style makes the button self-activating, but not any associated Screen Section entry.  This means that any BEFORE or AFTER procedures named in an associated Screen Section entry will <em class="cEmphasis">not</em> automatically execute when the button is clicked.  They will function only when you ACCEPT the Screen Section entry in your program.  
<hr />
</p>
<a name="wp1027923"> </a><h5 class="pHeading4">
OK-BUTTON   
</h5>
<a name="wp1071762"> </a><p class="pBody">
This style is used only when the button is created.  It has the effect of changing several of the button's default values.  It is equivalent to specifying the following:
</p>
<div class="pPreformattedRelative"><pre class="pPreformattedRelative">
TITLE  &quot;OK&quot;<a name="wp1027924"> </a>
DEFAULT-BUTTON<a name="wp1115410"> </a>
TERMINATION-VALUE = 13<a name="wp1115412"> </a>
</pre></div>
<a name="wp1027925"> </a><p class="pBody">
You may override the TITLE and TERMINATION-VALUE settings by providing your own.  The net effect of the OK-BUTTON style is that it provides a convenient way of creating a typical &quot;OK&quot; button.
</p>
<a name="wp1027928"> </a><h5 class="pHeading4">
CANCEL-BUTTON  
</h5>
<a name="wp1040893"> </a><p class="pBody">
This style is similar to the OK-BUTTON style, but it produces a <em class="cEmphasis">Cancel</em> button instead.  It is equivalent to specifying the following defaults when the button is created:
</p>
<div class="pPreformattedRelative"><pre class="pPreformattedRelative">
TITLE  &quot;Cancel&quot;<a name="wp1027929"> </a>
ESCAPE-BUTTON<a name="wp1071836"> </a>
EXCEPTION-VALUE = 27<a name="wp1071837"> </a>
</pre></div>
<a name="wp1027930"> </a><p class="pBody">
You may override the TITLE and EXCEPTION-VALUE defaults by providing your own.
</p>
<a name="wp1027933"> </a><h5 class="pHeading4">
BITMAP  
</h5>
<a name="wp1040942"> </a><p class="pBody">
 This style causes the push button to be drawn using a bitmap instead of its default appearance.  See <a  href="gt238.htm#wp1026228">section 3.7, &quot;Bitmap Buttons,&quot;</a> for a complete description.  
</p>
<a name="wp1027936"> </a><h5 class="pHeading4">
FRAMED  
</h5>
<a name="wp1040963"> </a><p class="pBody">
 This style is used only with bitmap buttons.  It requests that a thin frame be drawn around the button.  Typically this appears as a thin black line.  Not all systems support frames, in which case the request is ignored.  By default, buttons are framed under Windows NT/Windows 2000.  
</p>
<a name="wp1027939"> </a><h5 class="pHeading4">
UNFRAMED 
</h5>
<a name="wp1041015"> </a><p class="pBody">
  This style is used only with bitmap buttons.  It requests that the button be drawn without a frame.  Not all systems support unframed buttons, in which case the request is ignored.  By default, buttons are not framed under Windows 98.  
</p>
<a name="wp1027942"> </a><h5 class="pHeading4">
SQUARE   
</h5>
<a name="wp1071914"> </a><p class="pBody">
This style is used only with framed bitmap buttons.  It forces the button to have square corners.  Without this style, the button will have slightly rounded corners.  
</p>
<a name="wp1027945"> </a><h5 class="pHeading4">
FLAT   
</h5>
<a name="wp1071939"> </a><p class="pBody">
On Windows systems, this style creates a button without visible borders.  On non-Windows systems, this style has no effect.  
</p>
<a name="wp1120970"> </a><h5 class="pHeading4">
MULTILINE
</h5>
<a name="wp1120971"> </a><p class="pBody">
This style causes the push button to have a multi-line title.  When the MULTILINE style is applied, the push button's title text is automatically word wrapped to fit the push button's size.  You can force a line break in the text by embedding an ASCII line feed character (h&quot;0A&quot;).  The MULTILINE style is ignored in character-based environments.
</p>
 </blockquote>

 <hr />

 <table align="left" border="0" cellspacing="0" cellpadding="0">
   <tr>
     <td align="left" width="300">
       <span style="font-size: 12px ; font-weight: bold ; font-family: Arial, Helvetica, sans-serif">
         <a href="http://www.acucorp.com">Acucorp, Inc.</a><br />
       </span>
       <span style="font-size: 10px ; font-family: Arial, Helvetica, sans-serif">
         Voice: 800.262.6585 (U.S.A. and Canada)<br />
         Voice: 858.689.4500<br />
         Fax: 858.689.4550<br />
         Please share your comments on this manual<br />
         or on any Acucorp documentation with the<br />
         <a href="mailto:docfeedback@acucorp.com">Acucorp Communications Department</a>.<br />
       </span>
     </td>
   </tr>
 </table>

<script type="text/javascript" language="JavaScript1.2">
   <!--
    document.write(WWHRelatedTopicsDivTag() + WWHPopupDivTag());
   // -->
  </script>

 
</body>
</html>
