<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />
  <meta http-equiv="Content-Style-Type" content="text/css" />
  <meta name="GENERATOR" content="Quadralay WebWorks Publisher Professional Edition 7.0.5.1025" />
  <meta name="TEMPLATEBASE" content="Acucorp WWH" />
  <meta name="LASTUPDATED" content="06/14/06 08:24:34" />
  <title>5.11.2  Grid: Special Properties</title>
  <link rel="StyleSheet" href="document.css" type="text/css" />
  <link rel="StyleSheet" href="catalog.css" type="text/css" />
<script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/context.js"></script>
  <script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/towwhdir.js"></script>
  <script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/wwhpagef.js"></script>

  <script type="text/javascript" language="JavaScript1.2">
   <!--
    // Set reference to top level help frame
    //
    var  WWHFrame = WWHGetWWHFrame("");
   // -->
  </script>
 </head>

 <body onLoad="WWHUpdate();">

    <a href="../docs.htm" target="acudoc"><img src="images/sbooks.gif" width="70" height="27" border="0" alt="Books" align="right" /></a>
    <span style="font-size: 18px ; font-weight: bold"><font face="Arial, Helvetica, sans-serif">
       ACUCOBOL-GT User Interface Programming <br />
    </font></span>
    <span style="font-size: 14px ; font-weight: bold"><font face="Arial, Helvetica, sans-serif">
       Version 7.2
     </font></span>

 <p />

 <blockquote>
<p class="breadcrumb"><a href="gt25.htm">Chapter 5:  Control Types Reference</a> &gt; <a href="gt2547.htm">5.11  Grid</a> &gt; </p>
<a name="wp1168920"> </a><h2 class="pHeading2">
5.11.2  Grid: Special Properties
</h2>
<a name="wp1168923"> </a><h5 class="pHeading4">
ACTION (alphanumeric)   
</h5>
<a name="wp1162106"> </a><p class="pBody">
Used only with paged grids, this property causes the grid to invoke its paging logic in one of several ways.  This simplifies the task of filling the grid with its initial data. After creating a grid, you would typically assign one of the following values to ACTION to load the initial page of data that the user will see.  The values of the following are level 78 data names found in &quot;acugui.def&quot;: 
</p>
<a name="wp1162109"> </a><p class="pIndented1">
<b class="cBold">ACTION-FIRST-PAGE (value 10):</b>  Generates the grid's MSG-PAGED-FIRST event.  This fills the grid with the first page of data from the data source.  
</p>
<a name="wp1162113"> </a><p class="pIndented1">
<b class="cBold">ACTION-LAST-PAGE (value 11): </b><span style="font-family: Arial, Verdana, Helvetica, sans-serif"> </span>Generates the grid's MSG-PAGED-LAST event.  This fills the grid with the last page of data from the data source.  
</p>
<a name="wp1162117"> </a><p class="pIndented1">
<b class="cBold">ACTION-CURRENT-PAGE (value 12):</b>  Empties the grid of any data except for column headers and generates the grid's MSG-PAGED-NEXTPAGE event.  If you position a data file using the START statement before performing this action, the grid will fill the page of data starting with the record selected by the START.  
</p>
<a name="wp1203801"> </a><p class="pIndented1">
<b class="cBold">ACTION-PREVIOUS-PAGE (value 14):</b>  Generates the grid's MSG-PAGED-PREVPAGE event.  This fills the grid with the previous page of data from the data source.  
</p>
<a name="wp1203816"> </a><p class="pIndented1">
<b class="cBold">ACTION-PREVIOUS (value 15):</b>  Generates the grid's MSG-PAGED-PREV event.  This scrolls up to show the record before the first record of the grid's current data.
</p>
<a name="wp1203827"> </a><p class="pIndented1">
<b class="cBold">ACTION-NEXT (value 16):</b>  Generates the grid's MSG-PAGED-NEXT event.  This scrolls down to show the next record after the last record of the grid's current data.
</p>
<a name="wp1203840"> </a><p class="pIndented1">
<b class="cBold">ACTION-NEXT-PAGE (value 17): </b> Generates the grid's MSG-PAGED-NEXTPAGE event.  This fills the grid with the next page of data from the data source.
</p>
<a name="wp1162121"> </a><h5 class="pHeading4">
ACTION-HIDE-DRAG  
</h5>
<a name="wp1162122"> </a><p class="pBody">
Removes the DRAG-COLOR.  See the description of the DRAG-COLOR property below.  <em class="cEmphasis">(create, modify)</em>
</p>
<a name="wp1162125"> </a><h5 class="pHeading4">
ALIGNMENT (alphanumeric)   
</h5>
<a name="wp1162126"> </a><p class="pBody">
Describes the alignment of each column in the grid.  Each time you set this property, you describe the alignment for the next column in the grid, starting with the first.  Setting this property to spaces clears the previously specified alignments.  Valid values are as follows (case does not matter):
</p>
<div class="pSmartList1"><ul class="pSmartList1">
<div class="pSmartList2"><ul class="pSmartList2">
<a name="wp1162127"> </a><div class="pSmartList2"><li>&quot;L&quot; = left justified</li></div>
<a name="wp1162128"> </a><div class="pSmartList2"><li>&quot;R&quot; = right justified</li></div>
<a name="wp1162129"> </a><div class="pSmartList2"><li>&quot;C&quot; = centered</li></div>
<a name="wp1162130"> </a><div class="pSmartList2"><li>&quot;U&quot; = unaligned</li></div>
</ul></div>
</ul></div>
<a name="wp1162131"> </a><p class="pBody">
Unaligned data is displayed in the cell &quot;as is.&quot;  Otherwise, leading and trailing spaces are removed from the data, and it is justified as specified.  The default for unspecified columns is &quot;unaligned.&quot;  
</p>
<a name="wp1162132"> </a><p class="pBody">
The following example sets various alignments for a three-column grid:
</p>
<div class="pPreformattedRelative"><pre class="pPreformattedRelative">
ALIGNMENT = ( &quot;L&quot;, &quot;R&quot;, &quot;C&quot; )<a name="wp1162133"> </a>
</pre></div>
<a name="wp1162134"> </a><p class="pBody">
(<em class="cEmphasis">create, modify</em>)
</p>
<a name="wp1162137"> </a><h5 class="pHeading4">
BITMAP (numeric)   
</h5>
<a name="wp1162138"> </a><p class="pBody">
Places a bitmap in the cell identified by the X and Y properties.  This should be set to the handle of a bitmap loaded in memory (using the WBITMAP-LOAD option of W$BITMAP).  If it is set to zero, then any existing bitmap is removed.  You may place a bitmap in the same cell as text.  The bitmap is concatenated to the text (with a small separation), and the whole unit is aligned as specified by the ALIGNMENT property.  When the user performs text entry in the cell, the bitmap is hidden until the entry is complete.  The same bitmap may be placed in more than one cell.  You should not destroy the bitmap handle while any cells contain the bitmap. (<em class="cEmphasis">create, modify</em>)
</p>
<a name="wp1162141"> </a><h5 class="pHeading4">
BITMAP-NUMBER (numeric)   
</h5>
<a name="wp1162142"> </a><p class="pBody">
Identifies a particular image when you specify a bitmap strip as the BITMAP for a cell.  The first image in the strip is number &quot;1&quot;, the second is number &quot;2&quot;, and so on.  Images in a bitmap strip must be uniform width, as specified by BITMAP-WIDTH.  The cell affected is identified by the X and Y properties.  The default value is &quot;1&quot;.  (<em class="cEmphasis">create, modify</em>)
</p>
<a name="wp1162145"> </a><h5 class="pHeading4">
BITMAP-TRAILING (numeric)   
</h5>
<a name="wp1162146"> </a><p class="pBody">
When set to &quot;1&quot;, this property indicates that the bitmap should follow the text in the cell.  When it is set to zero (the default), the bitmap precedes the text.  Other values have undefined effects.  The cell affected is identified by the X and Y properties.  (<em class="cEmphasis">create, modify</em>)
</p>
<a name="wp1162147"> </a><h5 class="pHeading4">
BITMAP-WIDTH (numeric)   
</h5>
<a name="wp1162150"> </a><p class="pBody">
Identifies the width, in pixels, of the bitmap identified by BITMAP.  If the width is not set, then the entire bitmap is used.  Used in conjunction with BITMAP-NUMBER to select an image out of a bitmap strip.  The cell affected is identified by the X and Y properties.  (<em class="cEmphasis">create, modify</em>)
</p>
<a name="wp1162153"> </a><h5 class="pHeading4">
CELL-COLOR (numeric)   
</h5>
<a name="wp1162154"> </a><p class="pBody">
Sets the color for the cell identified by the X and Y properties.  The color value specified uses the COLOR phrase values for both foreground and background colors.  The foreground and background intensity of the grid is ignored-the value is treated as the final color value.  See COLOR above for related information.  (<em class="cEmphasis">create, modify</em>)
</p>
<a name="wp1162157"> </a><h5 class="pHeading4">
CELL-DATA (alphanumeric)   
</h5>
<a name="wp1162158"> </a><p class="pBody">
When set, replaces the text data at the cell identified by the X and Y properties with the specified value.  When inquired, returns the text data at that cell.  (<em class="cEmphasis">create, modify, inquire</em>)  
</p>
<a name="wp1162161"> </a><h5 class="pHeading4">
CELL-FONT (numeric)   
</h5>
<a name="wp1162162"> </a><p class="pBody">
Sets the font for the cell identified by the X and Y properties.  This should be set to a valid font handle. (<em class="cEmphasis">create, modify</em>)
</p>
<a name="wp1203565"> </a><h5 class="pHeading4">
CELL-PROTECTION (numeric) 
</h5>
<a name="wp1203561"> </a><p class="pBody">
Protects the individual cell identified by the X and Y properties from being changed by the user.  Set this property to &quot;1&quot; to protect a cell or &quot;0&quot; to allow the cell to be changed.  If the cell is protected, the user can visit the cell, but not modify its contents.  The appearance of the cell does not automatically change when the cell is protected.  (<em class="cEmphasis">create, modify</em>)
</p>
<a name="wp1162165"> </a><h5 class="pHeading4">
COLUMN-COLOR (numeric)   
</h5>
<a name="wp1162166"> </a><p class="pBody">
Sets the color for the entire column identified by the X property.  The color value specified uses the COLOR phrase values for both foreground and background colors.  The foreground and background intensity of the grid is ignored-the value is treated as the final color value.  For example, to set column three's color to dark blue (2) on bright white (512), you could do the following:
</p>
<div class="pPreformattedRelative"><pre class="pPreformattedRelative">
MODIFY GRID-1, X = 3, COLUMN-COLOR = 514<a name="wp1162167"> </a>
</pre></div>
<a name="wp1162168"> </a><p class="pBody">
You should be sure to set the X property before setting COLUMN-COLOR.  See COLOR above for related information.  (<em class="cEmphasis">create, modify</em>)  
</p>
<a name="wp1162171"> </a><h5 class="pHeading4">
COLUMN-DIVIDERS (numeric)   
</h5>
<a name="wp1162172"> </a><p class="pBody">
Sets the width, in pixels, of the column dividers.  Each time you set this property, you describe the width of the next column's trailing separator, starting with the first column.  Setting this property to &quot;-1&quot; clears the previously specified values.  Unspecified columns use a system-dependent default value.  On graphical systems, the default divider is one pixel wide.  On character systems, the default divider is omitted (zero pixels wide).  (<em class="cEmphasis">create, modify</em>)  
</p>
<a name="wp1162175"> </a><h5 class="pHeading4">
COLUMN-FONT (numeric)   
</h5>
<a name="wp1201814"> </a><p class="pBody">
Sets the font to use for the column identified by the X property. This should be set to a valid font handle.  (<em class="cEmphasis">create, modify</em>)
</p>
<a name="wp1201817"> </a><h5 class="pHeading4">
COLUMN-PROTECTION (numeric) 
</h5>
<a name="wp1201818"> </a><p class="pBody">
Protects the entire column identified by the X property from being changed by the user.  If this property is set to &quot;1&quot;, the column is protected; if the property is set to &quot;0&quot;, the column is not protected.  The appearance of the column does not change when the column is protected.  (<em class="cEmphasis">create, modify</em>)
</p>
<a name="wp1162179"> </a><h5 class="pHeading4">
CURSOR-COLOR (numeric)   
</h5>
<a name="wp1162180"> </a><p class="pBody">
Sets the color for the cell containing the cursor. The color value specified uses the COLOR phrase values for both foreground and background colors.  The foreground and background intensity of the grid is ignored-the value is treated as the final color value.  Note that the cursor is normally hidden when the grid loses the focus.  This causes the cell containing the cursor to revert to its normal color.  The default cursor color is &quot;0&quot;.  See COLOR and CURSOR-FRAME-WIDTH for related information.  (<em class="cEmphasis">create, modify, inquire</em>)
</p>
<a name="wp1162183"> </a><h5 class="pHeading4">
CURSOR-FRAME-WIDTH (numeric)   
</h5>
<a name="wp1162184"> </a><p class="pBody">
Determines how the cursor should display in the grid.  When this is set to a positive value, the cursor displays a frame that many pixels thick around the cursor's cell.  The frame extends partially into the cell, and partially outside the cell.  When this property is set to a negative value, a light dotted line is drawn around the cell's contents.  The absolute value of this property is the number of blank pixels between the cell's border and the dotted line.  When it is set to zero, no cursor frame is drawn.  The default value is &quot;3&quot;.  (<em class="cEmphasis">create, modify, inquire</em>)  
</p>
<a name="wp1162185"> </a><h5 class="pHeading4">
CURSOR-X (numeric)
</h5>
<a name="wp1162188"> </a><p class="pBody">
Identifies the column where the cursor is located.  Setting this property moves the cursor.  Inquiring this property returns the cursor's location.  Note that you may MODIFY this property during a MSG-VALIDATE event to direct where the cursor should go after the user finishes an entry into a cell.  However, you should do this only if you are not also forcing the user to stay in entry mode on the current cell.  If you move the cursor in response to other events while the user is in entry mode, the results can be confusing.  (<em class="cEmphasis">create, modify, inquire</em>)
</p>
<a name="wp1162191"> </a><h5 class="pHeading4">
CURSOR-Y (numeric)   
</h5>
<a name="wp1162192"> </a><p class="pBody">
Identifies the record where the cursor is located.  Setting this property moves the cursor.  Inquiring this property returns the cursor's location. See CURSOR-X for additional comments.  (<em class="cEmphasis">create, modify, inquire</em>)
</p>
<a name="wp1162195"> </a><h5 class="pHeading4">
DATA-COLUMNS (numeric)   
</h5>
<a name="wp1162196"> </a><p class="pBody">
This property describes where each column begins in records added to the grid (see RECORD-TO-ADD).  Columns are defined by character positions in the raw data, with the first character being position &quot;1&quot;.  For example, the following data item:
</p>
<div class="pPreformattedRelative"><pre class="pPreformattedRelative">
01 LIST-DATA.<a name="wp1243790"> </a>
  03  NAME             PIC X(20).<a name="wp1243791"> </a>
  03  PHONE-NUMBER     PIC X(15).<a name="wp1243792"> </a>
  03  STATE            PIC X(2).<a name="wp1162200"> </a>
</pre></div>
<a name="wp1162201"> </a><p class="pBody">
would normally be displayed in three columns, one at position &quot;1&quot; (NAME), one at position &quot;21&quot; (PHONE-NUMBER), and one at position &quot;36&quot; (STATE).  Each time you set DATA-COLUMNS to a positive value, a new column is created at that position.  Setting DATA-COLUMNS to zero clears all the existing column definitions.  Note that there is always a column at position &quot;1&quot;, so setting position &quot;1&quot; is not required.  An example DATA-COLUMNS setting that would match the LIST-DATA group item would be:
</p>
<div class="pPreformattedRelative"><pre class="pPreformattedRelative">
DATA-COLUMNS = (21, 36)<a name="wp1162202"> </a>
</pre></div>
<a name="wp1162203"> </a><p class="pBody">
<em class="cEmphasis">(create, modify)</em>
</p>
<a name="wp1162204"> </a><p class="pBody">
You can also specify DATA-COLUMNS using the RECORD-POSITION construct. This is discussed in detail in Chapter 5.2.5 of the Reference Manual. 
</p>
<a name="wp1162207"> </a><h5 class="pHeading4">
DATA-TYPES (alphanumeric)   
</h5>
<a name="wp1162208"> </a><p class="pBody">
Describes various entry characteristics of each column. Each time you set this property, you describe the data type for the next column in the grid, starting with the first.  Setting this property to spaces clears the previously specified data types.  
</p>
<a name="wp1162209"> </a><p class="pBody">
A data type specification contains two components.  The first is a single character that describes the set of legal characters that the user may type in this column.  The set of possible values is:
</p>
<a name="wp1162265"> </a><p class="pBodyRelative">
   </p><div>
<table border="1" cellpadding="2" cellspacing="2">
  <caption></caption>
  <tr align="left" valign="top">    <th><a name="wp1162212"> </a>
Character

</th>
    <th><a name="wp1162214"> </a>
Description

</th>
    <th><a name="wp1162216"> </a>
Characters Allowed

</th>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1162218"> </a><p class="pCellBody">
&quot;X&quot;
</p>
</td>
    <td><a name="wp1162220"> </a><p class="pCellBody">
Alphanumeric
</p>
</td>
    <td><a name="wp1162222"> </a><p class="pCellBody">
All characters
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1162224"> </a><p class="pCellBody">
&quot;U&quot;
</p>
</td>
    <td><a name="wp1162226"> </a><p class="pCellBody">
Uppercase alphanumeric
</p>
</td>
    <td><a name="wp1162228"> </a><p class="pCellBody">
All characters - automatically converted to uppercase
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1162230"> </a><p class="pCellBody">
&quot;L&quot;
</p>
</td>
    <td><a name="wp1162232"> </a><p class="pCellBody">
Lowercase alphanumeric
</p>
</td>
    <td><a name="wp1162234"> </a><p class="pCellBody">
All characters - automatically converted to lowercase
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1162236"> </a><p class="pCellBody">
&quot;9&quot;
</p>
</td>
    <td><a name="wp1162238"> </a><p class="pCellBody">
Number
</p>
</td>
    <td><a name="wp1162240"> </a><p class="pCellBody">
Digits, local decimal point, sign, space
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1162242"> </a><p class="pCellBody">
&quot;Z&quot;
</p>
</td>
    <td><a name="wp1162244"> </a><p class="pCellBody">
Edited number
</p>
</td>
    <td><a name="wp1162246"> </a><p class="pCellBody">
Digits, sign, period, comma, local currency symbol, &quot;$&quot;, &quot;*&quot;, &quot;/&quot;, &quot;%&quot;, space
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1162248"> </a><p class="pCellBody">
&quot;I&quot;
</p>
</td>
    <td><a name="wp1162250"> </a><p class="pCellBody">
Integer
</p>
</td>
    <td><a name="wp1162252"> </a><p class="pCellBody">
Digits, sign, space
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1162254"> </a><p class="pCellBody">
&quot;P&quot;
</p>
</td>
    <td><a name="wp1162256"> </a><p class="pCellBody">
Positive integer
</p>
</td>
    <td><a name="wp1162258"> </a><p class="pCellBody">
Digits, space
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1162260"> </a><p class="pCellBody">
&quot;D&quot;
</p>
</td>
    <td><a name="wp1162262"> </a><p class="pCellBody">
Date
</p>
</td>
    <td><a name="wp1162264"> </a><p class="pCellBody">
Digits, &quot;/&quot;, hyphen
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1200577"> </a><p class="pCellBody">
&quot;E&quot;
</p>
</td>
    <td><a name="wp1200579"> </a><p class="pCellBody">
European Date
</p>
</td>
    <td><a name="wp1200581"> </a><p class="pCellBody">
Digits, &quot;/&quot;, hyphen, period
</p>
</td>
</tr>
</table>
</div>
<p class="pBodyRelative">
</p>
<a name="wp1162266"> </a><p class="pBody">
You may specify the data type character in either upper or lower case.  After the data type character, you may specify the maximum number of characters that may be entered in this column.  This value is specified in parentheses.  Two values have special meanings: &quot;0&quot; indicates that the maximum characters is set equal to the size of the column, and &quot;-1&quot; indicates no limit other than those imposed by the internals of the grid (<em class="cEmphasis">i.e.</em>, 32766 characters).  When a cell may contain more text than it can display, the cell scrolls horizontally in a fashion similar to entry fields.
</p>
<a name="wp1162267"> </a><p class="pBody">
You may omit either part of the specification.  If the data type part is omitted, it defaults to &quot;X&quot; (all characters allowed).  If the size is omitted, it defaults to &quot;0&quot; (match the size of the column).  These defaults also apply to columns for which DATA-TYPES has not been specified.  
</p>
<a name="wp1162268"> </a><p class="pBody">
For example, to specify that a column should allow 30 uppercase characters, specify &quot;U(30)&quot;.  To create a column that allows only digits for the width of the column, use &quot;P(0)&quot;, or just &quot;P&quot;.  
</p>
<a name="wp1162269"> </a><p class="pNoteList">
<hr />
<b>Note:  </b>The data type character only limits which characters the user can enter into the column.  The grid itself does not further validate or format the entered data.  To do so, you should respond to the MSG-FINISH-ENTRY event.  The grid's character filtering is intended only to provide the first stage of validation by allowing only characters that are appropriate for certain types of data.  
<hr />
</p>
<a name="wp1162271"> </a><h5 class="pHeading4">
DISPLAY-COLUMNS (numeric)   
</h5>
<a name="wp1162273"> </a><p class="pBody">
This property describes the number of columns and their location in the grid. The first column always displays in column &quot;1&quot;.  Additional columns display at the locations set by DISPLAY-COLUMNS.  Columns are measured with the standard font.  Each time you set DISPLAY-COLUMNS to a positive value, a new display column is defined.  Setting DISPLAY-COLUMNS to &quot;0&quot; clears all of the columns (except column 1).  Usually, you set DISPLAY-COLUMNS in a list, like this:
</p>
<div class="pPreformattedRelative"><pre class="pPreformattedRelative">
DISPLAY-COLUMNS = (1, 21, 35)<a name="wp1162274"> </a>
</pre></div>
<a name="wp1162275"> </a><p class="pBody">
This example sets three columns, one starting at column &quot;1&quot;, the next starting at column &quot;21&quot; and the last starting at column &quot;35&quot;.  The last column extends to the end of the grid (but see VIRTUAL-WIDTH below).  
</p>
<a name="wp1162276"> </a><p class="pBody">
In a grid without horizontal scrolling specified (see HSCROLL above), you can have a record occupy multiple rows in a grid.  To do this, restart numbering columns at &quot;1&quot; after setting the first row's columns.  For example, the following describes a grid with records that span two rows, with three columns on the first row and two columns in the second:
</p>
<div class="pPreformattedRelative"><pre class="pPreformattedRelative">
DISPLAY-COLUMNS = (1, 21, 35, 1, 21)<a name="wp1162277"> </a>
</pre></div>
<a name="wp1162278"> </a><p class="pBody">
On the screen, one record of this grid would look something like this:
</p>
<div class="pPreformattedRelative"><pre class="pPreformattedRelative">
column 1      column 2      column 3<a name="wp1162279"> </a>
<a name="wp1162280"> </a>
column 4      column 5      <a name="wp1162281"> </a>
</pre></div>
<a name="wp1162282"> </a><p class="pBody">
You can also use columns to hide data.  A column set beyond the right side of the grid is not visible on the screen.  You can use this behavior to store information in the grid that your program needs to associate with records, but that you do not want to be seen by the user.  One potential use for this feature is to store a file record's primary key value in the hidden column so that you can retrieve the full record easily when the user selects an item in the grid.  (<em class="cEmphasis">create, modify</em>)
</p>
<a name="wp1162285"> </a><h5 class="pHeading4">
DIVIDER-COLOR (numeric)   
</h5>
<a name="wp1162286"> </a><p class="pBody">
Sets the color of the dividers for the grid.  Set this to the color number of the desired color (<em class="cEmphasis">e.g. </em>&quot;1&quot; for black, &quot;9&quot; for dark gray).  The color ignores the grid's foreground and background intensity-it is treated as the final color value.  When this property is set to zero (the default), a system-specific divider color is used.  This color depends on the background color for the grid. (<em class="cEmphasis">create, modify, inquire</em>)
</p>
<a name="wp1162289"> </a><h5 class="pHeading4">
DRAG-COLOR (numeric)   
</h5>
<a name="wp1162290"> </a><p class="pBody">
Sets the highlight color that's applied to the rectangular area defined when the user clicks and drags the mouse.  DRAG-COLOR value greater than zero defines a color to be applied using the COLOR phrase values.
</p>
<a name="wp1162291"> </a><p class="pBody">
DRAG-COLOR is used for the same purpose as REGION-COLOR (see the description of the REGION-COLOR property below for details).  You should use DRAG-COLOR instead of REGION-COLOR when you want to allow users to highlight a block of cells by clicking and dragging the mouse (REGION-COLOR has poor performance in applications that run with the ACUCOBOL-GT Thin Client).
</p>
<a name="wp1162292"> </a><p class="pBody">
DRAG-COLOR is applied when the user begins a click-and-drag operation.
</p>
<a name="wp1162293"> </a><p class="pBody">
DRAG-COLOR is removed when one of the following actions occur:
</p>
<div class="pSmartList1"><ul class="pSmartList1">
<div class="pSmartList2"><ul class="pSmartList2">
<a name="wp1162294"> </a><div class="pSmartList2"><li>The cursor is moved to a new cell after an MSG-END-DRAG event is generated</li></div>
<a name="wp1162295"> </a><div class="pSmartList2"><li>A heading is clicked</li></div>
<a name="wp1162296"> </a><div class="pSmartList2"><li>An MSG-BEGIN-ENTRY event is generated</li></div>
<a name="wp1162297"> </a><div class="pSmartList2"><li>The property ACTION is set to ACTION-HIDE-DRAG (level 78 found in &quot;acugui.def&quot;)</li></div>
</ul></div>
</ul></div>
<a name="wp1162298"> </a><p class="pBody">
The DRAG-COLOR is hidden when the grid does not have focus.
</p>
<a name="wp1162299"> </a><p class="pBody">
If DRAG-COLOR is specified for a grid that has a menu defined for it, the right-click of the mouse inside the drag region brings up the menu.  This allows the user to select a menu item intended specifically for a marked region of the grid.  The runtime determines whether or not a grid has a menu immediately after the event MSG-GRID-RBUTTON-DOWN completes.
</p>
<a name="wp1162300"> </a><p class="pBody">
DRAG-COLOR has a color priority above REGION-COLOR but below CURSOR-COLOR.  (<em class="cEmphasis">create, modify, inquire</em>)
</p>
<a name="wp1162303"> </a><h5 class="pHeading4">
END-COLOR (numeric)   
</h5>
<a name="wp1162304"> </a><p class="pBody">
Controls the color of the grid in the area past the end of the last column or the end of the last row.  In some cases, a blank area is visible.  If this property is set to zero (the default), this area is filled with the &quot;button face&quot; color configured for the host machine (this is set in the Control Panel under Windows).  If it is set to a non-zero value, this value represents the exact ACUCOBOL-GT color to use.  These values range from &quot;1&quot; (black) to &quot;16&quot; (bright white).   (<em class="cEmphasis">create, modify, inquire</em>)
</p>
<a name="wp1162307"> </a><h5 class="pHeading4">
ENTRY-REASON (alphanumeric)   
</h5>
<a name="wp1162308"> </a><p class="pBody">
This property records the user's action that caused the grid to shift to entry mode.  It is set immediately before the MSG-BEGIN-ENTRY event is generated, and it is retained until overwritten by another MSG-BEGIN-ENTRY event or until the grid is destroyed. 
</p>
<a name="wp1162309"> </a><p class="pBody">
The encoding is a single PIC X character as follows:
</p>
<a name="wp1162323"> </a><p class="pBodyRelative">
  </p><div>
<table border="0" cellpadding="6" cellspacing="1">
  <caption></caption>
  <tr align="left" valign="top">    <td><a name="wp1174776"> </a><p class="pCellBody">
x&quot;00&quot;
</p>
</td>
    <td><a name="wp1174778"> </a><p class="pCellBody">
A X&quot;00&quot; (binary 0, ASCII null) value indicates that the user double-clicked on the cell
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1174780"> </a><p class="pCellBody">
x&quot;0D&quot;
</p>
</td>
    <td><a name="wp1174782"> </a><p class="pCellBody">
A X&quot;0D&quot; (binary 13, ASCII carriage-return) value indicates that the user pressed the &lt;Enter&gt; key
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1174784"> </a><p class="pCellBody">
Otherwise
</p>
</td>
    <td><a name="wp1174786"> </a><p class="pCellBody">
Any other value is the key that the user pressed.  For example, if the user started typing &quot;John,&quot; then the letter &quot;J&quot; is returned by ENTRY-REASON.
</p>
</td>
</tr>
</table>
</div>
<p class="pBodyRelative">
</p>
<a name="wp1162324"> </a><p class="pBody">
ENTRY-REASON can be only inquired.  Setting it has no effect.  You may inquire on ENTRY-REASON during a MSG-BEGIN-ENTRY event to determine what caused the current entry to start.  Note that you can then prohibit entry if you desire by moving EVENT-ACTION-FAIL to EVENT-ACTION and returning from the event procedure.
</p>
<a name="wp1162327"> </a><h5 class="pHeading4">
FILE-POS (numeric)   
</h5>
<a name="wp1162328"> </a><p class="pBody">
This property is used only for paged grids.  The value of FILE-POS is the grid's record number that matches the current file position in the corresponding data file.  It is used to simplify the paging logic in your program.  FILE-POS computes the number of records that need to be read in order to find the record needed by the grid.  The grid uses this value when generating MSG-PAGED-NEXT or MSG-PAGED-PREV events.  
</p>
<a name="wp1162329"> </a><p class="pBody">
The FILE-POS value will often be either the last visible record in the grid or the first non-heading record visible.  To illustrate, suppose that you have a four line grid with no headings.  When you are moving forward through the file, FILE-POS will usually be &quot;4&quot;, matching the last record added to the grid.  If the user clicks on the &quot;Next Record&quot; button, the MSG-PAGED-NEXT event will indicate that only one READ NEXT is needed to retrieve the appropriate record.  However, if the user clicks the &quot;Previous Record&quot; button, then the MSG-PAGED-PREV event will indicate that four READ PREVIOUS statements are needed to get the desired record.  In this case, FILE-POS will change to &quot;1&quot;, indicating that only one READ PREVIOUS is needed to get another &quot;previous&quot; record while four READ NEXT statements are needed to get the &quot;next&quot; record.
</p>
<a name="wp1162330"> </a><p class="pBody">
In addition, FILE-POS has three special values that are level 78 data names defined in &quot;acugui.def&quot;.  These values are listed below:
</p>
<a name="wp1175946"> </a><p class="pBodyRelative">
</p><div>
<table border="0" cellpadding="6" cellspacing="1">
  <caption></caption>
  <tr align="left" valign="top">    <td><a name="wp1176164"> </a><p class="pCellBody">
<b class="cBold">PAGED-AT-START<br /></b>(value 2147418113) 
</p>
</td>
    <td><a name="wp1176166"> </a><p class="pCellBody">
When FILE-POS is set to this value, the grid will not generate MSG-PAGED-PREV and MSG-PAGED-PREVPAGE events.
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1176168"> </a><p class="pCellBody">
<b class="cBold">PAGED-AT-END<br /></b>(value 2147418114) 
</p>
</td>
    <td><a name="wp1176170"> </a><p class="pCellBody">
When FILE-POS is set to this value, the grid will not generate MSG-PAGED-NEXT and MSG-PAGED-NEXTPAGE events.
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1176821"> </a><p class="pCellBody">
<b class="cBold">PAGED-EMPTY</b><b class="cBold"><br /></b>(value 2147418115) <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;
</p>
</td>
    <td><a name="wp1176823"> </a><p class="pCellBody">
When FILE-POS is set to PAGED-EMPTY, it will not generate MSG-PAGED-NEXT, MSG-PAGED-NEXTPAGE, MSG-PAGE-PREV and MSG-PAGED-PREVPAGE.  Since it is possible that other users will add records to the file (that could be seen by re-reading it), this value will still generate MSG-PAGED-FIRST and MSG-PAGED-LAST events.  
</p>
</td>
</tr>
</table>
</div>
<p class="pBodyRelative">
</p>
<a name="wp1162345"> </a><p class="pBody">
 The grid automatically manages the FILE-POS, using the following rules:
</p>
<div class="pSmartList1"><ol type="a" class="pSmartList1">
<div class="pSmartList2"><ol type="a" class="pSmartList2">
<a name="wp1162346"> </a><div class="pSmartList2"><li>When a record is added to the grid in the topmost non-heading position, FILE-POS is set to that position.  </li></div>
<a name="wp1162347"> </a><div class="pSmartList2"><li>When a record is added to the grid or past the last grid record, FILE-POS is set to that position.</li></div>
<a name="wp1162348"> </a><div class="pSmartList2"><li>If you set EVENT-ACTION-FAIL in response to a MSG-PAGED-NEXT event, FILE-POS is set to PAGED-AT-END.</li></div>
<a name="wp1162349"> </a><div class="pSmartList2"><li>If you set EVENT-ACTION-FAIL in response to a MSG-PAGED-PREV event, FILE-POS is set to PAGED-AT-START.  </li></div>
<a name="wp1162350"> </a><div class="pSmartList2"><li>If you set EVENT-ACTION-FAIL in response to a MSG-PAGED-FIRST or MSG-PAGED-LAST event, FILE-POS is set to PAGED-EMPTY.  </li></div>
<a name="wp1162351"> </a><div class="pSmartList2"><li>If a MSG-PAGED-FIRST event sets EVENT-ACTION (this is the default), FILE-POS is set to PAGED-AT-START.  </li></div>
<a name="wp1162352"> </a><div class="pSmartList2"><li>If a MSG-PAGED-LAST event sets EVENT-ACTION, FILE-POS is set to PAGED-AT-END.  </li></div>
<a name="wp1162353"> </a><div class="pSmartList2"><li>If you reset the grid, FILE-POS is set to PAGED-EMPTY.  Adding records to the grid will change this value.  </li></div>
</ol></div>
</ol></div>
<a name="wp1162354"> </a><p class="pBody">
The automatic handling provided here will correctly handle grids whose data is coming from an indexed data file if you move the file's record pointer only in response to grid events (and only as required by those events).  In cases where you move the file's record pointer independent of a grid request, you will need to do one of the following:
</p>
<div class="pSmartList1"><ol type="a" class="pSmartList1">
<div class="pSmartList2"><ol type="a" class="pSmartList2">
<a name="wp1162357"> </a><div class="pSmartList2"><li>Modify FILE-POS to reflect the actual record position.  You may use FILE-POS numbers outside of the range of available grid records if needed.  For example, if you position the file pointer one record before the first record in the grid, set FILE-POS to &quot;0&quot;.  Set FILE-POS to &quot;1&quot; to point to the first record in the grid, &quot;0&quot; to point to the record before that, &quot;-1&quot; to point to two records before it, and so on.  You can also use numbers larger than the last grid record to indicate a position beyond the end of the grid.  </li></div>
<a name="wp1162358"> </a><div class="pSmartList2"><li>Reposition the current file pointer to match the FILE-POS value.   You can do this by reading the appropriate record from the data file again.  Note that a START may not be good enough.  START positions the file pointer so that the next READ NEXT or READ PREVIOUS returns the selected record.  It may not return the record positioned at either side of that record.  </li></div>
<a name="wp1162359"> </a><div class="pSmartList2"><li>Ignore the positioning information passed into the MSG-PAGED-NEXT and MSG-PAGED-PREV events, and the positioning information supplied by the grid control.  Supply your own positioning logic.  In this case, FILE-POS may be incorrect; but FILE-POS is irrelevant at this point because you are not using it.  If you ignore the value of FILE-POS, you must decide whether or not you will use the at-end or at-start feature of FILE-POS.  If you do not wish to use this feature, then do not set EVENT-ACTION-FAIL in MSG-PAGED-NEXT and MSG-PAGED-PREV events.  </li></div>
</ol></div>
</ol></div>
<a name="wp1162360"> </a><p class="pBody">
Any of the techniques mentioned above will work.  Note, however, that FILE-POS may be difficult to compute with the first technique because it is often hard to tell how far apart two records are in an indexed file.  <em class="cEmphasis">(create, modify, inquire)</em>
</p>
<a name="wp1175941"> </a><h5 class="pHeading4">
FINISH-REASON (signed integer)   
</h5>
<a name="wp1184556"> </a><p class="pBody">
This property tracks the reason why the grid user left entry mode and entered navigation mode.  Its value is set by the control immediately before generation of a MSG-FINISH-ENTRY or a MSG-CANCEL-ENTRY event.  It can be inquired by the event procedure for those events to determine why the user is leaving the field she or he was entering.  FINISH-REASON is normally only inquired.  
</p>
<a name="wp1184902"> </a><p class="pBody">
FINISH-REASON is a signed, integer property.  It is set by the control to a termination or exception value, or one of several preset values.  The preset values are described below along with the name of a corresponding level 78 data item.  These items are found in the COPY library &quot;acugui.def&quot;. 
</p>
<a name="wp1184909"> </a><p class="pBodyRelative">
</p><div>
<table border="0" cellpadding="6" cellspacing="1">
  <caption></caption>
  <tr align="left" valign="top">    <td><a name="wp1184944"> </a><p class="pCellBody">
-1<br />&#160;&#160;&#160;&#160;&#160;
</p>
</td>
    <td><a name="wp1184946"> </a><p class="pCellBody">
GRFR-BLANK-PAST-END<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;
</p>
</td>
    <td><a name="wp1184948"> </a><p class="pCellBody">
This is a special case where the entry was finished by the user but canceled by the grid control because the user entered spaces into a blank row past the end of the grid.  Instead of &quot;growing&quot; the grid in this case, the grid rejects the user's entry.
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1184950"> </a><p class="pCellBody">
-2
</p>
</td>
    <td><a name="wp1184952"> </a><p class="pCellBody">
GRFR-TERMINATING
</p>
</td>
    <td><a name="wp1184954"> </a><p class="pCellBody">
The grid control is terminating in response to some external event.  A typical reason for this would be if the user clicked on another control or window. 
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1184956"> </a><p class="pCellBody">
-3
</p>
</td>
    <td><a name="wp1184958"> </a><p class="pCellBody">
GRFR-CELL-CLICKED
</p>
</td>
    <td><a name="wp1184960"> </a><p class="pCellBody">
The user clicked on another cell in the grid.
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1184962"> </a><p class="pCellBody">
-4
</p>
</td>
    <td><a name="wp1184964"> </a><p class="pCellBody">
GRFR-NAVIGATION-KEY
</p>
</td>
    <td><a name="wp1184966"> </a><p class="pCellBody">
The user pressed a navigation key, such as an up or down arrow.  This is not generated for the Tab key because that key is sometimes a navigation key and sometimes not.
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1184968"> </a><p class="pCellBody">
-5
</p>
</td>
    <td><a name="wp1184970"> </a><p class="pCellBody">
GRFR-ESCAPE-KEY
</p>
</td>
    <td><a name="wp1184972"> </a><p class="pCellBody">
The user pressed the Escape key.
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1184974"> </a><p class="pCellBody">
-6
</p>
</td>
    <td><a name="wp1184976"> </a><p class="pCellBody">
GRFR-ENTER-KEY
</p>
</td>
    <td><a name="wp1184978"> </a><p class="pCellBody">
The user pressed the Enter key.
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1184980"> </a><p class="pCellBody">
-7
</p>
</td>
    <td><a name="wp1184982"> </a><p class="pCellBody">
GRFR-TAB-KEY
</p>
</td>
    <td><a name="wp1184984"> </a><p class="pCellBody">
The user pressed the Tab key.
</p>
</td>
</tr>
</table>
</div>
<p class="pBodyRelative">
</p>
<a name="wp1184536"> </a><p class="pBody">
Any other value indicates that the control received a termination or exception value and FINISH-REASON is the value received.  For example, under the default keyboard configuration, if the user pressed function key F1, FINISH-REASON is set to &quot;1&quot;.  However, when the user's action corresponds to a preset value, the preset value takes precedence because the control directly processes those keys.  For example, if you configure the Tab key to return a termination value of &quot;9&quot;, the control will still use a value of &quot;-7&quot; (GRFR-TAB-KEY) when the user presses the Tab key.  (<em class="cEmphasis">inquire</em>)
</p>
<a name="wp1162363"> </a><h5 class="pHeading4">
HEADING-COLOR (signed integer)   
</h5>
<a name="wp1162364"> </a><p class="pBody">
Sets the color for header cells (both column and row headers).  The color value specified uses the COLOR phrase values for both foreground and background colors.  The foreground and background intensity of the grid is ignored-the value is treated as the final color value.  See COLOR above for related information.  (<em class="cEmphasis">create, modify, inquire</em>)
</p>
<a name="wp1162367"> </a><h5 class="pHeading4">
HEADING-DIVIDER-COLOR (numeric)   
</h5>
<a name="wp1162368"> </a><p class="pBody">
Sets the color to use for drawing row and column dividers in the headings. Set this to the color number of the desired color.  The color ignores the grid's foreground and background intensity-it is treated as the final color value.  Accepted values range from &quot;1&quot; (black) to &quot;16&quot; (bright white). When this property is set to zero (the default), the dividers in the headings are drawn using the same color as the dividers in the rest of the grid.  (<em class="cEmphasis">create, modify, inquire</em>)
</p>
<a name="wp1162371"> </a><h5 class="pHeading4">
HEADING-FONT (numeric)   
</h5>
<a name="wp1162372"> </a><p class="pBody">
Sets the font to use for row and column headings.  This should be set to a valid font handle.  Note that HEADING-FONT takes precedence over ROW-FONT and COLUMN-FONT, but not CELL-FONT.  (<em class="cEmphasis">create, modify, inquire</em>)
</p>
<a name="wp1162375"> </a><h5 class="pHeading4">
HIDDEN-DATA (alphanumeric)   
</h5>
<a name="wp1162376"> </a><p class="pBody">
Allows the program to store data that is not displayed in a cell.  A cell can contain both displayed data (see CELL-DATA) and hidden data.  Hidden data is limited to 255 bytes per cell.  Hidden data may be any format, including non-printing characters.  (<em class="cEmphasis">create, modify, inquire</em>)
</p>
<a name="wp1162377"> </a><p class="pNoteList">
<hr />
<b>Note:  </b>As with all properties that take a text value, when the value of HIDDEN-DATA is stored, the runtime automatically strips trailing spaces and low-values.
<hr />
</p>
<a name="wp1162380"> </a><h5 class="pHeading4">
HSCROLL-POS (numeric)   
</h5>
<a name="wp1218252"> </a><p class="pBody">
This property controls the current scrolling position of the horizontal scroll bar, specifying the column number of the left-most column currently visible in the grid.  When row-headings are used, HSCROLL-POS specifies the column number that would appear in column one of the grid if there were no headings. 
</p>
<a name="wp1200428"> </a><p class="pBody">
Note that scrolling is limited to the normal scrolling range.  If you specify a value larger than the highest allowed value, the latter value is used.  If you specify a value less than &quot;1&quot;, you will receive undefined results.  If the grid does not allow scrolling in the specified dimension, setting the property has no effect.  (<em class="cEmphasis">modify, inquire</em>)
</p>
<a name="wp1200431"> </a><h5 class="pHeading4">
INSERT-ROWS (numeric)  
</h5>
<a name="wp1162385"> </a><p class="pBody">
When set to a positive value, this property inserts that many blank records.  These are added immediately before the record identified by INSERTION-INDEX.  See INSERTION-INDEX.  <em class="cEmphasis">(create, modify)</em>
</p>
<a name="wp1162388"> </a><h5 class="pHeading4">
INSERTION-INDEX (numeric)   
</h5>
<a name="wp1162389"> </a><p class="pBody">
Setting this property to a positive value affects the location of records added via RECORD-TO-ADD.  When it is set to zero (the default), records are added to the end of the grid.  When INSERTION-INDEX is positive, records are added immediately before the corresponding item instead.  For example, setting this to &quot;1&quot; causes the record to be inserted as the first record of the list. When you finish adding the next record, INSERTION-INDEX automatically resets itself to a value of zero.  
</p>
<a name="wp1162390"> </a><p class="pBody">
In statements that allow for multiple properties, the properties are set in the order specified.  Therefore, you can set both INSERTION-INDEX and RECORD-TO-ADD in the same statement, providing you specify INSERTION-INDEX first.  For example, the following statement will add a new record to the top of a grid:
</p>
<div class="pPreformattedRelative"><pre class="pPreformattedRelative">
MODIFY GRID-1,<a name="wp1162391"> </a>
INSERTION-INDEX = 1,<a name="wp1162392"> </a>
RECORD-TO-ADD = GRID-DATA-1<a name="wp1162393"> </a>
</pre></div>
<a name="wp1162394"> </a><p class="pBody">
When you are inserting a record, the following properties are also affected: ROW-COLOR, ROW-FONT, CELL-COLOR, CELL-FONT.  If these are specified for a record past the insertion point, then they will be moved &quot;down&quot; one record.  For example, if you have ROW-COLOR specified for record &quot;5&quot;, and you insert record &quot;3&quot;, then the ROW-COLOR will move to record &quot;6&quot;.  This causes row and cell properties to follow their data.  (<em class="cEmphasis">create, modify, inquire</em>)
</p>
<a name="wp1162397"> </a><h5 class="pHeading4">
LAST-ROW (numeric)   
</h5>
<a name="wp1162398"> </a><p class="pBody">
When inquired, returns the record number of the last non-blank record in the grid.  Row headings are ignored in determining if a record is blank.  If the grid contains no non-blank records, LAST-ROW returns zero.  (<em class="cEmphasis">inquire</em>)
</p>
<a name="wp1162401"> </a><h5 class="pHeading4">
MASS-UPDATE (numeric)   
</h5>
<a name="wp1162402"> </a><p class="pBody">
When set to a non-zero value, this property inhibits most (but not all) updates to the screen by the control.  This allows you to make multiple changes to the grid faster, and with a smoother screen appearance.  When set to zero (the default), changes made to the grid are reflected on the screen.  Note that the act of setting this property to zero causes the grid to repaint.  (<em class="cEmphasis">create, modify, inquire</em>)
</p>
<a name="wp1162405"> </a><h5 class="pHeading4">
NUM-COL-HEADINGS (numeric)  
</h5>
<a name="wp1162406"> </a><p class="pBody">
This property determines the number of rows that will be treated as column headings.  When it is set to zero, the grid columns will not have headings.  When it is set to a positive value, this value will correspond to the number of rows that will be treated as column headings.  For example, if you set the value of this property to &quot;2&quot;, the first two records in the grid will be headings.  Headings are always visible and can be colored differently from the body of the grid.  Specifying more column headers than rows visible in the grid has undefined effects.  
</p>
<a name="wp1162407"> </a><p class="pBody">
This property effectively supersedes the COLUMN-HEADINGS style.  If you specify COLUMN-HEADINGS, then a NUM-COL-HEADINGS value of &quot;0&quot; is treated as if it were &quot;1&quot;.  The COLUMN-HEADINGS style has no effect when NUM-COL-HEADINGS is set greater than zero.  This rule provides backwards compatibility with COLUMN-HEADINGS while still allowing for a multi-row column header.  <em class="cEmphasis">(create, modify, inquire)</em>
</p>
<a name="wp1162410"> </a><h5 class="pHeading4">
NUM-ROWS (numeric)   
</h5>
<a name="wp1162411"> </a><p class="pBody">
Determines the total number of records in the grid.  When this property is set to a positive value, the grid allows for exactly NUM-ROWS records.   When it is set to zero (the default), the grid extends to the last record which has data defined for it.  When it is set to &quot;-1&quot;, the grid extends to one record past the last record which has data defined for it.  This provides a blank record at the end of the grid in which the user can add new data.  In the case of &quot;0&quot; and &quot;-1&quot;, the grid will grow as needed when more records are added.  (<em class="cEmphasis">create, modify, inquire</em>)
</p>
<a name="wp1162414"> </a><h5 class="pHeading4">
RECORD-DATA   (alphanumeric)  
</h5>
<a name="wp1162415"> </a><p class="pBody">
When set, replaces an entire record of text in the grid at once.  You must set DATA-COLUMNS beforehand to denote where each column's data starts.  You must also set the &quot;Y&quot; property to indicate which row you want to overwrite.  If you specify a row that is past the current end of the grid, the effect is the same as adding a new record at that point.  Otherwise, the row's existing record is overwritten with the new one.  
</p>
<a name="wp1162416"> </a><p class="pBody">
When inquired, RECORD-DATA returns the data contained in the row identified by property &quot;Y&quot;.  This data is formatted according to DATA-COLUMNS.  If the requested row does not exist, the returned value will be entirely spaces.  (<em class="cEmphasis">create, modify, inquire</em>)
</p>
<a name="wp1162419"> </a><h5 class="pHeading4">
RECORD-TO-ADD   (alphanumeric)  
</h5>
<a name="wp1162420"> </a><p class="pBody">
Adds an entire record of text to the grid at once.  You must set DATA-COLUMNS beforehand to denote where each column's data starts.  The record is usually added at the end of the grid, but you can change this by using INSERTION-INDEX.  Note that the new record is added to the grid - it does not overwrite any existing data.  Also note that RECORD-TO-ADD will <em class="cEmphasis">not</em> add an empty record.  See CELL-DATA for a way to add individual cells to a grid.  See INSERT-ROWS for a way to insert empty records.  (<em class="cEmphasis">create, modify</em>)  
</p>
<a name="wp1162423"> </a><h5 class="pHeading4">
RECORD-TO-DELETE (numeric)   
</h5>
<a name="wp1162424"> </a><p class="pBody">
Deletes an entire record from the grid.  The value of this property is the record number to delete.  Deleting a record affects not only data, but also ROW-COLOR, ROW-FONT, CELL-COLOR and CELL-FONT.  If any of these are specified for records following the one deleted, they are moved &quot;up&quot; one record.  This causes them to follow their current data.  So, for example, if record &quot;5&quot; has a ROW-COLOR specified for it, and you delete record &quot;3&quot;, then the ROW-COLOR will now apply to record &quot;4&quot;.  (<em class="cEmphasis">create, modify</em>)
</p>
<a name="wp1162427"> </a><h5 class="pHeading4">
REGION-COLOR (numeric)   
</h5>
<a name="wp1162428"> </a><p class="pBody">
Sets the color for the region bounded by the rows START-Y and Y and the columns START-X and X (inclusive).  When you set REGION-COLOR, any previous region color is removed and a new region set.  The boundaries of the region are set when REGION-COLOR is set.  Subsequent changes to X, START-X, Y or START-Y has no effect on the region until the next time that REGION-COLOR is set.  
</p>
<a name="wp1162429"> </a><p class="pBody">
Region color is normally used to highlight an area being marked by the user while dragging the mouse.  To do this, usually all you need to do is set REGION-COLOR to the desired color in response to a MSG-GOTO-CELL-DRAG event.  Note that when this event is generated, START-X, X, START-Y and Y all have sensible values in them, and they usually do not need to be set by your program.  
</p>
<a name="wp1162430"> </a><p class="pNoteList">
<hr />
<b>Note:  </b>REGION-COLOR produces counter-intuitive results when you are displaying more than one row per record.  It should be avoided in this case.  (<em class="cEmphasis">create, modify, inquire</em>)  
<hr />
</p>
<a name="wp1162433"> </a><h5 class="pHeading4">
RESET-GRID (numeric)   
</h5>
<a name="wp1162434"> </a><p class="pBody">
When set to a non-zero value, empties the grid of data.  In addition, any ROW-FONT, ROW-COLOR, CELL-FONT and CELL-COLOR settings are cleared.  The cursor is positioned at the home cell (the home cell is the uppermost, left-most, non-heading cell) and the grid is scrolled to the home position.   RESET-GRID is a one-time action.  Note that this clears the headings as well as the body of the grid.  Also note that both text and bitmap data are cleared.  (<em class="cEmphasis">create, modify</em>)
</p>
<a name="wp1162437"> </a><h5 class="pHeading4">
ROW-COLOR (numeric)   
</h5>
<a name="wp1162438"> </a><p class="pBody">
Sets the color for the entire record identified by the Y property.  The color value specified uses the COLOR phrase values for both foreground and background colors.  The foreground and background intensity of the grid are ignored-the value is treated as the final color value.  Note that although the property is called &quot;ROW-COLOR&quot;, it actually refers to a full record, not just a row.  See COLOR above for related information.  (<em class="cEmphasis">create, modify</em>)
</p>
<a name="wp1162441"> </a><h5 class="pHeading4">
ROW-COLOR-PATTERN (numeric)   
</h5>
<a name="wp1162442"> </a><p class="pBody">
Establishes a repeating color pattern to apply to the rows in the grid.  The first time you set this property, the specified color is applied to the top row of the grid.  The next setting is applied to the second row, and so on.  The pattern established then repeats throughout the grid's visible rows.  The color value specified uses the COLOR phrase values for both foreground and background colors.  The foreground and background intensity of the grid are ignored-the value is treated as the final color value.  Note that the color pattern is fixed to the visible rows in the grid independently from the current vertical scroll position.  Scrolling through the grid does not change the visible aspects of the color pattern.  This prevents a &quot;jittery&quot; display while the user scrolls vertically.  
</p>
<a name="wp1162443"> </a><p class="pBody">
This example sets a two-row pattern where the first row will be background white (512) and the second will be background yellow (480).  In both cases, the foreground is unspecified (zero added to the value) and will come from some other source:
</p>
<div class="pPreformattedRelative"><pre class="pPreformattedRelative">
ROW-COLOR-PATTERN = ( 512, 480 )<a name="wp1162444"> </a>
</pre></div>
<a name="wp1162445"> </a><p class="pBody">
See COLOR above for related information.  (<em class="cEmphasis">create, modify</em>)  
</p>
<a name="wp1162448"> </a><h5 class="pHeading4">
ROW-DIVIDERS (numeric)   
</h5>
<a name="wp1162449"> </a><p class="pBody">
This property establishes the width (in pixels) of the row dividers.  Each time you set this property to a nonnegative value, you set the width of the divider for one row of a record.  The first setting applies to the first row, the second to the second row, and so on.  The pattern established for one record repeats throughout the grid.  You can clear the list of divider settings by assigning a value of &quot;-1&quot;.  Unspecified dividers use a system-dependent default width.  The default divider is one pixel wide. 
</p>
<a name="wp1162450"> </a><p class="pBody">
Assuming two rows per record, the following example would create a pattern where records were divided from each other by a two-pixel border, and the two rows within the record were divided by a one-pixel border:
</p>
<div class="pPreformattedRelative"><pre class="pPreformattedRelative">
ROW-DIVIDERS = (1, 2)<a name="wp1162451"> </a>
</pre></div>
<a name="wp1162452"> </a><p class="pBody">
<em class="cEmphasis">(create, modify)</em>
</p>
<a name="wp1162455"> </a><h5 class="pHeading4">
ROW-FONT (numeric)   
</h5>
<a name="wp1202806"> </a><p class="pBody">
Sets the font for the record identified by the Y property.  This should be set to a valid font handle.  Note that ROW-FONT refers to the font used for an entire record, not just a row.  (<em class="cEmphasis">create, modify</em>)
</p>
<a name="wp1202809"> </a><h5 class="pHeading4">
ROW-PROTECTION (numeric) 
</h5>
<a name="wp1202810"> </a><p class="pBody">
Protects the entire row identified by the Y property from being changed by the user.  Set the property to &quot;1&quot; to protect the row, or to &quot;0&quot; to unprotect the row.  The appearance of the row does not change when the row is protected.  Note that like other row properties, the setting affects an entire record, not just the physical row.  (<em class="cEmphasis">create, modify</em>)
</p>
<a name="wp1162459"> </a><h5 class="pHeading4">
SEARCH-OPTIONS (alphanumeric)   
</h5>
<a name="wp1162460"> </a><p class="pBody">
This property controls how searches are performed in the grid.  
</p>
<a name="wp1162461"> </a><p class="pNoteList">
<hr />
<b>Note:  </b>The grid's search facility does not contain a user interface.  You must supply one if you want to give the user a search function.  One typical interface is a pop-up dialog box where the user can set the search text and options desired.  Another typical interface is an entry field in the same window as the grid, with a &quot;Find&quot; button beside the entry field.  <em class="cEmphasis">(create, modify)</em>
<hr />
</p>
<a name="wp1162462"> </a><p class="pBody">
The SEARCH-OPTIONS property should be assigned from a structure with the following layout:
</p>
<div class="pPreformattedRelative"><pre class="pPreformattedRelative">
01 GRID-SEARCH-OPTIONS.<a name="wp1162463"> </a>
   03 GRID-SEARCH-DIRECTION         PIC 9.<a name="wp1162464"> </a>
      88 GRID-SEARCH-FORWARDS       VALUE ZERO,<a name="wp1162465"> </a>
                                    FALSE 1.<a name="wp1162466"> </a>
<a name="wp1162467"> </a>
   03 GRID-SEARCH-WRAP-FLAG         PIC 9.<a name="wp1162468"> </a>
      88 GRID-SEARCH-WRAP           VALUE ZERO,<a name="wp1162469"> </a>
                                    FALSE 1.<a name="wp1162470"> </a>
<a name="wp1162471"> </a>
   03 GRID-SEARCH-CASE-FLAG         PIC 9.<a name="wp1162472"> </a>
      88 GRID-SEARCH-IGNORE-CASE    VALUE ZERO,<a name="wp1162473"> </a>
                                    FALSE 1.<a name="wp1162474"> </a>
<a name="wp1162475"> </a>
   03 GRID-SEARCH-MATCH-FLAG        PIC 9.<a name="wp1162476"> </a>
      88 GRID-SEARCH-MATCH-ANY      VALUE ZERO.<a name="wp1162477"> </a>
      88 GRID-SEARCH-MATCH-LEADING  VALUE 1.<a name="wp1162478"> </a>
      88 GRID-SEARCH-MATCH-ALL      VALUE 2.<a name="wp1162479"> </a>
<a name="wp1162480"> </a>
   03 GRID-SEARCH-LOCATION-FLAG     PIC 9.<a name="wp1162481"> </a>
      88 GRID-SEARCH-VISIBLE        VALUE ZERO.<a name="wp1162482"> </a>
      88 GRID-SEARCH-HIDDEN         VALUE 1.<a name="wp1162483"> </a>
      88 GRID-SEARCH-ALL-DATA       VALUE 2.<a name="wp1162484"> </a>
<a name="wp1162485"> </a>
   03 GRID-SEARCH-SKIP-FLAG         PIC 9.<a name="wp1162486"> </a>
      88 GRID-SEARCH-SKIP-CURRENT   VALUE ZERO,<a name="wp1162487"> </a>
                                    FALSE 1.<a name="wp1162488"> </a>
<a name="wp1162489"> </a>
   03 GRID-SEARCH-CURSOR-FLAG       PIC 9.<a name="wp1162490"> </a>
      88 GRID-SEARCH-MOVES-CURSOR   VALUE ZERO,<a name="wp1162491"> </a>
                                    FALSE 1.<a name="wp1162492"> </a>
<a name="wp1162493"> </a>
   03 GRID-SEARCH-COLUMN            PIC 9(5).<a name="wp1162494"> </a>
      88 GRID-SEARCH-ALL-COLUMNS    VALUE ZERO.<a name="wp1162495"> </a>
</pre></div>
<a name="wp1162496"> </a><p class="pBody">
A copy of this structure can be found in the copy library &quot;acugui.def&quot;.  It contains the default value settings for all the grid search parameters.  Use the COPY statement in the Working Storage section to include this structure with its default values in your program.
</p>
<a name="wp1162497"> </a><p class="pBody">
To set the SEARCH-OPTIONS property, specify the name of the data structure described above in the screen description entry for the grid or via the &quot;modify&quot; statement.  The example below uses the &quot;modify&quot; statement to assign the property: 
</p>
<div class="pPreformattedRelative"><pre class="pPreformattedRelative">
MODIFY GRID-1<a name="wp1162498"> </a>
SEARCH-OPTIONS = GRID-SEARCH-OPTIONS<a name="wp1162499"> </a>
</pre></div>
<a name="wp1162500"> </a><p class="pBody">
to set new search values for a grid, start by using the &quot;inquire&quot; statement to find out what the current values are (they may have been modified previously).  Next, set the desired values to the chosen search parameters with the &quot;set&quot; statement, and finally, &quot;modify&quot; the grid to apply the new values.  
</p>
<a name="wp1162501"> </a><p class="pBody">
The following sample shows how to change the values for two of the search parameters and apply the new search options to the grid. 
</p>
<div class="pPreformattedRelative"><pre class="pPreformattedRelative">
INQUIRE grid-1, SEARCH-OPTIONS<a name="wp1162502"> </a>
       IN GRID-SEARCH-OPTIONS<a name="wp1162503"> </a>
SET (option-1) TO TRUE<a name="wp1162504"> </a>
SET (option-2) TO TRUE<a name="wp1162505"> </a>
MODIFY grid-1,<a name="wp1162506"> </a>
       SEARCH-OPTIONS = GRID-SEARCH-OPTIONS<a name="wp1162507"> </a>
</pre></div>
<a name="wp1247740"> </a><p class="pBody">
The SEARCH-OPTIONS parameters have the following traits:<span style="font-family: Arial, Verdana, Helvetica, sans-serif"></span></p><div>
<table border="0" cellpadding="6" cellspacing="1">
  <caption></caption>
  <tr align="left" valign="top">    <td><a name="wp1247727"> </a><p class="pCellBody">
<b class="cBold">GRID-SEARCH-FORWARDS </b>
</p>
</td>
    <td><a name="wp1247729"> </a><p class="pCellBody">
When this is set to true, the search runs from left-to-right and top-to-bottom in the grid.  This is the default behavior.  When set to false, the search runs from right-to-left, bottom-to-top.  
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1247732"> </a><p class="pCellBody">
<b class="cBold">GRID-SEARCH-WRAP  </b>
</p>
</td>
    <td><a name="wp1247734"> </a><p class="pCellBody">
When this is set to true (the default), a search &quot;wraps around&quot; when it hits the top or bottom of the grid.  This causes the search to proceed from the opposite end of the grid.  When it is set to false, the search stops if it hits the top or bottom of the grid. 
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1247737"> </a><p class="pCellBody">
<b class="cBold">GRID-SEARCH-IGNORE-CASE</b>  
</p>
</td>
    <td><a name="wp1247739"> </a><p class="pCellBody">
When this is set to true (the default), the search ignores case differences between letters when determining if two strings match.  When it is set to false, a difference in case between strings will cause them not to match.  You should be certain to set this to &quot;false&quot; when searching for data that contains binary information (this could happen if you search the grid's hidden data). 
</p>
</td>
</tr>
</table>
</div>
<p class="pBody"><span style="font-family: Arial, Verdana, Helvetica, sans-serif"></span>
</p>
<a name="wp1247788"> </a><p class="pBodyRelative">
</p><div>
<table border="0" cellpadding="6" cellspacing="1">
  <caption></caption>
  <tr align="left" valign="top">    <td><a name="wp1247745"> </a><p class="pCellBody">
<b class="cBold">GRID-SEARCH-MATCH-ANY</b>  
</p>
</td>
    <td><a name="wp1247747"> </a><p class="pCellBody">
When this is set to true (the default), a search string will match if the string is contained anywhere in the cell's data (similar to a substring search).  For example, a search for &quot;bcd&quot; would match the string &quot;abcde&quot;.
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1247750"> </a><p class="pCellBody">
<b class="cBold">GRID-SEARCH-MATCH-LEADING</b>
</p>
</td>
    <td><a name="wp1247752"> </a><p class="pCellBody">
When this is set to true, a search string will match if the string forms the beginning of the cell's data.  For example, a search for &quot;bcd&quot; would match the string &quot;bcde&quot;, but not the string &quot;abcde&quot;. 
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1247755"> </a><p class="pCellBody">
<b class="cBold">GRID-SEARCH-MATCH-ALL</b> 
</p>
</td>
    <td><a name="wp1247757"> </a><p class="pCellBody">
When this is set to true, a search string matches only if it is identical to the string being searched.  For example, &quot;bcd&quot; will match &quot;bcd&quot;, but not &quot;abcde&quot; or &quot;bcde&quot;. 
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1247760"> </a><p class="pCellBody">
<b class="cBold">GRID-SEARCH-VISIBLE</b>  
</p>
</td>
    <td><a name="wp1247762"> </a><p class="pCellBody">
When this is set to true (the default), the search is performed only against the grid's visible cell data. 
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1247765"> </a><p class="pCellBody">
<b class="cBold">GRID-SEARCH-HIDDEN</b>  
</p>
</td>
    <td><a name="wp1247767"> </a><p class="pCellBody">
When this is set to true, the search is performed only against the grid's hidden data. 
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1247770"> </a><p class="pCellBody">
<b class="cBold">GRID-SEARCH-ALL-DATA</b>  
</p>
</td>
    <td><a name="wp1247772"> </a><p class="pCellBody">
When this is set to true, the search is performed against both the grid's visible and hidden data. 
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1247775"> </a><p class="pCellBody">
<b class="cBold">GRID-SEARCH-SKIP-CURRENT</b>  
</p>
</td>
    <td><a name="wp1247777"> </a><p class="pCellBody">
When this is set to true (the default), the cell where the search starts is not initially searched.  If you allow the search to wrap, it will be searched last.  If you do not allow the search to wrap, then the starting cell will not be searched.  This setting allows a &quot;find next&quot; function to work.  When this is set to false, the starting cell is searched first.  Note that if you start the search from a cell that is outside the range of existing cells, then the starting cell is searched first regardless of the setting of this flag.  This allows you to find the first occurrence of a string by starting your search at row &quot;0&quot; regardless of the setting of this flag.  
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1247780"> </a><p class="pCellBody">
<b class="cBold">GRID-SEARCH-MOVES-CURSOR</b>  
</p>
</td>
    <td><a name="wp1247782"> </a><p class="pCellBody">
When this is set to true (the default), the grid's cursor will move to the cell found by the search.  The grid will also scroll to make that cell visible.  If the search fails, the cursor is not moved.  When this is set to false, the cursor is not moved by a successful search. 
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1247785"> </a><p class="pCellBody">
<b class="cBold">GRID-SEARCH-COLUMN</b>  
</p>
</td>
    <td><a name="wp1247787"> </a><p class="pCellBody">
When GRID-SEARCH-ALL-COLUMNS is set to true, the search runs through every column in the grid.  Otherwise, if you set GRID-SEARCH-COLUMN to a non-zero value, the search runs through that column number only.  Columns other than this column are ignored.  Note that row and column headings are not normally searched.  You can search the row headings by setting GRID-SEARCH-COLUMN to &quot;1&quot; (assuming that you have row headings).  You cannot search the column headings. 
</p>
</td>
</tr>
</table>
</div>
<p class="pBodyRelative">
</p>
<a name="wp1162557"> </a><p class="pBody">
If you need to limit your search to two or more columns, but not all the columns, then you will need to program the limited search yourself by first setting GRID-SEARCH-ALL-COLUMNS and GRID-SEARCH-SKIP-CURRENT to true, and GRID-SEARCH-MOVES-CURSOR to false.  Then perform the search in a loop.  Break out of the loop when GRID-SEARCH-COLUMN equals one of the desired columns or when the search fails.  The search fails when it does not find a match or the search returns a cell that is the same cell as the first match it returned (in this case, the data you're searching for appears only in cells outside the desired columns).  After finding a successful match, you can place the cursor in that cell using the CURSOR-X and CURSOR-Y properties.  
</p>
<a name="wp1162558"> </a><p class="pBody">
The following example turns off &quot;wrapping&quot; and turns on forward searching for a particular grid.  This shows you how to change some settings while leaving others unchanged:
</p>
<div class="pPreformattedRelative"><pre class="pPreformattedRelative">
COPY &quot;acugui.def&quot;.<a name="wp1162559"> </a>
INQUIRE GRID-1, SEARCH-OPTIONS<a name="wp1162560"> </a>
       IN GRID-SEARCH-OPTIONS<a name="wp1162561"> </a>
SET GRID-SEARCH-WRAP TO FALSE<a name="wp1162562"> </a>
SET GRID-SEARCH-FORWARDS TO TRUE<a name="wp1162563"> </a>
MODIFY GRID-1,<a name="wp1162564"> </a>
       SEARCH-OPTIONS = GRID-SEARCH-OPTIONS<a name="wp1162565"> </a>
</pre></div>
<a name="wp1162566"> </a><p class="pBody">
The default settings are the same as the settings you get by moving ZEROS to the GRID-SEARCH-OPTIONS data structure.  <em class="cEmphasis">(create, modify, inquire)</em>
</p>
<a name="wp1162569"> </a><h5 class="pHeading4">
SEARCH-TEXT (alphanumeric)  
</h5>
<a name="wp1162570"> </a><p class="pBody">
When you assign this property, the grid initiates a search using the current search options.  The program looks for the value assigned to this property.  The search starts in the cell identified by the X and Y properties unless overridden by the GRID-SEARCH-SKIP-CURRENT described under SEARCH-OPTIONS above.  If the search is successful, then X and Y are updated to reflect the cell found.  The return value of this property is the status of the search:
</p>
<a name="wp1162587"> </a><p class="pBodyRelative">
   </p><div>
<table border="1" cellpadding="2" cellspacing="2">
  <caption></caption>
  <tr align="left" valign="top">    <td><a name="wp1162573"> </a><p class="pCellBody">
GRDSRCH-NOT-FOUND
</p>
<a name="wp1162574"> </a><p class="pCellBody">
 (value 0)
</p>
</td>
    <td><a name="wp1162576"> </a><p class="pCellBody">
No matching data found
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1162578"> </a><p class="pCellBody">
GRDSRCH-FOUND 
</p>
<a name="wp1162579"> </a><p class="pCellBody">
(value 1)
</p>
</td>
    <td><a name="wp1162581"> </a><p class="pCellBody">
Search succeeded
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1162583"> </a><p class="pCellBody">
GRDSRCH-WRAPPED 
</p>
<a name="wp1162584"> </a><p class="pCellBody">
(value 2)
</p>
</td>
    <td><a name="wp1162586"> </a><p class="pCellBody">
Search succeeded but had to wrap
</p>
</td>
</tr>
</table>
</div>
<p class="pBodyRelative">
</p>
<a name="wp1162588"> </a><p class="pIndented1">
If X and Y identify a cell outside of the range of cells, then the starting cell is determined as if the search &quot;wrapped&quot; from the logical (X,Y) location.  For example, if the starting point is a cell past the right-most cell, a forward search starts at the first cell of the next row.  You can use this to force a search of the entire grid by starting a forward search at row &quot;0&quot;, or a backward search from a row that is past the end of the grid's data.  
</p>
<a name="wp1162589"> </a><p class="pBody">
The following sample code searches a grid for the word &quot;science&quot;, starting at the cell where the cursor is currently located:
</p>
<div class="pPreformattedRelative"><pre class="pPreformattedRelative">
INQUIRE GRID-1, CURSOR-X IN CUR-COL,<a name="wp1162590"> </a>
                CURSOR-Y IN CUR-ROW<a name="wp1162591"> </a>
MODIFY GRID-1 (CUR-ROW, CUR-COL) <a name="wp1162592"> </a>
SEARCH-TEXT = &quot;science&quot; GIVING RESULT-1<a name="wp1162593"> </a>
IF RESULT-1 &gt; GRDSRCH-NOT-FOUND<a name="wp1162594"> </a>
    DISPLAY MESSAGE BOX &quot;Search succeeded&quot;.<a name="wp1162595"> </a>
</pre></div>
<a name="wp1162596"> </a><p class="pBody">
The grid's search facility does not contain a user interface.  You must supply one if you want to give the user a search function.  One typical interface is a pop-up dialog box where the user can set the search text and options desired.  Another typical interface is an entry field in the same window as the grid, with a &quot;Find&quot; button beside the entry field.  <em class="cEmphasis">(create, modify)</em>
</p>
<a name="wp1162599"> </a><h5 class="pHeading4">
SEPARATION (numeric)   
</h5>
<a name="wp1162600"> </a><p class="pBody">
Describes the amount of white space that should be preserved at the end of each column.  This space appears between the end of the data and the beginning of the next column.  The column divider, if any, appears in the region.  This space is expressed as tenths of the standard font width.  For example, a value of &quot;5&quot; indicates a half-character width.  
</p>
<a name="wp1162601"> </a><p class="pBody">
Each time you set this property, you set the separation amount for the next column in the grid, starting with the first.  Setting this property to &quot;-1&quot; clears the previously specified separation amounts.  The default separation used for unspecified columns is set by the COLUMN-SEPARATION configuration variable.  This defaults to &quot;5&quot;.  (<em class="cEmphasis">create, modify</em>)  
</p>
<a name="wp1162606"> </a><h5 class="pHeading4">
START-X (numeric)   
</h5>
<a name="wp1162607"> </a><p class="pBody">
The START-X property is used in conjunction with the START-Y, X, and Y properties to define a rectangular region in the grid.  This region is used when you are setting REGION-COLOR.  START-X holds a column number.  The region colored by REGION-COLOR starts at START-X and extends through X.  (<em class="cEmphasis">create, modify, inquire</em>)  
</p>
<a name="wp1162610"> </a><h5 class="pHeading4">
START-Y   (numeric)  
</h5>
<a name="wp1162611"> </a><p class="pBody">
See START-X and REGION-COLOR for a description of this property.  
</p>
<a name="wp1162614"> </a><h5 class="pHeading4">
VIRTUAL-WIDTH (numeric)   
</h5>
<a name="wp1162615"> </a><p class="pBody">
Sets the overall logical width of the grid.  This is used only with grids that have horizontal scrolling.  This value is expressed in characters (measured using the standard font width).  If not specified, then the grid extends to 10 characters past the last DISPLAY-COLUMN specified (making the last column 10 characters wide).  You can create hidden columns by setting this value smaller than some of your columns' starting points.  (<em class="cEmphasis">create, modify, inquire</em>)  
</p>
<a name="wp1162618"> </a><h5 class="pHeading4">
VPADDING (numeric)   
</h5>
<a name="wp1162619"> </a><p class="pBody">
Sets the amount of vertical white space in each row.  This value is the percentage of the grid's font height to apply as extra white space (<em class="cEmphasis">i.e.</em>, separation between the cell's data and the cell's row dividers).  The default setting is &quot;50&quot;.  Note that this produces a look similar to a series of entry fields (because the normal entry field is 50% taller than its font).  On character systems, the VPADDING value is not used. 
</p>
<a name="wp1162620"> </a><p class="pNoteList">
<hr />
<b>Note:  </b>The Windows implementation of the grid control uses the standard &quot;edit&quot; (entry field) control to do its data entry (it creates the edit control when the grid shifts to &quot;entry mode&quot;).  The Windows edit control has technical limitations with regards to vertical spacing.  These limitations depend on the alignment of the field (left justified fields have fewer limitations).  Setting VPADDING to less than &quot;50&quot; can result in odd behavior.  If you set VPADDING to less than &quot;50,&quot; be sure to check that the grid behaves the way you want on your target platforms.  (<em class="cEmphasis">create, modify, inquire)</em>
<hr />
</p>
<a name="wp1162623"> </a><h5 class="pHeading4">
VSCROLL-POS (numeric)   
</h5>
<a name="wp1200477"> </a><p class="pBody">
This property controls the current scrolling position of the vertical scroll bar, specifying the first visible row of the grid's scrollable region.
</p>
<a name="wp1200478"> </a><p class="pBody">
Note that scrolling is limited to the normal scrolling range.  If you specify a value larger than the highest allowed value, the latter value is used.  If you specify a value less than &quot;1&quot;, you will receive undefined results.  If the grid does not allow scrolling in the specified dimension, setting the property has no effect.  (<em class="cEmphasis">modify, inquire</em>)  
</p>
<a name="wp1162627"> </a><h5 class="pHeading4">
X  (numeric)   
</h5>
<a name="wp1162628"> </a><p class="pBody">
The X property holds a column number.  It is used by several other properties when they need to know which column to act on.  For example, the COLUMN-COLOR property sets the color for the column identified by the X property.  Column numbers start at &quot;1&quot;.  Remember that properties are set in the order specified in a statement.  You should be certain to set the X property before setting another property that refers to it.  (<em class="cEmphasis">create, modify, inquire</em>)
</p>
<a name="wp1162631"> </a><h5 class="pHeading4">
Y  (numeric)   
</h5>
<a name="wp1162632"> </a><p class="pBody">
The Y property is similar to the X property, except that it holds a record number instead of a column number.  (<em class="cEmphasis">create, modify, inquire</em>)
</p>
 </blockquote>

 <hr />

 <table align="left" border="0" cellspacing="0" cellpadding="0">
   <tr>
     <td align="left" width="300">
       <span style="font-size: 12px ; font-weight: bold ; font-family: Arial, Helvetica, sans-serif">
         <a href="http://www.acucorp.com">Acucorp, Inc.</a><br />
       </span>
       <span style="font-size: 10px ; font-family: Arial, Helvetica, sans-serif">
         Voice: 800.262.6585 (U.S.A. and Canada)<br />
         Voice: 858.689.4500<br />
         Fax: 858.689.4550<br />
         Please share your comments on this manual<br />
         or on any Acucorp documentation with the<br />
         <a href="mailto:docfeedback@acucorp.com">Acucorp Communications Department</a>.<br />
       </span>
     </td>
   </tr>
 </table>

<script type="text/javascript" language="JavaScript1.2">
   <!--
    document.write(WWHRelatedTopicsDivTag() + WWHPopupDivTag());
   // -->
  </script>

 
</body>
</html>
