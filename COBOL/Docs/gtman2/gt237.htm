<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />
  <meta http-equiv="Content-Style-Type" content="text/css" />
  <meta name="GENERATOR" content="Quadralay WebWorks Publisher Professional Edition 7.0.5.1025" />
  <meta name="TEMPLATEBASE" content="Acucorp WWH" />
  <meta name="LASTUPDATED" content="06/14/06 08:24:24" />
  <title>3.6  Controls and the Mouse</title>
  <link rel="StyleSheet" href="document.css" type="text/css" />
  <link rel="StyleSheet" href="catalog.css" type="text/css" />
<script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/context.js"></script>
  <script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/towwhdir.js"></script>
  <script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/wwhpagef.js"></script>

  <script type="text/javascript" language="JavaScript1.2">
   <!--
    // Set reference to top level help frame
    //
    var  WWHFrame = WWHGetWWHFrame("");
   // -->
  </script>
 </head>

 <body onLoad="WWHUpdate();">

    <a href="../docs.htm" target="acudoc"><img src="images/sbooks.gif" width="70" height="27" border="0" alt="Books" align="right" /></a>
    <span style="font-size: 18px ; font-weight: bold"><font face="Arial, Helvetica, sans-serif">
       ACUCOBOL-GT User Interface Programming <br />
    </font></span>
    <span style="font-size: 14px ; font-weight: bold"><font face="Arial, Helvetica, sans-serif">
       Version 7.2
     </font></span>

 <p />

 <blockquote>
<p class="breadcrumb"><a href="gt23.htm">Chapter 3:  Graphical Controls</a> &gt; </p>
<a name="wp1026206"> </a><h2 class="pHeading1">
3.6  Controls and the Mouse
</h2>
<a name="wp1026210"> </a><p class="pBody">
Controls are implemented as small <em class="cEmphasis">child windows</em>.  These windows do not look like normal application windows.  Instead, they define a rectangular region of the application window that holds the control.  In this sense, they are similar to subwindows.  The difference is that these child windows are maintained by the host graphical system.  
</p>
<a name="wp1026211"> </a><p class="pBody">
In the general model for graphical user interfaces, the system directs events to the window where the event occurred.  This window <em class="cEmphasis">owns</em> the event.  The effect of this is most noticeable when you examine what happens when controls interact with the mouse.  As the mouse moves across the application screen, the various windows that the pointer passes over each receive the appropriate events.  If you look at an application screen that has several controls, the application window receives those mouse events that occur when the pointer is in the application window, <em class="cEmphasis">but not over any of the controls.</em>  When the mouse pointer is over a control, that control receives the mouse events.
</p>
<a name="wp1026214"> </a><p class="pBody">
This means that the setting of the runtime configuration variable MOUSE-FLAGS affects the behavior of the mouse only when it is not over a control.  When the mouse is over a control, that control does its own mouse processing.
</p>
<a name="wp1026215"> </a><p class="pBody">
If you need to process the mouse while it is over a control, there are two options:
</p>
<div class="pSmartList1"><ol type="1" class="pSmartList1">
<a name="wp1026219"> </a><div class="pSmartList1"><li>You can capture the mouse using the CAPTURE-MOUSE option of the W$MOUSE library routine.  When the mouse is captured, all mouse events are directed to the current application window, even those that occur outside of the window altogether.  It is advisable to capture the mouse only for short periods of time, because capturing the mouse prevents all other applications from using the mouse.  Normally you capture the mouse to handle a user-initiated action such as dragging a screen object from one location to another.</li></div>
<a name="wp1026220"> </a><div class="pSmartList1"><li>You can disable the control.  Disabled controls cannot receive input, so any associated mouse actions are directed to the owning application instead.  To disable a control, use the ENABLED phrase of the Screen Section, DISPLAY, or MODIFY statements.  For more about the ENABLED phrase, see section 6.4.9, Book 3, <em class="cEmphasis">Reference Manual</em>.</li></div>
</ol></div>
<a name="wp1026221"> </a><p class="pNote">
<hr />
<b>Note:  </b>It is rare that your program would need to manage the mouse directly.  In most cases, controls manage their own mouse messages without any intervention by the program.
<hr />
</p>
 </blockquote>

 <hr />

 <table align="left" border="0" cellspacing="0" cellpadding="0">
   <tr>
     <td align="left" width="300">
       <span style="font-size: 12px ; font-weight: bold ; font-family: Arial, Helvetica, sans-serif">
         <a href="http://www.acucorp.com">Acucorp, Inc.</a><br />
       </span>
       <span style="font-size: 10px ; font-family: Arial, Helvetica, sans-serif">
         Voice: 800.262.6585 (U.S.A. and Canada)<br />
         Voice: 858.689.4500<br />
         Fax: 858.689.4550<br />
         Please share your comments on this manual<br />
         or on any Acucorp documentation with the<br />
         <a href="mailto:docfeedback@acucorp.com">Acucorp Communications Department</a>.<br />
       </span>
     </td>
   </tr>
 </table>

<script type="text/javascript" language="JavaScript1.2">
   <!--
    document.write(WWHRelatedTopicsDivTag() + WWHPopupDivTag());
   // -->
  </script>

 
</body>
</html>
