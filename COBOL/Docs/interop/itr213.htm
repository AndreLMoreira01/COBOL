<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />
  <meta http-equiv="Content-Style-Type" content="text/css" />
  <meta name="GENERATOR" content="Quadralay WebWorks Publisher Professional Edition 7.0.6.1058" />
  <meta name="TEMPLATEBASE" content="Acucorp WWH" />
  <meta name="LASTUPDATED" content="06/08/06 14:56:25" />
  <title>2.2.3.1  COBOL development</title>
  <link rel="StyleSheet" href="document.css" type="text/css" />
  <link rel="StyleSheet" href="catalog.css" type="text/css" />
<script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/context.js"></script>
  <script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/towwhdir.js"></script>
  <script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/wwhpagef.js"></script>

  <script type="text/javascript" language="JavaScript1.2">
   <!--
    // Set reference to top level help frame
    //
    var  WWHFrame = WWHGetWWHFrame("");
   // -->
  </script>
 </head>

 <body onLoad="WWHUpdate();">

    <a href="../docs.htm" target="acudoc"><img src="images/sbooks.gif" width="70" height="27" border="0" alt="Books" align="right" /></a>
    <span style="font-size: 18px ; font-weight: bold"><font face="Arial, Helvetica, sans-serif">
       A Guide to Interoperating with ACUCOBOL-GT <br />
    </font></span>
    <span style="font-size: 14px ; font-weight: bold"><font face="Arial, Helvetica, sans-serif">
       Version 7.2
     </font></span>

 <p />

 <blockquote>
<p class="breadcrumb"><a href="itr2.htm">Chapter 2: Working with Java Technology</a> &gt; <a href="itr23.htm">2.2  Calling COBOL from Java</a> &gt; <a href="itr212.htm">2.2.3  Using Component Adapter Technology</a> &gt; </p>
<a name="wp1048299"> </a><h2 class="pHeading3">
2.2.3.1  COBOL development
</h2>
<a name="wp1037782"> </a><p class="pBody">
To expose your ACUCOBOL-GT application as a Javabean that a Java application can consume, perform the following steps:
</p>
<div class="pSmartList1"><ol type="1" class="pSmartList1">
<a name="wp1047194"> </a><div class="pSmartList1"><li>Install the Transoft Development Suite (TDS) and Transoft's ACUCOBOL language component adapter on the development machine as described in Transoft's user documentation.</li></div>
<a name="wp1037783"> </a><div class="pSmartList1"><li>To create a new project in the TDS IDE, right-click the Projects folder in the Explorer view, and click <span style="font-family: Arial, Verdana, Helvetica, sans-serif; font-weight: bold">Add</span>.  Choose a name for the project and define the destination directories for project files.</li></div>
<a name="wp1037784"> </a><div class="pSmartList1"><li>Add a new Service Description Language (SDL) file to the project.  This file is where you define the components and services that you want to expose.  Right-click the new project folder in the Explorer view, then select <span style="font-family: Arial, Verdana, Helvetica, sans-serif; font-weight: bold">Add Using Property Sheet</span>.  When you are prompted, provide a name for a new SDL file.  The Property sheet for the SDL file appears.</li></div>
<a name="wp1037785"> </a><div class="pSmartList1"><li>On the General tab, select <span style="font-family: Arial, Verdana, Helvetica, sans-serif; font-weight: bold">Javabean proxies</span> and <span style="font-family: Arial, Verdana, Helvetica, sans-serif; font-weight: bold">ACUCOBOL wrappers</span>.    </li></div>
<a name="wp1037786"> </a><p class="pIndented1">
Proxies are stubs in the client's native language (Java, ActiveX, or IDL) that present the COBOL component to the Java application in a familiar way.  You will later distribute these proxies to the Java developer.
</p>
<a name="wp1037787"> </a><p class="pIndented1">
Wrappers are source code (in ACUCOBOL-GT) designed for communicating with the COBOL component broker.  Later you will extract business logic from your application and include it in or link it to the wrapper code.
</p>
<a name="wp1037788"> </a><p class="pIndented1">
Click <span style="font-family: Arial, Verdana, Helvetica, sans-serif; font-weight: bold">OK</span> to create the SDL file.
</p>
<a name="wp1037789"> </a><div class="pSmartList1"><li>Create an application component for the SDL file.  An application component is a group of discrete services designed to perform a particular function.  Components can be derived from existing applications or built from scratch.</li></div>
<a name="wp1037790"> </a><p class="pIndented1">
To create a component, double-click the SDL filename in the Explorer view.  Right-click the Components folder and select <span style="font-family: Arial, Verdana, Helvetica, sans-serif; font-weight: bold">Add Using Property Sheet</span>.  Enter the name of the new component and press <span style="font-family: Arial, Verdana, Helvetica, sans-serif; font-weight: bold">Enter</span>.  The Property sheet for the component appears.  
</p>
<a name="wp1037791"> </a><div class="pSmartList1"><li>To associate your application component with the ACUCOBOL-GT runtime, select <span style="font-family: Arial, Verdana, Helvetica, sans-serif; font-weight: bold">Language Component</span> from the Component Type field and enter &quot;wrun32&quot; in the Process name field.  Provide arguments if desired.  Click <span style="font-family: Arial, Verdana, Helvetica, sans-serif; font-weight: bold">OK</span> to create the component.</li></div>
<a name="wp1037793"> </a><div class="pSmartList1"><li>Add services and parameters to the new component.  Double-click the new component icon to display the Services folder, then right-click the Services folder and select <span style="font-family: Arial, Verdana, Helvetica, sans-serif; font-weight: bold">Add Using Property Sheet</span>.  Enter a name for the service and press <span style="font-family: Arial, Verdana, Helvetica, sans-serif; font-weight: bold">Enter</span>.  The Property sheet for the service appears.</li></div>
<a name="wp1037794"> </a><div class="pSmartList1"><li>Click the Parameters tab and add new parameters to the service.  Review the IDE's online help system for instructions.  Click <span style="font-family: Arial, Verdana, Helvetica, sans-serif; font-weight: bold">OK</span> when done.  </li></div>
<a name="wp1037795"> </a><div class="pSmartList1"><li>Add as many parameters to the service, and services to the component, as you like.</li></div>
<a name="wp1037796"> </a><div class="pSmartList1"><li>Save the SDL file.  It is automatically saved in SDL format and added to a service description repository.</li></div>
<a name="wp1037797"> </a><div class="pSmartList1"><li>Generate the source code wrappers for your new component.  Right-click the parsed SDL filename and select <span style="font-family: Arial, Verdana, Helvetica, sans-serif; font-weight: bold">Create, Wrappers</span>.  The wrappers are generated in ACUCOBOL-GT.  </li></div>
<a name="wp1037799"> </a><div class="pSmartList1"><li>Right-click the Javabean subfolder to specify how you would like the Javabean proxies to be formatted for your environment.  The proxies are later installed on the Java client to provide connectivity with your COBOL component.  Select the option best suited to the Java application:</li></div>
<div class="pSmartList2"><ul class="pSmartList2">
<a name="wp1037801"> </a><div class="pSmartList2"><li>Compile - The Java source code proxies are compiled into bytecode.</li></div>
<a name="wp1037802"> </a><div class="pSmartList2"><li>Archive - The Javabean proxies are archived to a JAR  file.  Selecting this option displays a further context menu with these options:</li></div>
<div class="pSmartList3"><ul class="pSmartList3">
<a name="wp1037803"> </a><div class="pSmartList3"><li>Source Code - Archives the Javabean proxies as source code </li></div>
<a name="wp1037804"> </a><div class="pSmartList3"><li>Bytecode - Archives the Javabean proxies as bytecode</li></div>
</ul></div>
</ul></div>
<a name="wp1037806"> </a><div class="pSmartList1"><li>Once you have selected the Javabean proxy format, generate the proxies for the Java client.  Right-click the parsed SDL filename and select <span style="font-family: Arial, Verdana, Helvetica, sans-serif; font-weight: bold">Create, Proxies</span>.  By default, TDS stores the proxies in: &lt;ProjectName&gt;\Proxies\&lt;ApplicationName&gt;\JavaBean.</li></div>
<a name="wp1037807"> </a><div class="pSmartList1"><li>Double-click the component source file in the Explorer view to open it in the editor or in AcuBench.  Notice that placeholders have been provided for your COBOL logic.  These are indicated by the &quot;##&quot; symbols shown in bold below.</li></div>
<div class="pPreformattedRelative"><pre class="pPreformattedRelative">
* Generated by cobgen.mac version 1.40<a name="wp1068453"> </a>
   identification division.<a name="wp1068454"> </a>
   program-id. Reservations.<a name="wp1068455"> </a>
<a name="wp1068456"> </a>
* Built for ACUCOBOL.<a name="wp1068457"> </a>
<a name="wp1068458"> </a>
   environment division.<a name="wp1068459"> </a>
   configuration section.<a name="wp1068460"> </a>
   *    <span style="font-family: Arial, Verdana, Helvetica, sans-serif; font-weight: normal">##</span>BEGINCONF<a name="wp1099187"> </a>
   *    User adds additional code here<a name="wp1099188"> </a>
   *    <span style="font-family: Arial, Verdana, Helvetica, sans-serif; font-weight: normal">##</span>ENDCONF<a name="wp1099189"> </a>
<a name="wp1068464"> </a>
   input-output section.<a name="wp1068465"> </a>
<a name="wp1068466"> </a>
   file-control.<a name="wp1068467"> </a>
   *    <span style="font-family: Arial, Verdana, Helvetica, sans-serif; font-weight: normal">##</span>BEGINFS<a name="wp1068468"> </a>
   *    Users additional code inserted here. Uncomment<a name="wp1099279"> </a>
   *    input-output section and file-control paragraph<a name="wp1099286"> </a>
   *    headers.<a name="wp1099287"> </a>
   *    <span style="font-family: Arial, Verdana, Helvetica, sans-serif; font-weight: normal">##</span>ENDFS<a name="wp1099285"> </a>
</pre></div>
<a name="wp1069503"> </a><div class="pSmartList1"><li>Scroll through the shell file to see the wrapper code that has been added as a result of the information in your SDL file.</li></div>
<a name="wp1068410"> </a><div class="pSmartList1"><li>Extract the appropriate business logic from your ACUCOBOL-GT application and include it in or link it to the new component source code where placeholders have been provided.  You can copy and paste code into place; you can place a CALL statement to invoke a pre-existing subprogram; or you can include code using the COPY statement.  In the following example, COBOL code was pasted into the file-control section of the program between the placeholders, ##BEGINFS and ##ENDFS.  Placeholders are also provided for FDs, working storage, and declaratives-all the elements you'd expect to see in a COBOL program.  </li></div>
<div class="pPreformattedRelative"><pre class="pPreformattedRelative">
file-control.<a name="wp1068758"> </a>
  *    ##BEGINFS<a name="wp1068759"> </a>
  *    Users additional code inserted here. Uncomment<a name="wp1068760"> </a>
  *    input-output section and file-control paragraph<a name="wp1099303"> </a>
  *    headers.<a name="wp1099306"> </a>
       SELECT CUSTOMER <a name="wp1068762"> </a>
           ASSIGN TO DISK &quot;CUSTOMER&quot;<a name="wp1068763"> </a>
           ORGANIZATION IS INDEXED<a name="wp1068764"> </a>
           ACCESS MODE IS DYNAMIC<a name="wp1068765"> </a>
           RECORD KEY IS CUST-RES-ID<a name="wp1068766"> </a>
           ALTERNATE RECORD KEY IS FLIGHT-ID WITH<a name="wp1068767"> </a>
              DUPLICATES<a name="wp1099307"> </a>
           FILE STATUS IS CUSTOMER-STATUS.<a name="wp1068768"> </a>
<a name="wp1069386"> </a>
       SELECT PRINT-FILE <a name="wp1069387"> </a>
           ASSIGN TO  PRINTER<a name="wp1069388"> </a>
   *   ASSIGN TO  PRINT &quot;-Q \\Defiant\HP LaserJet III&quot;<a name="wp1068772"> </a>
          ORGANIZATION IS SEQUENTIAL<a name="wp1068773"> </a>
          FILE STATUS IS PRINT-FILE-STATUS.           <a name="wp1068774"> </a>
<a name="wp1068775"> </a>
   *   ##ENDFS<a name="wp1048857"> </a>
</pre></div>
<a name="wp1037809"> </a><div class="pSmartList1"><li>Compile and debug the completed program using the ACUCOBOL-GT compiler.  You can do this in AcuBench or from the command line.  </li></div>
</ol></div>
 </blockquote>

 <hr />

 <table align="left" border="0" cellspacing="0" cellpadding="0">
   <tr>
     <td align="left" width="300">
       <span style="font-size: 12px ; font-weight: bold ; font-family: Arial, Helvetica, sans-serif">
         <a href="http://www.acucorp.com">Acucorp, Inc.</a><br />
       </span>
       <span style="font-size: 10px ; font-family: Arial, Helvetica, sans-serif">
         Voice: 800.262.6585 (U.S.A. and Canada)<br />
         Voice: 858.689.4500<br />
         Fax: 858.689.4550<br />
         Please share your comments on this manual<br />
         or on any Acucorp documentation with the<br />
         <a href="mailto:docfeedback@acucorp.com?subject=E-01-UG-060622-Interop-7.2">Acucorp Communications Department</a>.<br />
       </span>
     </td>
   </tr>
 </table>

<script type="text/javascript" language="JavaScript1.2">
   <!--
    document.write(WWHRelatedTopicsDivTag() + WWHPopupDivTag());
   // -->
  </script>

 
</body>
</html>
