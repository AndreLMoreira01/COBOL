<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />
  <meta http-equiv="Content-Style-Type" content="text/css" />
  <meta name="GENERATOR" content="Quadralay WebWorks Publisher Professional Edition 7.0.6.1058" />
  <meta name="TEMPLATEBASE" content="Acucorp WWH" />
  <meta name="LASTUPDATED" content="06/08/06 14:56:25" />
  <title>2.2.2.1  CVM class</title>
  <link rel="StyleSheet" href="document.css" type="text/css" />
  <link rel="StyleSheet" href="catalog.css" type="text/css" />
<script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/context.js"></script>
  <script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/towwhdir.js"></script>
  <script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/wwhpagef.js"></script>

  <script type="text/javascript" language="JavaScript1.2">
   <!--
    // Set reference to top level help frame
    //
    var  WWHFrame = WWHGetWWHFrame("");
   // -->
  </script>
 </head>

 <body onLoad="WWHUpdate();">

    <a href="../docs.htm" target="acudoc"><img src="images/sbooks.gif" width="70" height="27" border="0" alt="Books" align="right" /></a>
    <span style="font-size: 18px ; font-weight: bold"><font face="Arial, Helvetica, sans-serif">
       A Guide to Interoperating with ACUCOBOL-GT <br />
    </font></span>
    <span style="font-size: 14px ; font-weight: bold"><font face="Arial, Helvetica, sans-serif">
       Version 7.2
     </font></span>

 <p />

 <blockquote>
<p class="breadcrumb"><a href="itr2.htm">Chapter 2: Working with Java Technology</a> &gt; <a href="itr23.htm">2.2  Calling COBOL from Java</a> &gt; <a href="itr25.htm">2.2.2  Using the Java API, &quot;CVM.jar&quot; </a> &gt; </p>
<a name="wp1104067"> </a><h2 class="pHeading3">
2.2.2.1  CVM class
</h2>
<a name="wp1083383"> </a><p class="pBody">
CVM is a Java class representing the ACUCOBOL-GT runtime.  The CVM class exposes public methods for setting runtime options, calling and cancelling programs, getting object libraries, and much more.  Following are the public methods in &quot;CVM.jar&quot;:
</p>
<div class="pPreformatted"><pre class="pPreformatted">
Class CVM {<a name="wp1070302"> </a>
<div class="pPreformattedRelative"><pre class="pPreformattedRelative">
public bool initialize( RT_OPTS options );<a name="wp1070303"> </a>
public bool initialize( String cmdLine );<a name="wp1070304"> </a>
public int callProgram( String name, Object params[], 
CALL_OPTIONS options );<a name="wp1070305"> </a>
public void cancelAllPrograms();<a name="wp1070306"> </a>
public void cancelProgram( String name );<a name="wp1070307"> </a>
public void unloadAllPrograms();<a name="wp1070308"> </a>
public void unloadProgram( String name );<a name="wp1070309"> </a>
public void shutdown();<a name="wp1070310"> </a>
static CVM GET_INSTANCE();<a name="wp1070311"> </a>
public void setLog( Logger log );<a name="wp1070312"> </a>
public StatusInfo GetStatusInfo();<a name="wp1070313"> </a>
public String getCVMError();<a name="wp1070314"> </a>
public String getLastErrorMsg();<a name="wp1070316"> </a>
public String getSwitches();<a name="wp1070318"> </a>
public String getConfigFile();<a name="wp1070319"> </a>
public String getErrorsOut();<a name="wp1070320"> </a>
public String getErrorsAppend();<a name="wp1070321"> </a>
public String getKeyFile();<a name="wp1070322"> </a>
public String getImport();<a name="wp1070323"> </a>
public String getPlays();<a name="wp1070324"> </a>
public String getDisplayOut();<a name="wp1070325"> </a>
public String getDisplayAppend();<a name="wp1070326"> </a>
public String getDebugCmds();<a name="wp1070327"> </a>
public String getTerminalOut();<a name="wp1070328"> </a>
public String getObjLib();<a name="wp1070329"> </a>
public String getEmbeddedLib();<a name="wp1070330"> </a>
public boolean getTerminalInit() ;<a name="wp1070331"> </a>
public boolean getCGIWarnings() ;<a name="wp1070332"> </a>
public boolean getIgnoreSignals();<a name="wp1070333"> </a>
public boolean getListConfig();<a name="wp1070334"> </a>
public boolean getNoSaveDebug();<a name="wp1070335"> </a>
public boolean getSafeMode();<a name="wp1070336"> </a>
public boolean getNonNumeric();<a name="wp1070337"> </a>
public boolean getExtendedError();<a name="wp1070338"> </a>
public boolean getDumpMem();<a name="wp1070339"> </a>
public boolean getThrowErrors();<a name="wp1070340"> </a>
public boolean getCharToGui();<a name="wp1070341"> </a>
public boolean getZipErrorFile();<a name="wp1070342"> </a>
public boolean getLinkageLength();<a name="wp1070343"> </a>
public void setSwitches( String value );<a name="wp1070345"> </a>
public void setConfigFile( String value );<a name="wp1070346"> </a>
public void setErrorsOut( String value );<a name="wp1070347"> </a>
public void setErrorsAppend( String value );<a name="wp1070348"> </a>
public void setKeyFile( String value );<a name="wp1070349"> </a>
public void setImport( String value );<a name="wp1070350"> </a>
public void setPlays( String value );<a name="wp1070351"> </a>
public void setDisplayOut( String value );<a name="wp1070352"> </a>
public void setDisplayAppend( String value );<a name="wp1070353"> </a>
public void setDebugCmds( String value );<a name="wp1070354"> </a>
public void setTerminalOut( String value );<a name="wp1070355"> </a>
public void setObjLib( String value );<a name="wp1070356"> </a>
public void setEmbeddedLib( String value );<a name="wp1070357"> </a>
public void setTerminalInit( boolean value );<a name="wp1070358"> </a>
public void setCGIWarnings( boolean value );<a name="wp1070359"> </a>
public void setIgnoreSignals( boolean value );<a name="wp1070360"> </a>
public void setListConfig( boolean value );<a name="wp1070361"> </a>
public void setNoSaveDebug( boolean value );<a name="wp1070362"> </a>
public void setSafeMode( boolean value );<a name="wp1070363"> </a>
public void setNonNumeric( boolean value );<a name="wp1070364"> </a>
public void setExtendedError( boolean value );<a name="wp1070365"> </a>
public void setDumpMem( boolean value );<a name="wp1070366"> </a>
public void setThrowErrors( boolean value );<a name="wp1070367"> </a>
public void setCharToGui( boolean value );<a name="wp1070368"> </a>
public void setZipErrorFile( boolean value );<a name="wp1070369"> </a>
public void setLinkageLength( boolean value );<a name="wp1070370"> </a>
};<a name="wp1070372"> </a>
</pre></div>
</pre></div>
<a name="wp1083295"> </a><p class="pBody">
The following table contains a description of each method.  Please note that the get method returns the current value of a particular property or string.  The set method sets the string or property value.  For example, &quot;setErrorsOut&quot; sets the name of the file to which to send error messages, and &quot;getErrorsOut&quot; returns the filename that is currently set for the error log.
</p>
<a name="wp1083292"> </a><p class="pBody">
Boolean properties like TerminalInit are set to false by default.  If you want to set a boolean property to true, then you call the set method for that property.  For example, TerminalInit is set to false by default, meaning that terminal initialization is not inhibited.  If you want to inhibit terminal initialization, set TerminalInit to true by calling &quot;setTerminalInit&quot; passing in true.  Call &quot;getTerminalInit&quot; to see what boolean value is currently set for this property.
</p>
<a name="wp1057224"> </a><p class="pBody">
</p><div>
<table border="1" cellpadding="2" cellspacing="2">
  <caption></caption>
  <tr align="left" valign="top">    <th><a name="wp1073971"> </a>
Public Method

</th>
    <th><a name="wp1073973"> </a>
Description

</th>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1073979"> </a><p class="pCellBody">
initialize( RT_OPTS options )
</p>
</td>
    <td><a name="wp1073981"> </a><p class="pCellBody">
Initializes the ACUCOBOL-GT CVM
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1073983"> </a><p class="pCellBody">
initialize( String cmdLine )
</p>
</td>
    <td><a name="wp1073985"> </a><p class="pCellBody">
Initializes the CVM with command-line options
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1074011"> </a><p class="pCellBody">
callProgram( String name, Object params[], CALL_OPTIONS options )
</p>
</td>
    <td><a name="wp1074013"> </a><p class="pCellBody">
Calls the named COBOL program using specified parameters and program options 
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1074034"> </a><p class="pCellBody">
cancelAllPrograms()
</p>
<div class="pPreformatted"><pre class="pPreformatted">
&#160;<a name="wp1074027"> </a>
</pre></div>
</td>
    <td><a name="wp1074029"> </a><p class="pCellBody">
Cancels all programs
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1073991"> </a><p class="pCellBody">
cancelProgram( String name )
</p>
</td>
    <td><a name="wp1073993"> </a><p class="pCellBody">
Cancels the named program and holds it in memory
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1073999"> </a><p class="pCellBody">
unloadAllPrograms()
</p>
</td>
    <td><a name="wp1074001"> </a><p class="pCellBody">
Empties memory of all programs
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1074003"> </a><p class="pCellBody">
unloadProgram( String name )
</p>
</td>
    <td><a name="wp1074005"> </a><p class="pCellBody">
Empties memory of the named program
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1074007"> </a><p class="pCellBody">
shutdown()
</p>
</td>
    <td><a name="wp1074009"> </a><p class="pCellBody">
Shuts down the CVM
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1074170"> </a><p class="pCellBody">
CVM GET_INSTANCE()
</p>
</td>
    <td><a name="wp1074172"> </a><p class="pCellBody">
Returns the instance of the CVM in this process
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1074166"> </a><p class="pCellBody">
setLog( Logger log)
</p>
</td>
    <td><a name="wp1082730"> </a><p class="pCellBody">
Overrides the default log with a user-specified log 
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1074162"> </a><p class="pCellBody">
StatusInfo GetStatusInfo()
</p>
</td>
    <td><a name="wp1074281"> </a><p class="pBody">
Checks the status of a called COBOL program that has finished running.  Use StatusInfo as follows:
</p>
<div class="pPreformatted"><pre class="pPreformatted">
class StatusInfo {<a name="wp1074282"> </a>
  public long cobol_return_code;<a name="wp1074283"> </a>
  public int exit_code;<a name="wp1074284"> </a>
  public int signal_number;<a name="wp1074285"> </a>
  public int call_error;<a name="wp1074286"> </a>
  public String exit_msg;};<a name="wp1074164"> </a>
</pre></div>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1074158"> </a><p class="pCellBody">
getCVMError()
</p>
</td>
    <td><a name="wp1074160"> </a><p class="pCellBody">
Gets the last error message of the CVM object class
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1074154"> </a><p class="pCellBody">
getLastErrorMsg()
</p>
</td>
    <td><a name="wp1074156"> </a><p class="pCellBody">
Returns the last error message string from the runtime
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1074146"> </a><p class="pCellBody">
get/setSwitches()
</p>
</td>
    <td><a name="wp1074148"> </a><p class="pCellBody">
Gets or sets the list of Special Names switches to turn on
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1074142"> </a><p class="pCellBody">
get/setConfigFile()
</p>
</td>
    <td><a name="wp1074144"> </a><p class="pCellBody">
Gets or sets an alternate configuration file
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1074138"> </a><p class="pCellBody">
get/setErrorsOut()
</p>
</td>
    <td><a name="wp1074140"> </a><p class="pCellBody">
Gets or sets an error messages file
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1074134"> </a><p class="pCellBody">
get/setErrorsAppend()
</p>
</td>
    <td><a name="wp1074136"> </a><p class="pCellBody">
Gets or sets a file to append error messages to
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1074130"> </a><p class="pCellBody">
get/setKeyFile()
</p>
</td>
    <td><a name="wp1074132"> </a><p class="pCellBody">
Gets or sets a keyboard input file
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1074126"> </a><p class="pCellBody">
get/setImport()
</p>
</td>
    <td><a name="wp1074128"> </a><p class="pCellBody">
Gets or sets a variable for importing graphical screens
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1074122"> </a><p class="pCellBody">
get/setPlays()
</p>
</td>
    <td><a name="wp1074124"> </a><p class="pCellBody">
Gets or sets a file of input keystroke scripts
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1074118"> </a><p class="pCellBody">
get/setDisplayOut()
</p>
</td>
    <td><a name="wp1074120"> </a><p class="pCellBody">
Gets or sets a file for display output
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1074114"> </a><p class="pCellBody">
get/setDisplayAppend()
</p>
</td>
    <td><a name="wp1074116"> </a><p class="pCellBody">
Gets or sets a file to append display output
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1074110"> </a><p class="pCellBody">
get/setDebugCmds()
</p>
</td>
    <td><a name="wp1074112"> </a><p class="pCellBody">
Gets or sets a file containing debugger commands
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1074106"> </a><p class="pCellBody">
get/setTerminalOut()
</p>
</td>
    <td><a name="wp1074108"> </a><p class="pCellBody">
Gets or sets a file to capture terminal output
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1074102"> </a><p class="pCellBody">
get/setObjLib()
</p>
</td>
    <td><a name="wp1074104"> </a><p class="pCellBody">
Gets or sets an object file library
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1074098"> </a><p class="pCellBody">
get/setEmbeddedLib()
</p>
</td>
    <td><a name="wp1074100"> </a><p class="pCellBody">
Gets or sets a configuration file from a COBOL object library
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1074094"> </a><p class="pCellBody">
get/setTerminalInit()
</p>
</td>
    <td><a name="wp1074096"> </a><p class="pCellBody">
Inhibits terminal initialization
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1074090"> </a><p class="pCellBody">
get/setCGIWarnings()
</p>
</td>
    <td><a name="wp1074092"> </a><p class="pCellBody">
Suppresses warning messages in CGI programs
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1074086"> </a><p class="pCellBody">
get/setIgnoreSignals()
</p>
</td>
    <td><a name="wp1074088"> </a><p class="pCellBody">
Ignores terminal hang-up signals
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1074082"> </a><p class="pCellBody">
get/setListConfig()
</p>
</td>
    <td><a name="wp1074084"> </a><p class="pCellBody">
Lists contents of the configuration file
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1074078"> </a><p class="pCellBody">
get/setNoSaveDebug()
</p>
</td>
    <td><a name="wp1074080"> </a><p class="pCellBody">
Prevents the debugger from reading and writing adb
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1074074"> </a><p class="pCellBody">
get/setSafeMode()
</p>
</td>
    <td><a name="wp1074076"> </a><p class="pCellBody">
Runs in safe mode
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1074070"> </a><p class="pCellBody">
get/setNonNumeric()
</p>
</td>
    <td><a name="wp1074072"> </a><p class="pCellBody">
Suppresses warnings when non-numeric data is used as numeric data
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1074066"> </a><p class="pCellBody">
get/setExtendedError()
</p>
</td>
    <td><a name="wp1074068"> </a><p class="pCellBody">
Displays extended error codes for file error &quot;30&quot;
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1074062"> </a><p class="pCellBody">
get/setDumpMem()
</p>
</td>
    <td><a name="wp1074064"> </a><p class="pCellBody">
Dumps memory for memory access violations
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1074058"> </a><p class="pCellBody">
get/setThrowErrors()
</p>
</td>
    <td><a name="wp1074060"> </a><p class="pCellBody">
Displays error message text in a MessageBox
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1074054"> </a><p class="pCellBody">
get/setCharToGui()
</p>
</td>
    <td><a name="wp1074056"> </a><p class="pCellBody">
Converts character screens to GUI equivalent
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1074501"> </a><p class="pCellBody">
get/setZipErrorFile()
</p>
</td>
    <td><a name="wp1074503"> </a><p class="pCellBody">
Compresses the error file
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1074497"> </a><p class="pCellBody">
get/setLinkageLength()
</p>
</td>
    <td><a name="wp1074499"> </a><p class="pCellBody">
Disables Linkage item length test
</p>
</td>
</tr>
</table>
</div>
<p class="pBody">
</p>
<a name="wp1102597"> </a><p class="pBody">
To set options in the CVM class (i.e., to set runtime options), use the specific &quot;setOption&quot; method such as &quot;setConfigFile&quot; and the value to set.  You can also call &quot;setOption&quot; with the option name passed as a string.  
</p>
<a name="wp1102598"> </a><p class="pBody">
Call &quot;cvm.initialize&quot; after setting options.  After &quot;initialize&quot; is called, setting options has no effect until you call &quot;initialize&quot; again.  
</p>
 </blockquote>

 <hr />

 <table align="left" border="0" cellspacing="0" cellpadding="0">
   <tr>
     <td align="left" width="300">
       <span style="font-size: 12px ; font-weight: bold ; font-family: Arial, Helvetica, sans-serif">
         <a href="http://www.acucorp.com">Acucorp, Inc.</a><br />
       </span>
       <span style="font-size: 10px ; font-family: Arial, Helvetica, sans-serif">
         Voice: 800.262.6585 (U.S.A. and Canada)<br />
         Voice: 858.689.4500<br />
         Fax: 858.689.4550<br />
         Please share your comments on this manual<br />
         or on any Acucorp documentation with the<br />
         <a href="mailto:docfeedback@acucorp.com?subject=E-01-UG-060622-Interop-7.2">Acucorp Communications Department</a>.<br />
       </span>
     </td>
   </tr>
 </table>

<script type="text/javascript" language="JavaScript1.2">
   <!--
    document.write(WWHRelatedTopicsDivTag() + WWHPopupDivTag());
   // -->
  </script>

 
</body>
</html>
