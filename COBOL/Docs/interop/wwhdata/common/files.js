function  WWHBookData_Files(P)
{
P.fA("Chapter 1: Introduction","itr1.htm");
P.fA("1.1 Introduction","itr12.htm");
P.fA("1.2  Documentation Overview","itr13.htm");
P.fA("1.3  Acucorp's extend Family of Products","itr14.htm");
P.fA("1.3.1  Acu4GL\u00ae","itr15.htm");
P.fA("1.3.2  ACUCOBOL-GT","itr16.htm");
P.fA("1.3.3  AcuODBC\u00ae","itr17.htm");
P.fA("1.3.4  AcuConnect\u00ae","itr18.htm");
P.fA("1.3.5  AcuServer\u00ae","itr19.htm");
P.fA("1.3.6  AcuSQL\u00ae","itr110.htm");
P.fA("1.4  Acucorp Technical Support","itr111.htm");
P.fA("Chapter 2: Working with Java Technology","itr2.htm");
P.fA("2.1 COBOL/Java Interoperability","itr22.htm");
P.fA("2.2  Calling COBOL from Java","itr23.htm");
P.fA("2.2.1  Using the Java Compiler Options","itr24.htm");
P.fA("2.2.2  Using the Java API, \"CVM.jar\" ","itr25.htm");
P.fA("2.2.2.1  CVM class","itr26.htm");
P.fA("2.2.2.2  CALL_OPTIONS class ","itr27.htm");
P.fA("2.2.2.3  Sample use case","itr28.htm");
P.fA("2.2.2.4  Configuration and deployment","itr29.htm");
P.fA("2.2.2.5  Example of Java calling COBOL","itr210.htm");
P.fA("2.2.2.6  Running the Java interoperability sample programs","itr211.htm");
P.fA("2.2.3  Using Component Adapter Technology","itr212.htm");
P.fA("2.2.3.1  COBOL development","itr213.htm");
P.fA("2.2.3.2  Java development","itr214.htm");
P.fA("2.2.3.3  Configuration and deployment","itr215.htm");
P.fA("2.2.4  Using C$SOCKET","itr216.htm");
P.fA("2.2.5  Using Acucorp's CGI Extensions","itr217.htm");
P.fA("2.2.6  Using the Java Native Interface (JNI)","itr218.htm");
P.fA("2.2.7  Using Named Pipes","itr219.htm");
P.fA("2.3  Calling Java from COBOL","itr220.htm");
P.fA("2.3.1  Calling the C$JAVA Routine","itr221.htm");
P.fA("2.3.1.1  Method signatures","itr222.htm");
P.fA("2.3.1.2  Supported parameter types","itr223.htm");
P.fA("2.3.1.3  Creating and using Java objects in COBOL","itr224.htm");
P.fA("2.3.1.4  Creating and using Java arrays in COBOL","itr225.htm");
P.fA("2.3.1.5  Using Java logging from COBOL","itr226.htm");
P.fA("2.3.1.6  C$JAVA configuration variables","itr227.htm");
P.fA("2.3.1.7  Configuration and deployment","itr228.htm");
P.fA("2.3.1.8  Example","itr229.htm");
P.fA("2.3.1.9  Running the Java interoperability sample programs","itr230.htm");
P.fA("2.3.2  Using C$SOCKET","itr231.htm");
P.fA("2.3.3  Calling the Java Virtual Machine (JVM) DLL or Shared Library","itr232.htm");
P.fA("2.3.4  Using C$SYSTEM","itr233.htm");
P.fA("2.3.5  Using Named Pipes","itr234.htm");
P.fA("2.4  Mapping Java Data Types","itr235.htm");
P.fA("2.5  J2EE Application Servers","itr236.htm");
P.fA("2.5.1  Working with J2EE Application Server Products ","itr237.htm");
P.fA("2.6  Web Services","itr238.htm");
P.fA("2.6.1  Web Service Provider","itr239.htm");
P.fA("2.6.2  Web Service Consumer","itr240.htm");
P.fA("Chapter 3: Working with Windows Technologies","itr3.htm");
P.fA("3.1 COBOL and Windows","itr32.htm");
P.fA("3.2  Calling COBOL From Other Windows Programs","itr33.htm");
P.fA("3.2.1  Using the ACUCOBOL-GT COM Server","itr34.htm");
P.fA("3.2.1.1  Methods of the COM server object","itr35.htm");
P.fA("Initialize","itr36.htm");
P.fA("Shutdown","itr37.htm");
P.fA("Call","itr38.htm");
P.fA("Call50","itr39.htm");
P.fA("Cancel","itr310.htm");
P.fA("3.2.2  Calling the Runtime DLL","itr311.htm");
P.fA("3.3  Calling DLLs from COBOL","itr312.htm");
P.fA("3.3.1  Loading DLLs with the CALL Statement","itr313.htm");
P.fA("3.3.2  Loading DLLs with Configuration Variables","itr314.htm");
P.fA("3.3.3  Loading DLLs with the \"-y\" Runtime Option ","itr315.htm");
P.fA("3.4  Working With Open Database Connectivity (ODBC)","itr316.htm");
P.fA("3.4.1  What Is ODBC?","itr317.htm");
P.fA("3.4.2  Working with ODBC","itr318.htm");
P.fA("3.4.2.1  Calling ODBC data from ACUCOBOL-GT programs","itr319.htm");
P.fA("3.4.2.2  Calling ACUCOBOL-GT Vision data from ODBC applications","itr320.htm");
P.fA("3.5  Accessing the Windows API","itr321.htm");
P.fA("3.5.1  Microsoft Documentation","itr322.htm");
P.fA("3.5.2  Useful Windows API DLLs","itr323.htm");
P.fA("3.5.3  Calling a Windows API function from ACUCOBOL-GT","itr324.htm");
P.fA("3.5.3.1  General rules","itr325.htm");
P.fA("3.5.3.2  Data mapping","itr326.htm");
P.fA("3.5.3.3  Limits","itr327.htm");
P.fA("3.5.3.4  Procedure","itr328.htm");
P.fA("3.6  Using Visual C++ .NET","itr329.htm");
P.fA("3.6.1  Building a New Runtime","itr330.htm");
P.fA("3.6.2  User Interface Approaches","itr331.htm");
P.fA("3.7  Windows-specific Features of ACUCOBOL-GT","itr332.htm");
P.fA("3.7.1  Message Boxes","itr333.htm");
P.fA("3.7.2   Hardware Error Handling","itr334.htm");
P.fA("3.7.3  Special Characteristics of 32-bit Windows","itr335.htm");
P.fA("3.7.3.1  Memory","itr336.htm");
P.fA("3.7.3.2  SYSTEM library routine","itr337.htm");
P.fA("3.7.3.3  C$SYSTEM library routine","itr338.htm");
P.fA("3.7.3.4  ACCEPT SYSTEM-INFORMATION FROM SYSTEM-INFO","itr339.htm");
P.fA("3.7.3.5  Assembly routines","itr340.htm");
P.fA("3.7.3.6  C$CHAIN library routine","itr341.htm");
P.fA("3.7.4  Windows-specific Library Routines","itr342.htm");
P.fA("Chapter 4: Using ActiveX Controls and COM Objects","itr4.htm");
P.fA("4.1 Leveraging Ready-made Controls","itr42.htm");
P.fA("4.2  Adding ActiveX Controls or COM Objects to Your COBOL Program","itr43.htm");
P.fA("4.2.1  The AXDEFGEN Utility","itr44.htm");
P.fA("4.2.2  To Add an ActiveX Control or COM Object to Your ACUCOBOL-GT Program","itr45.htm");
P.fA("4.3  Properties, Styles, and Methods","itr46.htm");
P.fA("4.3.1  Passing COBOL Data to Methods or Properties as SAFEARRAYs","itr47.htm");
P.fA("4.3.2  Using COBOL Data Types as ActiveX and COM Object Parameters ","itr48.htm");
P.fA("4.4  ActiveX and COM Events","itr49.htm");
P.fA("4.5  ACTIVE-X Control Type","itr410.htm");
P.fA("4.6  Name Clashes","itr411.htm");
P.fA("4.7  Useful Files","itr412.htm");
P.fA("4.8  Multiple Object Interfaces","itr413.htm");
P.fA("4.9  ActiveX Library Routines","itr414.htm");
P.fA("4.10  Distributing Applications Containing ActiveX Controls","itr415.htm");
P.fA("4.11  Deployment Guidelines","itr416.htm");
P.fA("4.12  Creating COM Objects on Remote Network Servers","itr417.htm");
P.fA("4.13  Qualified ActiveX Control and Object Names","itr418.htm");
P.fA("4.14  Enumerators","itr419.htm");
P.fA("4.15  ActiveX Color Representation","itr420.htm");
P.fA("4.16  ActiveX Error Handling","itr421.htm");
P.fA("4.17  ActiveX Debugging","itr422.htm");
P.fA("4.18  ActiveX Troubleshooting","itr423.htm");
P.fA("4.19  ActiveX Examples","itr424.htm");
P.fA("4.20  AXDEFGEN Utility Reference","itr425.htm");
P.fA("4.20.1  AXDEFGEN COPY Files","itr426.htm");
P.fA("Chapter 5: Working With .NET Assemblies","itr5.htm");
P.fA("5.1 COBOL and .NET","itr52.htm");
P.fA("5.2  What Is .NET?","itr53.htm");
P.fA("5.3  What Is an Assembly?","itr54.htm");
P.fA("5.4  Calling COBOL from .NET","itr55.htm");
P.fA("5.4.1  Using the .NET MSIL Compiler Options","itr56.htm");
P.fA("5.4.1.1   --netexe","itr57.htm");
P.fA("5.4.1.2  --netdll","itr58.htm");
P.fA("5.4.1.3  Data passing limitations","itr59.htm");
P.fA("5.4.1.4  Example","itr510.htm");
P.fA("5.4.2  Using the .NET API, \"wrunnet.dll\"","itr511.htm");
P.fA("5.4.2.1  CVM class","itr512.htm");
P.fA("Initialize","itr513.htm");
P.fA("Call","itr514.htm");
P.fA(" CancelProgram/CancelAllPrograms","itr515.htm");
P.fA("UnloadProgram/UnloadAllPrograms","itr516.htm");
P.fA("ShutDown","itr517.htm");
P.fA("5.4.2.2  Properties","itr518.htm");
P.fA("5.4.2.3  Error codes","itr519.htm");
P.fA("5.4.2.4  CompilerTypes","itr520.htm");
P.fA("5.4.3  Using the .NET Proxy and ACUCOBOL-GT COM Server","itr521.htm");
P.fA("5.5  Calling .NET from COBOL ","itr522.htm");
P.fA("5.5.1  Using the ACUCOBOL-GT .NET Bridging Interface","itr523.htm");
P.fA("5.5.1.1  Sample program","itr524.htm");
P.fA("5.5.1.2  Limits and restrictions","itr525.htm");
P.fA("5.5.1.3  Optimizing the \"AcuToNet.dll\" interface","itr526.htm");
P.fA("5.5.1.4  .NET control distribution and licensing","itr527.htm");
P.fA("5.5.1.5  Name clashes","itr528.htm");
P.fA("5.5.2  NETDEFGEN Utility Reference","itr529.htm");
P.fA("5.5.2.1  NETDEFGEN COPY files","itr530.htm");
P.fA("5.5.2.2  Passing data as parameters","itr531.htm");
P.fA("5.5.2.3  NETDEFGEN methods","itr532.htm");
P.fA("5.5.2.4  NETDEFGEN properties","itr533.htm");
P.fA("5.5.2.5  NETDEFGEN events","itr534.htm");
P.fA("5.5.2.6  NETDEFGEN enumerators","itr535.htm");
P.fA("5.5.2.7  Sample COPY file","itr536.htm");
P.fA("5.5.2.8  Sample controls","itr537.htm");
P.fA("5.5.3  Using Component Adapter Technology","itr538.htm");
P.fA("5.5.3.1  COBOL development","itr539.htm");
P.fA("5.5.3.2  .NET development","itr540.htm");
P.fA("5.5.3.3  Deployment","itr541.htm");
P.fA("5.6  Interacting with .NET Web Services","itr542.htm");
P.fA("5.6.1  Invoking .NET Web Services from COBOL","itr543.htm");
P.fA("5.6.2  Invoking COBOL Services from .NET","itr544.htm");
P.fA("5.6.2.1  Component adapter method","itr545.htm");
P.fA("Chapter 6: Working with C and C++ Programs","itr6.htm");
P.fA("6.1 COBOL and C/C++","itr62.htm");
P.fA("6.2  Matching C Data Items","itr63.htm");
P.fA("6.3  Calling C Programs From COBOL","itr64.htm");
P.fA("6.3.1  Calling C Programs in DLLs or Shared Object Libraries","itr65.htm");
P.fA("6.3.1.1  Loading shared libraries with the \"-y\" runtime option","itr66.htm");
P.fA("6.3.1.2  Loading shared libraries with the SHARED_LIBRARY_LIST configuration variable ","itr67.htm");
P.fA("6.3.1.3  Loading shared libraries with the CALL statement","itr68.htm");
P.fA("6.3.1.4  Calling routines in shared libraries with the CALL statement","itr69.htm");
P.fA("6.3.2  Calling C Programs via the Direct Method","itr610.htm");
P.fA("6.3.3  Calling C Programs via the Interface Method","itr611.htm");
P.fA("6.3.3.1  The \"sub\" interface","itr612.htm");
P.fA("6.3.3.2  The \"sub85\" interface","itr613.htm");
P.fA("6.3.4  Cancelling a CALLed C Program","itr614.htm");
P.fA("6.3.5  Managing the Terminal","itr615.htm");
P.fA("6.3.6  Creating a New Runtime System","itr616.htm");
P.fA("6.3.6.1  Linking on Windows systems","itr617.htm");
P.fA("6.3.6.2  Linking on UNIX and Linux systems","itr618.htm");
P.fA("6.3.6.3  Linking on VMS systems","itr619.htm");
P.fA("6.3.6.4  Linking on MPE/iX systems","itr620.htm");
P.fA("6.4  Calling COBOL from C","itr621.htm");
P.fA("6.4.1  Include Files","itr622.htm");
P.fA("6.4.2  Using the C API","itr623.htm");
P.fA("6.4.2.1  Using the C API in Windows","itr624.htm");
P.fA("6.4.3  Function Reference","itr625.htm");
P.fA("acu_abend()","itr626.htm");
P.fA("acu_cancel()","itr627.htm");
P.fA("acu_cancel_all()","itr628.htm");
P.fA("acu_cobol()","itr629.htm");
P.fA("acu_initv()","itr630.htm");
P.fA("aculongjmp()","itr631.htm");
P.fA("acu_register_sub()","itr632.htm");
P.fA("acu_runmain()","itr633.htm");
P.fA("acusavenv()","itr634.htm");
P.fA("acu_shutdown()","itr635.htm");
P.fA("acu_unload()","itr636.htm");
P.fA("acu_unload_all()","itr637.htm");
P.fA("6.5  Calling COBOL From C Programs","itr638.htm");
P.fA("6.5.1  Simple Use Case for acu_cobol()","itr639.htm");
P.fA("6.5.2  Calling the Runtime From a C Main Program","itr640.htm");
P.fA("6.5.2.1  Creating the runtime","itr641.htm");
P.fA("6.5.2.2  Initializing the runtime","itr642.htm");
P.fA("6.5.2.3  Shutting down the runtime","itr643.htm");
P.fA("6.5.2.4  Notes on COBOL verbs","itr644.htm");
P.fA("6.5.3  Calling COBOL Routines","itr645.htm");
P.fA("6.5.3.1  Starting a COBOL main program","itr646.htm");
P.fA("6.5.3.2  Calling COBOL subroutines that call C routines","itr647.htm");
P.fA("6.5.3.3  Canceling a COBOL subroutine","itr648.htm");
P.fA("6.5.4  Exception Handling","itr649.htm");
P.fA("6.5.5  Unloading Programs from Memory","itr650.htm");
P.fA("6.5.6  Signal Handling","itr651.htm");
P.fA("6.5.6.1  When to call acu_abend()","itr652.htm");
P.fA("6.5.7  Setting a Debug Method with acu_cobol()","itr653.htm");
P.fA("6.6  Other Interface Paths for COBOL and C","itr654.htm");
P.fA("6.6.1  Connecting with C$SOCKET","itr655.htm");
P.fA("6.6.2  Starting a Program with C$SYSTEM","itr656.htm");
P.fA("6.6.3  Passing Data with Named Pipes","itr657.htm");
P.fA("6.7  Tracking, Monitoring and Debugging Memory","itr658.htm");
P.fA("6.7.1  Memory Debugging via C","itr659.htm");
P.fA("6.7.2  Turning Memory Debugging Features On and Off","itr660.htm");
P.fA("6.7.3  Reporting Allocated Blocks","itr661.htm");
P.fA("6.7.4  Getting Memory Amounts","itr662.htm");
P.fA("6.7.5  Testing Memory Boundaries","itr663.htm");
P.fA("Chapter 7: Deploying ACUCOBOL-GT Applications on the Web","itr7.htm");
P.fA("7.1 COBOL on the Web","itr72.htm");
P.fA("7.2  Web Thin Client","itr73.htm");
P.fA("7.3  COBOL CGI Interface","itr74.htm");
P.fA("7.4  Web Runtime","itr75.htm");
P.fA("7.5  Internet Helper Application","itr76.htm");
P.fA("7.6  Web Browsing from COBOL","itr77.htm");
P.fA("7.7  COBOL Web Services","itr78.htm");
P.fA("7.8  Other Internet Solutions","itr79.htm");
P.fA("Chapter 8: Accessing ACUCOBOL-GT Applications from Mobile Devices","itr8.htm");
P.fA("8.1 Overview of Mobile Computing","itr82.htm");
P.fA("8.2  Key Mobile Terminology","itr83.htm");
P.fA("8.2.1  Languages","itr84.htm");
P.fA("8.2.2  Protocols","itr85.htm");
P.fA("8.2.3  Wireless Communication Standards","itr86.htm");
P.fA("8.2.3.1  The past and the present","itr87.htm");
P.fA("8.2.3.2  The future","itr88.htm");
P.fA("8.2.3.3  3G status","itr89.htm");
P.fA("8.3  Mobile Platform Trends","itr810.htm");
P.fA("8.4  Mobile System Design Issues","itr811.htm");
P.fA("8.4.1  User Interface","itr812.htm");
P.fA("8.4.2  Security","itr813.htm");
P.fA("8.4.3  Degree of Connectivity","itr814.htm");
P.fA("8.4.4  Record Locking","itr815.htm");
P.fA("8.5  Service-oriented Architecture (SOA)","itr816.htm");
P.fA("8.6  Sample Mobile Solution","itr817.htm");
P.fA("8.7  Other Acucorp Methods for Mobile Computing","itr818.htm");
P.fA("8.7.1  ACUCOBOL-GT COM Server","itr819.htm");
P.fA("8.7.2  ACUCOBOL-GT CGI Language Extensions","itr820.htm");
P.fA("8.7.3  ACUCOBOL-GT Runtime and Short Message Service (SMS) Processing","itr821.htm");
P.fA("Chapter 9: Working with Transaction Processing Systems","itr9.htm");
P.fA("9.1 Introduction","itr92.htm");
P.fA("9.2  What Is Transaction Processing?","itr93.htm");
P.fA("9.3  IBM CICS","itr94.htm");
P.fA("9.4  Working with the IBM CICS Transaction Gateway","itr95.htm");
P.fA("9.4.1  Including the Transaction Gateway Routines in the Runtime","itr96.htm");
P.fA("9.4.2  Connecting to CICS Applications","itr97.htm");
P.fA("9.5  Working with IBM TXSeries CICS","itr98.htm");
P.fA("9.5.1  How TXSeries CICS Works with ACUCOBOL-GT ","itr99.htm");
P.fA("9.5.2  Modernizing Applications ","itr910.htm");
P.fA("9.6  Working with Sun Mainframe Rehosting Software","itr911.htm");
P.fA("9.7  Working With BEA Tuxedo","itr912.htm");
P.fA("9.7.1  Creating a Tuxedo Client Program","itr913.htm");
P.fA("9.7.2  Creating a Tuxedo Server","itr914.htm");
P.fA("9.7.3  Running Your Tuxedo Application","itr915.htm");
P.fA("9.8  Background Debugging Options","itr916.htm");
P.fA("9.8.1  Background Debugging With an xterm","itr917.htm");
P.fA("9.8.2  Defining debugging methods with \"ADM_t\"","itr918.htm");
P.fA("9.8.2.1  Using an xterm","itr919.htm");
P.fA("9.8.2.2  Using a terminal","itr920.htm");
P.fA("9.8.2.3  Using the thin client","itr921.htm");
P.fA("Chapter 10: Working with Messaging Middleware","itr10.htm");
P.fA("10.1 Support for IBM WebSphere MQ","itr102.htm");
P.fA("10.2  Support for IBM Shared Libraries","itr103.htm");
P.fA("10.3  Support for WebSphere MQ COPY Files","itr104.htm");
P.fA("10.4  Connecting to WebSphere  MQ Applications","itr105.htm");
P.fA("10.4.1  Adding WebSphere MQ Calls to Your ACUCOBOL-GT Program","itr106.htm");
P.fA("10.4.1.1  Connecting to the queue manager","itr107.htm");
P.fA("10.4.1.2  Opening specific queues","itr108.htm");
P.fA("10.4.1.3  Reading messages from queues","itr109.htm");
P.fA("10.4.1.4  Writing messages to queues","itr1010.htm");
P.fA("10.4.1.5  Closing queues","itr1011.htm");
P.fA("10.4.1.6  Disconnecting from the queue manager","itr1012.htm");
P.fA("10.4.2  Setting Up Working-Storage","itr1013.htm");
P.fA("10.4.3  Compiling Your Application","itr1014.htm");
P.fA("10.4.4  Configuring the Runtime and Environment","itr1015.htm");
P.fA("Chapter 11: Working with Non-Vision Data","itr11.htm");
P.fA("11.1 Introduction","itr112.htm");
P.fA("11.2  Working with XML Data","itr113.htm");
P.fA("11.2.1  XML Concepts","itr114.htm");
P.fA("11.2.1.1  XML documents","itr115.htm");
P.fA("11.2.1.2  XML parsers","itr116.htm");
P.fA("11.2.1.3  Usage","itr117.htm");
P.fA("11.2.2  The XML-to-FD Utility","itr118.htm");
P.fA("11.2.2.1  xml2fd output","itr119.htm");
P.fA("11.2.2.2  xml2fd command options","itr1110.htm");
P.fA("11.2.3  The AcuXML Interface","itr1111.htm");
P.fA("11.2.3.1  Data dictionaries","itr1112.htm");
P.fA("11.2.3.2  AcuXML configuration variables","itr1113.htm");
P.fA("11.2.4  Using AcuXML","itr1114.htm");
P.fA("To enable your program to read XML data:  ","itr1115.htm");
P.fA("To enable your program to generate XML output:","itr1116.htm");
P.fA("11.2.4.1  AcuXML output structures","itr1117.htm");
P.fA("11.2.4.2  Restrictions","itr1118.htm");
P.fA("11.2.5  AcuXML Error Reporting","itr1119.htm");
P.fA("11.2.6  Using the C$XML Routine","itr1120.htm");
P.fA("11.2.6.1  General procedure ","itr1121.htm");
P.fA("11.2.6.2  Parsing an XML file","itr1122.htm");
P.fA("11.2.6.3  Moving to an element","itr1123.htm");
P.fA("11.2.6.4  Retrieving data","itr1124.htm");
P.fA("11.2.6.5  Adding, modifying, or deleting data","itr1125.htm");
P.fA("11.2.6.6  Writing a file","itr1126.htm");
P.fA("11.2.6.7  Releasing the parser","itr1127.htm");
P.fA("11.2.6.8  Retrieving errors","itr1128.htm");
P.fA("11.2.6.9  Retrieving attributes","itr1129.htm");
P.fA("11.2.6.10  Retrieving comments","itr1130.htm");
P.fA("11.2.6.11  C$XML examples","itr1131.htm");
P.fA("11.3  Working with Relational Data","itr1132.htm");
P.fA("11.3.1  Acu4GL Interface","itr1133.htm");
P.fA("11.3.2  Embedded SQL","itr1134.htm");
P.fA("11.3.2.1  Embedding SQL statements into ACUCOBOL-GT","itr1135.htm");
P.fA("11.3.2.2  Supported ESQL pre-compilers","itr1136.htm");
P.fA("11.4  Working with ODBC Data","itr1137.htm");
P.fA("11.5  Working with File Systems like C-ISAM and KSAM","itr1138.htm");
P.fA("11.6  Working with an EXTFH Interface","itr1139.htm");
P.fA("11.6.1  Using the EXTFH Interface","itr1140.htm");
P.fA("11.6.2  Making EXTFH Libraries Available to the Runtime","itr1141.htm");
P.fA("11.6.2.1  Accessing files through EXTFH","itr1142.htm");
P.fA("11.6.2.2  Searching for function names","itr1143.htm");
P.fA("11.6.2.3  Setting libraries for indexed, relative, and sequential files","itr1144.htm");
P.fA("11.6.2.4  Statically linking EXTFH-compatible libraries","itr1145.htm");
P.fA("11.7  File System Configuration ","itr1146.htm");
P.fA("11.8  File System Initialization","itr1147.htm");
}
