function  WWHBookData_AddTOCEntries(P)
{
var A=P.fN("Chapter  1: Introduction","0#wp1026045");
var B=A.fN("1.1 Introduction","1#wp1036089");
B=A.fN("1.2 Documentation Overview","2#wp1037665");
B=A.fN("1.3 Acucorp's extend Family of Products","3#wp1036451");
var C=B.fN("1.3.1 Acu4GL\u00ae","4#wp1036454");
C=B.fN("1.3.2 ACUCOBOL-GT","5#wp1036460");
C=B.fN("1.3.3 AcuODBC\u00ae","6#wp1036464");
C=B.fN("1.3.4 AcuConnect\u00ae","7#wp1036469");
C=B.fN("1.3.5 AcuServer\u00ae","8#wp1036474");
C=B.fN("1.3.6 AcuSQL\u00ae","9#wp1036477");
B=A.fN("1.4 Acucorp Technical Support","10#wp1036340");
A=P.fN("Chapter  2: Working with Java Technology","11#wp1036257");
B=A.fN("2.1 COBOL/Java Interoperability","12#wp1059388");
B=A.fN("2.2 Calling COBOL from Java","13#wp1036961");
C=B.fN("2.2.1 Using the Java Compiler Options","14#wp1108975");
C=B.fN("2.2.2 Using the Java API, \"CVM.jar\"","15#wp1108870");
var D=C.fN("2.2.2.1 CVM class","16#wp1104067");
D=C.fN("2.2.2.2 CALL_OPTIONS class","17#wp1074693");
D=C.fN("2.2.2.3 Sample use case","18#wp1041209");
D=C.fN("2.2.2.4 Configuration and deployment","19#wp1044829");
D=C.fN("2.2.2.5 Example of Java calling COBOL","20#wp1075025");
D=C.fN("2.2.2.6 Running the Java interoperability sample programs","21#wp1105349");
C=B.fN("2.2.3 Using Component Adapter Technology","22#wp1093224");
D=C.fN("2.2.3.1 COBOL development","23#wp1048299");
D=C.fN("2.2.3.2 Java development","24#wp1037810");
D=C.fN("2.2.3.3 Configuration and deployment","25#wp1037817");
C=B.fN("2.2.4 Using C$SOCKET","26#wp1037208");
C=B.fN("2.2.5 Using Acucorp's CGI Extensions","27#wp1037210");
C=B.fN("2.2.6 Using the Java Native Interface (JNI)","28#wp1037217");
C=B.fN("2.2.7 Using Named Pipes","29#wp1037227");
B=A.fN("2.3 Calling Java from COBOL","30#wp1037063");
C=B.fN("2.3.1 Calling the C$JAVA Routine","31#wp1038147");
D=C.fN("2.3.1.1 Method signatures","32#wp1075702");
D=C.fN("2.3.1.2 Supported parameter types","33#wp1075735");
D=C.fN("2.3.1.3 Creating and using Java objects in COBOL","34#wp1075764");
D=C.fN("2.3.1.4 Creating and using Java arrays in COBOL","35#wp1075795");
D=C.fN("2.3.1.5 Using Java logging from COBOL","36#wp1075885");
D=C.fN("2.3.1.6 C$JAVA configuration variables","37#wp1079912");
D=C.fN("2.3.1.7 Configuration and deployment","38#wp1059512");
D=C.fN("2.3.1.8 Example","39#wp1080866");
D=C.fN("2.3.1.9 Running the Java interoperability sample programs","40#wp1107428");
C=B.fN("2.3.2 Using C$SOCKET","41#wp1038151");
C=B.fN("2.3.3 Calling the Java Virtual Machine (JVM) DLL or Shared Library","42#wp1038153");
C=B.fN("2.3.4 Using C$SYSTEM","43#wp1038155");
C=B.fN("2.3.5 Using Named Pipes","44#wp1038200");
B=A.fN("2.4 Mapping Java Data Types","45#wp1066559");
B=A.fN("2.5 J2EE Application Servers","46#wp1038210");
C=B.fN("2.5.1 Working with J2EE Application Server Products","47#wp1038294");
B=A.fN("2.6 Web Services","48#wp1059065");
C=B.fN("2.6.1 Web Service Provider","49#wp1038387");
C=B.fN("2.6.2 Web Service Consumer","50#wp1038392");
A=P.fN("Chapter  3: Working with Windows Technologies","51#wp1063990");
B=A.fN("3.1 COBOL and Windows","52#wp1091381");
B=A.fN("3.2 Calling COBOL From Other Windows Programs","53#wp1060318");
C=B.fN("3.2.1 Using the ACUCOBOL-GT COM Server","54#wp1047754");
D=C.fN("3.2.1.1 Methods of the COM server object","55#wp1040382");
C=B.fN("3.2.2 Calling the Runtime DLL","61#wp1040558");
B=A.fN("3.3 Calling DLLs from COBOL","62#wp1065389");
C=B.fN("3.3.1 Loading DLLs with the CALL Statement","63#wp1065396");
C=B.fN("3.3.2 Loading DLLs with Configuration Variables","64#wp1065460");
C=B.fN("3.3.3 Loading DLLs with the \"-y\" Runtime Option","65#wp1066254");
B=A.fN("3.4 Working With Open Database Connectivity (ODBC)","66#wp1052681");
C=B.fN("3.4.1 What Is ODBC?","67#wp1067257");
C=B.fN("3.4.2 Working with ODBC","68#wp1048972");
D=C.fN("3.4.2.1 Calling ODBC data from ACUCOBOL-GT programs","69#wp1067319");
D=C.fN("3.4.2.2 Calling ACUCOBOL-GT Vision data from ODBC applications","70#wp1067394");
B=A.fN("3.5 Accessing the Windows API","71#wp1069973");
C=B.fN("3.5.1 Microsoft Documentation","72#wp1070031");
C=B.fN("3.5.2 Useful Windows API DLLs","73#wp1071890");
C=B.fN("3.5.3 Calling a Windows API function from ACUCOBOL-GT","74#wp1070040");
D=C.fN("3.5.3.1 General rules","75#wp1071139");
D=C.fN("3.5.3.2 Data mapping","76#wp1082269");
D=C.fN("3.5.3.3 Limits","77#wp1073586");
D=C.fN("3.5.3.4 Procedure","78#wp1070080");
B=A.fN("3.6 Using Visual C++ .NET","79#wp1045662");
C=B.fN("3.6.1 Building a New Runtime","80#wp1045670");
C=B.fN("3.6.2 User Interface Approaches","81#wp1045684");
B=A.fN("3.7 Windows-specific Features of ACUCOBOL-GT","82#wp1044844");
C=B.fN("3.7.1 Message Boxes","83#wp1044851");
C=B.fN("3.7.2 Hardware Error Handling","84#wp1045061");
C=B.fN("3.7.3 Special Characteristics of 32-bit Windows","85#wp1045072");
D=C.fN("3.7.3.1 Memory","86#wp1045074");
D=C.fN("3.7.3.2 SYSTEM library routine","87#wp1045076");
D=C.fN("3.7.3.3 C$SYSTEM library routine","88#wp1045085");
D=C.fN("3.7.3.4 ACCEPT SYSTEM-INFORMATION FROM SYSTEM-INFO","89#wp1045091");
D=C.fN("3.7.3.5 Assembly routines","90#wp1045094");
D=C.fN("3.7.3.6 C$CHAIN library routine","91#wp1045097");
C=B.fN("3.7.4 Windows-specific Library Routines","92#wp1044344");
A=P.fN("Chapter  4: Using ActiveX Controls and COM Objects","93#wp1037486");
B=A.fN("4.1 Leveraging Ready-made Controls","94#wp1037488");
B=A.fN("4.2 Adding ActiveX Controls or COM Objects to Your COBOL Program","95#wp1037506");
C=B.fN("4.2.1 The AXDEFGEN Utility","96#wp1037511");
C=B.fN("4.2.2 To Add an ActiveX Control or COM Object to Your ACUCOBOL-GT Program","97#wp1037520");
B=A.fN("4.3 Properties, Styles, and Methods","98#wp1037613");
C=B.fN("4.3.1 Passing COBOL Data to Methods or Properties as SAFEARRAYs","99#wp1037633");
C=B.fN("4.3.2 Using COBOL Data Types as ActiveX and COM Object Parameters","100#wp1037757");
B=A.fN("4.4 ActiveX and COM Events","101#wp1037777");
B=A.fN("4.5 ACTIVE-X Control Type","102#wp1037876");
B=A.fN("4.6 Name Clashes","103#wp1037880");
B=A.fN("4.7 Useful Files","104#wp1037909");
B=A.fN("4.8 Multiple Object Interfaces","105#wp1037916");
B=A.fN("4.9 ActiveX Library Routines","106#wp1038007");
B=A.fN("4.10 Distributing Applications Containing ActiveX Controls","107#wp1038056");
B=A.fN("4.11 Deployment Guidelines","108#wp1038095");
B=A.fN("4.12 Creating COM Objects on Remote Network Servers","109#wp1038131");
B=A.fN("4.13 Qualified ActiveX Control and Object Names","110#wp1038148");
B=A.fN("4.14 Enumerators","111#wp1038154");
B=A.fN("4.15 ActiveX Color Representation","112#wp1038174");
B=A.fN("4.16 ActiveX Error Handling","113#wp1038179");
B=A.fN("4.17 ActiveX Debugging","114#wp1038182");
B=A.fN("4.18 ActiveX Troubleshooting","115#wp1038188");
B=A.fN("4.19 ActiveX Examples","116#wp1038218");
B=A.fN("4.20 AXDEFGEN Utility Reference","117#wp1038384");
C=B.fN("4.20.1 AXDEFGEN COPY Files","118#wp1038410");
A=P.fN("Chapter  5: Working With .NET Assemblies","119#wp1037486");
B=A.fN("5.1 COBOL and .NET","120#wp1040441");
B=A.fN("5.2 What Is .NET?","121#wp1037497");
B=A.fN("5.3 What Is an Assembly?","122#wp1037503");
B=A.fN("5.4 Calling COBOL from .NET","123#wp1037509");
C=B.fN("5.4.1 Using the .NET MSIL Compiler Options","124#wp1037530");
D=C.fN("5.4.1.1 --netexe","125#wp1037556");
D=C.fN("5.4.1.2 --netdll","126#wp1037575");
D=C.fN("5.4.1.3 Data passing limitations","127#wp1037588");
D=C.fN("5.4.1.4 Example","128#wp1037592");
C=B.fN("5.4.2 Using the .NET API, \"wrunnet.dll\"","129#wp1037781");
D=C.fN("5.4.2.1 CVM class","130#wp1037801");
D=C.fN("5.4.2.2 Properties","136#wp1037951");
D=C.fN("5.4.2.3 Error codes","137#wp1038392");
D=C.fN("5.4.2.4 CompilerTypes","138#wp1038426");
C=B.fN("5.4.3 Using the .NET Proxy and ACUCOBOL-GT COM Server","139#wp1038475");
B=A.fN("5.5 Calling .NET from COBOL","140#wp1038513");
C=B.fN("5.5.1 Using the ACUCOBOL-GT .NET Bridging Interface","141#wp1038528");
D=C.fN("5.5.1.1 Sample program","142#wp1038624");
D=C.fN("5.5.1.2 Limits and restrictions","143#wp1038766");
D=C.fN("5.5.1.3 Optimizing the \"AcuToNet.dll\" interface","144#wp1038772");
D=C.fN("5.5.1.4 .NET control distribution and licensing","145#wp1038779");
D=C.fN("5.5.1.5 Name clashes","146#wp1038789");
C=B.fN("5.5.2 NETDEFGEN Utility Reference","147#wp1038796");
D=C.fN("5.5.2.1 NETDEFGEN COPY files","148#wp1038862");
D=C.fN("5.5.2.2 Passing data as parameters","149#wp1038992");
D=C.fN("5.5.2.3 NETDEFGEN methods","150#wp1039053");
D=C.fN("5.5.2.4 NETDEFGEN properties","151#wp1039066");
D=C.fN("5.5.2.5 NETDEFGEN events","152#wp1039078");
D=C.fN("5.5.2.6 NETDEFGEN enumerators","153#wp1039088");
D=C.fN("5.5.2.7 Sample COPY file","154#wp1039098");
D=C.fN("5.5.2.8 Sample controls","155#wp1039261");
C=B.fN("5.5.3 Using Component Adapter Technology","156#wp1039273");
D=C.fN("5.5.3.1 COBOL development","157#wp1039287");
D=C.fN("5.5.3.2 .NET development","158#wp1039306");
D=C.fN("5.5.3.3 Deployment","159#wp1039316");
B=A.fN("5.6 Interacting with .NET Web Services","160#wp1039328");
C=B.fN("5.6.1 Invoking .NET Web Services from COBOL","161#wp1039331");
C=B.fN("5.6.2 Invoking COBOL Services from .NET","162#wp1039342");
D=C.fN("5.6.2.1 Component adapter method","163#wp1039353");
A=P.fN("Chapter  6: Working with C and C++ Programs","164#wp1064484");
B=A.fN("6.1 COBOL and C/C++","165#wp1122993");
B=A.fN("6.2 Matching C Data Items","166#wp1121338");
B=A.fN("6.3 Calling C Programs From COBOL","167#wp1121383");
C=B.fN("6.3.1 Calling C Programs in DLLs or Shared Object Libraries","168#wp1121413");
D=C.fN("6.3.1.1 Loading shared libraries with the \"-y\" runtime option","169#wp1121424");
D=C.fN("6.3.1.2 Loading shared libraries with the SHARED_LIBRARY_LIST configuration variable","170#wp1121431");
D=C.fN("6.3.1.3 Loading shared libraries with the CALL statement","171#wp1121443");
D=C.fN("6.3.1.4 Calling routines in shared libraries with the CALL statement","172#wp1121445");
C=B.fN("6.3.2 Calling C Programs via the Direct Method","173#wp1121448");
C=B.fN("6.3.3 Calling C Programs via the Interface Method","174#wp1121485");
D=C.fN("6.3.3.1 The \"sub\" interface","175#wp1121490");
D=C.fN("6.3.3.2 The \"sub85\" interface","176#wp1121559");
C=B.fN("6.3.4 Cancelling a CALLed C Program","177#wp1121672");
C=B.fN("6.3.5 Managing the Terminal","178#wp1138254");
C=B.fN("6.3.6 Creating a New Runtime System","179#wp1137388");
D=C.fN("6.3.6.1 Linking on Windows systems","180#wp1125882");
D=C.fN("6.3.6.2 Linking on UNIX and Linux systems","181#wp1125928");
D=C.fN("6.3.6.3 Linking on VMS systems","182#wp1125961");
D=C.fN("6.3.6.4 Linking on MPE/iX systems","183#wp1125992");
B=A.fN("6.4 Calling COBOL from C","184#wp1123275");
C=B.fN("6.4.1 Include Files","185#wp1121768");
C=B.fN("6.4.2 Using the C API","186#wp1121773");
D=C.fN("6.4.2.1 Using the C API in Windows","187#wp1121779");
C=B.fN("6.4.3 Function Reference","188#wp1121796");
B=A.fN("6.5 Calling COBOL From C Programs","201#wp1122298");
C=B.fN("6.5.1 Simple Use Case for acu_cobol()","202#wp1122303");
C=B.fN("6.5.2 Calling the Runtime From a C Main Program","203#wp1122335");
D=C.fN("6.5.2.1 Creating the runtime","204#wp1122339");
D=C.fN("6.5.2.2 Initializing the runtime","205#wp1122346");
D=C.fN("6.5.2.3 Shutting down the runtime","206#wp1122360");
D=C.fN("6.5.2.4 Notes on COBOL verbs","207#wp1122383");
C=B.fN("6.5.3 Calling COBOL Routines","208#wp1122395");
D=C.fN("6.5.3.1 Starting a COBOL main program","209#wp1122398");
D=C.fN("6.5.3.2 Calling COBOL subroutines that call C routines","210#wp1122405");
D=C.fN("6.5.3.3 Canceling a COBOL subroutine","211#wp1122468");
C=B.fN("6.5.4 Exception Handling","212#wp1122472");
C=B.fN("6.5.5 Unloading Programs from Memory","213#wp1122476");
C=B.fN("6.5.6 Signal Handling","214#wp1122491");
D=C.fN("6.5.6.1 When to call acu_abend()","215#wp1122495");
C=B.fN("6.5.7 Setting a Debug Method with acu_cobol()","216#wp1122501");
B=A.fN("6.6 Other Interface Paths for COBOL and C","217#wp1122503");
C=B.fN("6.6.1 Connecting with C$SOCKET","218#wp1122514");
C=B.fN("6.6.2 Starting a Program with C$SYSTEM","219#wp1122542");
C=B.fN("6.6.3 Passing Data with Named Pipes","220#wp1122552");
B=A.fN("6.7 Tracking, Monitoring and Debugging Memory","221#wp1132640");
C=B.fN("6.7.1 Memory Debugging via C","222#wp1132654");
C=B.fN("6.7.2 Turning Memory Debugging Features On and Off","223#wp1132674");
C=B.fN("6.7.3 Reporting Allocated Blocks","224#wp1132686");
C=B.fN("6.7.4 Getting Memory Amounts","225#wp1132690");
C=B.fN("6.7.5 Testing Memory Boundaries","226#wp1132694");
A=P.fN("Chapter  7: Deploying ACUCOBOL-GT Applications on the Web","227#wp1032818");
B=A.fN("7.1 COBOL on the Web","228#wp1036418");
B=A.fN("7.2 Web Thin Client","229#wp1036437");
B=A.fN("7.3 COBOL CGI Interface","230#wp1036961");
B=A.fN("7.4 Web Runtime","231#wp1036451");
B=A.fN("7.5 Internet Helper Application","232#wp1036630");
B=A.fN("7.6 Web Browsing from COBOL","233#wp1036634");
B=A.fN("7.7 COBOL Web Services","234#wp1037091");
B=A.fN("7.8 Other Internet Solutions","235#wp1036456");
A=P.fN("Chapter  8: Accessing ACUCOBOL-GT Applications from Mobile Devices","236#wp1032818");
B=A.fN("8.1 Overview of Mobile Computing","237#wp1036467");
B=A.fN("8.2 Key Mobile Terminology","238#wp1036476");
C=B.fN("8.2.1 Languages","239#wp1036478");
C=B.fN("8.2.2 Protocols","240#wp1036481");
C=B.fN("8.2.3 Wireless Communication Standards","241#wp1036486");
D=C.fN("8.2.3.1 The past and the present","242#wp1036488");
D=C.fN("8.2.3.2 The future","243#wp1036495");
D=C.fN("8.2.3.3 3G status","244#wp1036501");
B=A.fN("8.3 Mobile Platform Trends","245#wp1036535");
B=A.fN("8.4 Mobile System Design Issues","246#wp1036543");
C=B.fN("8.4.1 User Interface","247#wp1036545");
C=B.fN("8.4.2 Security","248#wp1036549");
C=B.fN("8.4.3 Degree of Connectivity","249#wp1036555");
C=B.fN("8.4.4 Record Locking","250#wp1036560");
B=A.fN("8.5 Service-oriented Architecture (SOA)","251#wp1036590");
B=A.fN("8.6 Sample Mobile Solution","252#wp1036610");
B=A.fN("8.7 Other Acucorp Methods for Mobile Computing","253#wp1036633");
C=B.fN("8.7.1 ACUCOBOL-GT COM Server","254#wp1036639");
C=B.fN("8.7.2 ACUCOBOL-GT CGI Language Extensions","255#wp1036652");
C=B.fN("8.7.3 ACUCOBOL-GT Runtime and Short Message Service (SMS) Processing","256#wp1036658");
A=P.fN("Chapter  9: Working with Transaction Processing Systems","257#wp1036472");
B=A.fN("9.1 Introduction","258#wp1036493");
B=A.fN("9.2 What Is Transaction Processing?","259#wp1044862");
B=A.fN("9.3 IBM CICS","260#wp1036504");
B=A.fN("9.4 Working with the IBM CICS Transaction Gateway","261#wp1038239");
C=B.fN("9.4.1 Including the Transaction Gateway Routines in the Runtime","262#wp1038254");
C=B.fN("9.4.2 Connecting to CICS Applications","263#wp1038268");
B=A.fN("9.5 Working with IBM TXSeries CICS","264#wp1036507");
C=B.fN("9.5.1 How TXSeries CICS Works with ACUCOBOL-GT","265#wp1036519");
C=B.fN("9.5.2 Modernizing Applications","266#wp1036604");
B=A.fN("9.6 Working with Sun Mainframe Rehosting Software","267#wp1045339");
B=A.fN("9.7 Working With BEA Tuxedo","268#wp1036616");
C=B.fN("9.7.1 Creating a Tuxedo Client Program","269#wp1036634");
C=B.fN("9.7.2 Creating a Tuxedo Server","270#wp1036658");
C=B.fN("9.7.3 Running Your Tuxedo Application","271#wp1036667");
B=A.fN("9.8 Background Debugging Options","272#wp1040313");
C=B.fN("9.8.1 Background Debugging With an xterm","273#wp1041654");
C=B.fN("9.8.2 Defining debugging methods with \"ADM_t\"","274#wp1040314");
D=C.fN("9.8.2.1 Using an xterm","275#wp1040334");
D=C.fN("9.8.2.2 Using a terminal","276#wp1040337");
D=C.fN("9.8.2.3 Using the thin client","277#wp1041032");
A=P.fN("Chapter  10: Working with Messaging Middleware","278#wp1032818");
B=A.fN("10.1 Support for IBM WebSphere MQ","279#wp1055663");
B=A.fN("10.2 Support for IBM Shared Libraries","280#wp1054333");
B=A.fN("10.3 Support for WebSphere MQ COPY Files","281#wp1054337");
B=A.fN("10.4 Connecting to WebSphere MQ Applications","282#wp1055592");
C=B.fN("10.4.1 Adding WebSphere MQ Calls to Your ACUCOBOL-GT Program","283#wp1054414");
D=C.fN("10.4.1.1 Connecting to the queue manager","284#wp1054436");
D=C.fN("10.4.1.2 Opening specific queues","285#wp1054482");
D=C.fN("10.4.1.3 Reading messages from queues","286#wp1054544");
D=C.fN("10.4.1.4 Writing messages to queues","287#wp1054631");
D=C.fN("10.4.1.5 Closing queues","288#wp1054711");
D=C.fN("10.4.1.6 Disconnecting from the queue manager","289#wp1054760");
C=B.fN("10.4.2 Setting Up Working-Storage","290#wp1054799");
C=B.fN("10.4.3 Compiling Your Application","291#wp1054810");
C=B.fN("10.4.4 Configuring the Runtime and Environment","292#wp1054813");
A=P.fN("Chapter  11: Working with Non-Vision Data","293#wp1032818");
B=A.fN("11.1 Introduction","294#wp1036482");
B=A.fN("11.2 Working with XML Data","295#wp1037152");
C=B.fN("11.2.1 XML Concepts","296#wp1036493");
D=C.fN("11.2.1.1 XML documents","297#wp1036516");
D=C.fN("11.2.1.2 XML parsers","298#wp1046133");
D=C.fN("11.2.1.3 Usage","299#wp1036708");
C=B.fN("11.2.2 The XML-to-FD Utility","300#wp1036726");
D=C.fN("11.2.2.1 xml2fd output","301#wp1037615");
D=C.fN("11.2.2.2 xml2fd command options","302#wp1037616");
C=B.fN("11.2.3 The AcuXML Interface","303#wp1038519");
D=C.fN("11.2.3.1 Data dictionaries","304#wp1050420");
D=C.fN("11.2.3.2 AcuXML configuration variables","305#wp1037652");
C=B.fN("11.2.4 Using AcuXML","306#wp1036764");
D=C.fN("11.2.4.1 AcuXML output structures","309#wp1036816");
D=C.fN("11.2.4.2 Restrictions","310#wp1036850");
C=B.fN("11.2.5 AcuXML Error Reporting","311#wp1037348");
C=B.fN("11.2.6 Using the C$XML Routine","312#wp1046184");
D=C.fN("11.2.6.1 General procedure","313#wp1046188");
D=C.fN("11.2.6.2 Parsing an XML file","314#wp1046200");
D=C.fN("11.2.6.3 Moving to an element","315#wp1046242");
D=C.fN("11.2.6.4 Retrieving data","316#wp1049623");
D=C.fN("11.2.6.5 Adding, modifying, or deleting data","317#wp1046342");
D=C.fN("11.2.6.6 Writing a file","318#wp1046355");
D=C.fN("11.2.6.7 Releasing the parser","319#wp1046360");
D=C.fN("11.2.6.8 Retrieving errors","320#wp1046363");
D=C.fN("11.2.6.9 Retrieving attributes","321#wp1049362");
D=C.fN("11.2.6.10 Retrieving comments","322#wp1049393");
D=C.fN("11.2.6.11 C$XML examples","323#wp1046371");
B=A.fN("11.3 Working with Relational Data","324#wp1046174");
C=B.fN("11.3.1 Acu4GL Interface","325#wp1039178");
C=B.fN("11.3.2 Embedded SQL","326#wp1039188");
D=C.fN("11.3.2.1 Embedding SQL statements into ACUCOBOL-GT","327#wp1039191");
D=C.fN("11.3.2.2 Supported ESQL pre-compilers","328#wp1039200");
B=A.fN("11.4 Working with ODBC Data","329#wp1037189");
B=A.fN("11.5 Working with File Systems like C-ISAM and KSAM","330#wp1037191");
B=A.fN("11.6 Working with an EXTFH Interface","331#wp1045393");
C=B.fN("11.6.1 Using the EXTFH Interface","332#wp1045398");
C=B.fN("11.6.2 Making EXTFH Libraries Available to the Runtime","333#wp1045404");
D=C.fN("11.6.2.1 Accessing files through EXTFH","334#wp1045420");
D=C.fN("11.6.2.2 Searching for function names","335#wp1045433");
D=C.fN("11.6.2.3 Setting libraries for indexed, relative, and sequential files","336#wp1045443");
D=C.fN("11.6.2.4 Statically linking EXTFH-compatible libraries","337#wp1045453");
B=A.fN("11.7 File System Configuration","338#wp1051422");
B=A.fN("11.8 File System Initialization","339#wp1044791");
}
