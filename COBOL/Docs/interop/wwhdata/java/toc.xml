<?xml version='1.0' encoding='ISO-8859-1' ?>

<WebWorksHelpTOC version="3.0">
 <i l="itr1.htm#wp1026045" t="Chapter  1: Introduction">
  <i l="itr12.htm#wp1036089" t="1.1 Introduction" />
  <i l="itr13.htm#wp1037665" t="1.2 Documentation Overview" />
  <i l="itr14.htm#wp1036451" t="1.3 Acucorp's extend Family of Products">
   <i l="itr15.htm#wp1036454" t="1.3.1 Acu4GL®" />
   <i l="itr16.htm#wp1036460" t="1.3.2 ACUCOBOL-GT" />
   <i l="itr17.htm#wp1036464" t="1.3.3 AcuODBC®" />
   <i l="itr18.htm#wp1036469" t="1.3.4 AcuConnect®" />
   <i l="itr19.htm#wp1036474" t="1.3.5 AcuServer®" />
   <i l="itr110.htm#wp1036477" t="1.3.6 AcuSQL®" />
  </i>
  <i l="itr111.htm#wp1036340" t="1.4 Acucorp Technical Support" />
 </i>
 <i l="itr2.htm#wp1036257" t="Chapter  2: Working with Java Technology">
  <i l="itr22.htm#wp1059388" t="2.1 COBOL/Java Interoperability" />
  <i l="itr23.htm#wp1036961" t="2.2 Calling COBOL from Java">
   <i l="itr24.htm#wp1108975" t="2.2.1 Using the Java Compiler Options" />
   <i l="itr25.htm#wp1108870" t="2.2.2 Using the Java API, &quot;CVM.jar&quot;">
    <i l="itr26.htm#wp1104067" t="2.2.2.1 CVM class" />
    <i l="itr27.htm#wp1074693" t="2.2.2.2 CALL_OPTIONS class" />
    <i l="itr28.htm#wp1041209" t="2.2.2.3 Sample use case" />
    <i l="itr29.htm#wp1044829" t="2.2.2.4 Configuration and deployment" />
    <i l="itr210.htm#wp1075025" t="2.2.2.5 Example of Java calling COBOL" />
    <i l="itr211.htm#wp1105349" t="2.2.2.6 Running the Java interoperability sample programs" />
   </i>
   <i l="itr212.htm#wp1093224" t="2.2.3 Using Component Adapter Technology">
    <i l="itr213.htm#wp1048299" t="2.2.3.1 COBOL development" />
    <i l="itr214.htm#wp1037810" t="2.2.3.2 Java development" />
    <i l="itr215.htm#wp1037817" t="2.2.3.3 Configuration and deployment" />
   </i>
   <i l="itr216.htm#wp1037208" t="2.2.4 Using C$SOCKET" />
   <i l="itr217.htm#wp1037210" t="2.2.5 Using Acucorp's CGI Extensions" />
   <i l="itr218.htm#wp1037217" t="2.2.6 Using the Java Native Interface (JNI)" />
   <i l="itr219.htm#wp1037227" t="2.2.7 Using Named Pipes" />
  </i>
  <i l="itr220.htm#wp1037063" t="2.3 Calling Java from COBOL">
   <i l="itr221.htm#wp1038147" t="2.3.1 Calling the C$JAVA Routine">
    <i l="itr222.htm#wp1075702" t="2.3.1.1 Method signatures" />
    <i l="itr223.htm#wp1075735" t="2.3.1.2 Supported parameter types" />
    <i l="itr224.htm#wp1075764" t="2.3.1.3 Creating and using Java objects in COBOL" />
    <i l="itr225.htm#wp1075795" t="2.3.1.4 Creating and using Java arrays in COBOL" />
    <i l="itr226.htm#wp1075885" t="2.3.1.5 Using Java logging from COBOL" />
    <i l="itr227.htm#wp1079912" t="2.3.1.6 C$JAVA configuration variables" />
    <i l="itr228.htm#wp1059512" t="2.3.1.7 Configuration and deployment" />
    <i l="itr229.htm#wp1080866" t="2.3.1.8 Example" />
    <i l="itr230.htm#wp1107428" t="2.3.1.9 Running the Java interoperability sample programs" />
   </i>
   <i l="itr231.htm#wp1038151" t="2.3.2 Using C$SOCKET" />
   <i l="itr232.htm#wp1038153" t="2.3.3 Calling the Java Virtual Machine (JVM) DLL or Shared Library" />
   <i l="itr233.htm#wp1038155" t="2.3.4 Using C$SYSTEM" />
   <i l="itr234.htm#wp1038200" t="2.3.5 Using Named Pipes" />
  </i>
  <i l="itr235.htm#wp1066559" t="2.4 Mapping Java Data Types" />
  <i l="itr236.htm#wp1038210" t="2.5 J2EE Application Servers">
   <i l="itr237.htm#wp1038294" t="2.5.1 Working with J2EE Application Server Products" />
  </i>
  <i l="itr238.htm#wp1059065" t="2.6 Web Services">
   <i l="itr239.htm#wp1038387" t="2.6.1 Web Service Provider" />
   <i l="itr240.htm#wp1038392" t="2.6.2 Web Service Consumer" />
  </i>
 </i>
 <i l="itr3.htm#wp1063990" t="Chapter  3: Working with Windows Technologies">
  <i l="itr32.htm#wp1091381" t="3.1 COBOL and Windows" />
  <i l="itr33.htm#wp1060318" t="3.2 Calling COBOL From Other Windows Programs">
   <i l="itr34.htm#wp1047754" t="3.2.1 Using the ACUCOBOL-GT COM Server">
    <i l="itr35.htm#wp1040382" t="3.2.1.1 Methods of the COM server object" />
   </i>
   <i l="itr311.htm#wp1040558" t="3.2.2 Calling the Runtime DLL" />
  </i>
  <i l="itr312.htm#wp1065389" t="3.3 Calling DLLs from COBOL">
   <i l="itr313.htm#wp1065396" t="3.3.1 Loading DLLs with the CALL Statement" />
   <i l="itr314.htm#wp1065460" t="3.3.2 Loading DLLs with Configuration Variables" />
   <i l="itr315.htm#wp1066254" t="3.3.3 Loading DLLs with the &quot;-y&quot; Runtime Option" />
  </i>
  <i l="itr316.htm#wp1052681" t="3.4 Working With Open Database Connectivity (ODBC)">
   <i l="itr317.htm#wp1067257" t="3.4.1 What Is ODBC?" />
   <i l="itr318.htm#wp1048972" t="3.4.2 Working with ODBC">
    <i l="itr319.htm#wp1067319" t="3.4.2.1 Calling ODBC data from ACUCOBOL-GT programs" />
    <i l="itr320.htm#wp1067394" t="3.4.2.2 Calling ACUCOBOL-GT Vision data from ODBC applications" />
   </i>
  </i>
  <i l="itr321.htm#wp1069973" t="3.5 Accessing the Windows API">
   <i l="itr322.htm#wp1070031" t="3.5.1 Microsoft Documentation" />
   <i l="itr323.htm#wp1071890" t="3.5.2 Useful Windows API DLLs" />
   <i l="itr324.htm#wp1070040" t="3.5.3 Calling a Windows API function from ACUCOBOL-GT">
    <i l="itr325.htm#wp1071139" t="3.5.3.1 General rules" />
    <i l="itr326.htm#wp1082269" t="3.5.3.2 Data mapping" />
    <i l="itr327.htm#wp1073586" t="3.5.3.3 Limits" />
    <i l="itr328.htm#wp1070080" t="3.5.3.4 Procedure" />
   </i>
  </i>
  <i l="itr329.htm#wp1045662" t="3.6 Using Visual C++ .NET">
   <i l="itr330.htm#wp1045670" t="3.6.1 Building a New Runtime" />
   <i l="itr331.htm#wp1045684" t="3.6.2 User Interface Approaches" />
  </i>
  <i l="itr332.htm#wp1044844" t="3.7 Windows-specific Features of ACUCOBOL-GT">
   <i l="itr333.htm#wp1044851" t="3.7.1 Message Boxes" />
   <i l="itr334.htm#wp1045061" t="3.7.2 Hardware Error Handling" />
   <i l="itr335.htm#wp1045072" t="3.7.3 Special Characteristics of 32-bit Windows">
    <i l="itr336.htm#wp1045074" t="3.7.3.1 Memory" />
    <i l="itr337.htm#wp1045076" t="3.7.3.2 SYSTEM library routine" />
    <i l="itr338.htm#wp1045085" t="3.7.3.3 C$SYSTEM library routine" />
    <i l="itr339.htm#wp1045091" t="3.7.3.4 ACCEPT SYSTEM-INFORMATION FROM SYSTEM-INFO" />
    <i l="itr340.htm#wp1045094" t="3.7.3.5 Assembly routines" />
    <i l="itr341.htm#wp1045097" t="3.7.3.6 C$CHAIN library routine" />
   </i>
   <i l="itr342.htm#wp1044344" t="3.7.4 Windows-specific Library Routines" />
  </i>
 </i>
 <i l="itr4.htm#wp1037486" t="Chapter  4: Using ActiveX Controls and COM Objects">
  <i l="itr42.htm#wp1037488" t="4.1 Leveraging Ready-made Controls" />
  <i l="itr43.htm#wp1037506" t="4.2 Adding ActiveX Controls or COM Objects to Your COBOL Program">
   <i l="itr44.htm#wp1037511" t="4.2.1 The AXDEFGEN Utility" />
   <i l="itr45.htm#wp1037520" t="4.2.2 To Add an ActiveX Control or COM Object to Your ACUCOBOL-GT Program" />
  </i>
  <i l="itr46.htm#wp1037613" t="4.3 Properties, Styles, and Methods">
   <i l="itr47.htm#wp1037633" t="4.3.1 Passing COBOL Data to Methods or Properties as SAFEARRAYs" />
   <i l="itr48.htm#wp1037757" t="4.3.2 Using COBOL Data Types as ActiveX and COM Object Parameters" />
  </i>
  <i l="itr49.htm#wp1037777" t="4.4 ActiveX and COM Events" />
  <i l="itr410.htm#wp1037876" t="4.5 ACTIVE-X Control Type" />
  <i l="itr411.htm#wp1037880" t="4.6 Name Clashes" />
  <i l="itr412.htm#wp1037909" t="4.7 Useful Files" />
  <i l="itr413.htm#wp1037916" t="4.8 Multiple Object Interfaces" />
  <i l="itr414.htm#wp1038007" t="4.9 ActiveX Library Routines" />
  <i l="itr415.htm#wp1038056" t="4.10 Distributing Applications Containing ActiveX Controls" />
  <i l="itr416.htm#wp1038095" t="4.11 Deployment Guidelines" />
  <i l="itr417.htm#wp1038131" t="4.12 Creating COM Objects on Remote Network Servers" />
  <i l="itr418.htm#wp1038148" t="4.13 Qualified ActiveX Control and Object Names" />
  <i l="itr419.htm#wp1038154" t="4.14 Enumerators" />
  <i l="itr420.htm#wp1038174" t="4.15 ActiveX Color Representation" />
  <i l="itr421.htm#wp1038179" t="4.16 ActiveX Error Handling" />
  <i l="itr422.htm#wp1038182" t="4.17 ActiveX Debugging" />
  <i l="itr423.htm#wp1038188" t="4.18 ActiveX Troubleshooting" />
  <i l="itr424.htm#wp1038218" t="4.19 ActiveX Examples" />
  <i l="itr425.htm#wp1038384" t="4.20 AXDEFGEN Utility Reference">
   <i l="itr426.htm#wp1038410" t="4.20.1 AXDEFGEN COPY Files" />
  </i>
 </i>
 <i l="itr5.htm#wp1037486" t="Chapter  5: Working With .NET Assemblies">
  <i l="itr52.htm#wp1040441" t="5.1 COBOL and .NET" />
  <i l="itr53.htm#wp1037497" t="5.2 What Is .NET?" />
  <i l="itr54.htm#wp1037503" t="5.3 What Is an Assembly?" />
  <i l="itr55.htm#wp1037509" t="5.4 Calling COBOL from .NET">
   <i l="itr56.htm#wp1037530" t="5.4.1 Using the .NET MSIL Compiler Options">
    <i l="itr57.htm#wp1037556" t="5.4.1.1 --netexe" />
    <i l="itr58.htm#wp1037575" t="5.4.1.2 --netdll" />
    <i l="itr59.htm#wp1037588" t="5.4.1.3 Data passing limitations" />
    <i l="itr510.htm#wp1037592" t="5.4.1.4 Example" />
   </i>
   <i l="itr511.htm#wp1037781" t="5.4.2 Using the .NET API, &quot;wrunnet.dll&quot;">
    <i l="itr512.htm#wp1037801" t="5.4.2.1 CVM class" />
    <i l="itr518.htm#wp1037951" t="5.4.2.2 Properties" />
    <i l="itr519.htm#wp1038392" t="5.4.2.3 Error codes" />
    <i l="itr520.htm#wp1038426" t="5.4.2.4 CompilerTypes" />
   </i>
   <i l="itr521.htm#wp1038475" t="5.4.3 Using the .NET Proxy and ACUCOBOL-GT COM Server" />
  </i>
  <i l="itr522.htm#wp1038513" t="5.5 Calling .NET from COBOL">
   <i l="itr523.htm#wp1038528" t="5.5.1 Using the ACUCOBOL-GT .NET Bridging Interface">
    <i l="itr524.htm#wp1038624" t="5.5.1.1 Sample program" />
    <i l="itr525.htm#wp1038766" t="5.5.1.2 Limits and restrictions" />
    <i l="itr526.htm#wp1038772" t="5.5.1.3 Optimizing the &quot;AcuToNet.dll&quot; interface" />
    <i l="itr527.htm#wp1038779" t="5.5.1.4 .NET control distribution and licensing" />
    <i l="itr528.htm#wp1038789" t="5.5.1.5 Name clashes" />
   </i>
   <i l="itr529.htm#wp1038796" t="5.5.2 NETDEFGEN Utility Reference">
    <i l="itr530.htm#wp1038862" t="5.5.2.1 NETDEFGEN COPY files" />
    <i l="itr531.htm#wp1038992" t="5.5.2.2 Passing data as parameters" />
    <i l="itr532.htm#wp1039053" t="5.5.2.3 NETDEFGEN methods" />
    <i l="itr533.htm#wp1039066" t="5.5.2.4 NETDEFGEN properties" />
    <i l="itr534.htm#wp1039078" t="5.5.2.5 NETDEFGEN events" />
    <i l="itr535.htm#wp1039088" t="5.5.2.6 NETDEFGEN enumerators" />
    <i l="itr536.htm#wp1039098" t="5.5.2.7 Sample COPY file" />
    <i l="itr537.htm#wp1039261" t="5.5.2.8 Sample controls" />
   </i>
   <i l="itr538.htm#wp1039273" t="5.5.3 Using Component Adapter Technology">
    <i l="itr539.htm#wp1039287" t="5.5.3.1 COBOL development" />
    <i l="itr540.htm#wp1039306" t="5.5.3.2 .NET development" />
    <i l="itr541.htm#wp1039316" t="5.5.3.3 Deployment" />
   </i>
  </i>
  <i l="itr542.htm#wp1039328" t="5.6 Interacting with .NET Web Services">
   <i l="itr543.htm#wp1039331" t="5.6.1 Invoking .NET Web Services from COBOL" />
   <i l="itr544.htm#wp1039342" t="5.6.2 Invoking COBOL Services from .NET">
    <i l="itr545.htm#wp1039353" t="5.6.2.1 Component adapter method" />
   </i>
  </i>
 </i>
 <i l="itr6.htm#wp1064484" t="Chapter  6: Working with C and C++ Programs">
  <i l="itr62.htm#wp1122993" t="6.1 COBOL and C/C++" />
  <i l="itr63.htm#wp1121338" t="6.2 Matching C Data Items" />
  <i l="itr64.htm#wp1121383" t="6.3 Calling C Programs From COBOL">
   <i l="itr65.htm#wp1121413" t="6.3.1 Calling C Programs in DLLs or Shared Object Libraries">
    <i l="itr66.htm#wp1121424" t="6.3.1.1 Loading shared libraries with the &quot;-y&quot; runtime option" />
    <i l="itr67.htm#wp1121431" t="6.3.1.2 Loading shared libraries with the SHARED_LIBRARY_LIST configuration variable" />
    <i l="itr68.htm#wp1121443" t="6.3.1.3 Loading shared libraries with the CALL statement" />
    <i l="itr69.htm#wp1121445" t="6.3.1.4 Calling routines in shared libraries with the CALL statement" />
   </i>
   <i l="itr610.htm#wp1121448" t="6.3.2 Calling C Programs via the Direct Method" />
   <i l="itr611.htm#wp1121485" t="6.3.3 Calling C Programs via the Interface Method">
    <i l="itr612.htm#wp1121490" t="6.3.3.1 The &quot;sub&quot; interface" />
    <i l="itr613.htm#wp1121559" t="6.3.3.2 The &quot;sub85&quot; interface" />
   </i>
   <i l="itr614.htm#wp1121672" t="6.3.4 Cancelling a CALLed C Program" />
   <i l="itr615.htm#wp1138254" t="6.3.5 Managing the Terminal" />
   <i l="itr616.htm#wp1137388" t="6.3.6 Creating a New Runtime System">
    <i l="itr617.htm#wp1125882" t="6.3.6.1 Linking on Windows systems" />
    <i l="itr618.htm#wp1125928" t="6.3.6.2 Linking on UNIX and Linux systems" />
    <i l="itr619.htm#wp1125961" t="6.3.6.3 Linking on VMS systems" />
    <i l="itr620.htm#wp1125992" t="6.3.6.4 Linking on MPE/iX systems" />
   </i>
  </i>
  <i l="itr621.htm#wp1123275" t="6.4 Calling COBOL from C">
   <i l="itr622.htm#wp1121768" t="6.4.1 Include Files" />
   <i l="itr623.htm#wp1121773" t="6.4.2 Using the C API">
    <i l="itr624.htm#wp1121779" t="6.4.2.1 Using the C API in Windows" />
   </i>
   <i l="itr625.htm#wp1121796" t="6.4.3 Function Reference" />
  </i>
  <i l="itr638.htm#wp1122298" t="6.5 Calling COBOL From C Programs">
   <i l="itr639.htm#wp1122303" t="6.5.1 Simple Use Case for acu_cobol()" />
   <i l="itr640.htm#wp1122335" t="6.5.2 Calling the Runtime From a C Main Program">
    <i l="itr641.htm#wp1122339" t="6.5.2.1 Creating the runtime" />
    <i l="itr642.htm#wp1122346" t="6.5.2.2 Initializing the runtime" />
    <i l="itr643.htm#wp1122360" t="6.5.2.3 Shutting down the runtime" />
    <i l="itr644.htm#wp1122383" t="6.5.2.4 Notes on COBOL verbs" />
   </i>
   <i l="itr645.htm#wp1122395" t="6.5.3 Calling COBOL Routines">
    <i l="itr646.htm#wp1122398" t="6.5.3.1 Starting a COBOL main program" />
    <i l="itr647.htm#wp1122405" t="6.5.3.2 Calling COBOL subroutines that call C routines" />
    <i l="itr648.htm#wp1122468" t="6.5.3.3 Canceling a COBOL subroutine" />
   </i>
   <i l="itr649.htm#wp1122472" t="6.5.4 Exception Handling" />
   <i l="itr650.htm#wp1122476" t="6.5.5 Unloading Programs from Memory" />
   <i l="itr651.htm#wp1122491" t="6.5.6 Signal Handling">
    <i l="itr652.htm#wp1122495" t="6.5.6.1 When to call acu_abend()" />
   </i>
   <i l="itr653.htm#wp1122501" t="6.5.7 Setting a Debug Method with acu_cobol()" />
  </i>
  <i l="itr654.htm#wp1122503" t="6.6 Other Interface Paths for COBOL and C">
   <i l="itr655.htm#wp1122514" t="6.6.1 Connecting with C$SOCKET" />
   <i l="itr656.htm#wp1122542" t="6.6.2 Starting a Program with C$SYSTEM" />
   <i l="itr657.htm#wp1122552" t="6.6.3 Passing Data with Named Pipes" />
  </i>
  <i l="itr658.htm#wp1132640" t="6.7 Tracking, Monitoring and Debugging Memory">
   <i l="itr659.htm#wp1132654" t="6.7.1 Memory Debugging via C" />
   <i l="itr660.htm#wp1132674" t="6.7.2 Turning Memory Debugging Features On and Off" />
   <i l="itr661.htm#wp1132686" t="6.7.3 Reporting Allocated Blocks" />
   <i l="itr662.htm#wp1132690" t="6.7.4 Getting Memory Amounts" />
   <i l="itr663.htm#wp1132694" t="6.7.5 Testing Memory Boundaries" />
  </i>
 </i>
 <i l="itr7.htm#wp1032818" t="Chapter  7: Deploying ACUCOBOL-GT Applications on the Web">
  <i l="itr72.htm#wp1036418" t="7.1 COBOL on the Web" />
  <i l="itr73.htm#wp1036437" t="7.2 Web Thin Client" />
  <i l="itr74.htm#wp1036961" t="7.3 COBOL CGI Interface" />
  <i l="itr75.htm#wp1036451" t="7.4 Web Runtime" />
  <i l="itr76.htm#wp1036630" t="7.5 Internet Helper Application" />
  <i l="itr77.htm#wp1036634" t="7.6 Web Browsing from COBOL" />
  <i l="itr78.htm#wp1037091" t="7.7 COBOL Web Services" />
  <i l="itr79.htm#wp1036456" t="7.8 Other Internet Solutions" />
 </i>
 <i l="itr8.htm#wp1032818" t="Chapter  8: Accessing ACUCOBOL-GT Applications from Mobile Devices">
  <i l="itr82.htm#wp1036467" t="8.1 Overview of Mobile Computing" />
  <i l="itr83.htm#wp1036476" t="8.2 Key Mobile Terminology">
   <i l="itr84.htm#wp1036478" t="8.2.1 Languages" />
   <i l="itr85.htm#wp1036481" t="8.2.2 Protocols" />
   <i l="itr86.htm#wp1036486" t="8.2.3 Wireless Communication Standards">
    <i l="itr87.htm#wp1036488" t="8.2.3.1 The past and the present" />
    <i l="itr88.htm#wp1036495" t="8.2.3.2 The future" />
    <i l="itr89.htm#wp1036501" t="8.2.3.3 3G status" />
   </i>
  </i>
  <i l="itr810.htm#wp1036535" t="8.3 Mobile Platform Trends" />
  <i l="itr811.htm#wp1036543" t="8.4 Mobile System Design Issues">
   <i l="itr812.htm#wp1036545" t="8.4.1 User Interface" />
   <i l="itr813.htm#wp1036549" t="8.4.2 Security" />
   <i l="itr814.htm#wp1036555" t="8.4.3 Degree of Connectivity" />
   <i l="itr815.htm#wp1036560" t="8.4.4 Record Locking" />
  </i>
  <i l="itr816.htm#wp1036590" t="8.5 Service-oriented Architecture (SOA)" />
  <i l="itr817.htm#wp1036610" t="8.6 Sample Mobile Solution" />
  <i l="itr818.htm#wp1036633" t="8.7 Other Acucorp Methods for Mobile Computing">
   <i l="itr819.htm#wp1036639" t="8.7.1 ACUCOBOL-GT COM Server" />
   <i l="itr820.htm#wp1036652" t="8.7.2 ACUCOBOL-GT CGI Language Extensions" />
   <i l="itr821.htm#wp1036658" t="8.7.3 ACUCOBOL-GT Runtime and Short Message Service (SMS) Processing" />
  </i>
 </i>
 <i l="itr9.htm#wp1036472" t="Chapter  9: Working with Transaction Processing Systems">
  <i l="itr92.htm#wp1036493" t="9.1 Introduction" />
  <i l="itr93.htm#wp1044862" t="9.2 What Is Transaction Processing?" />
  <i l="itr94.htm#wp1036504" t="9.3 IBM CICS" />
  <i l="itr95.htm#wp1038239" t="9.4 Working with the IBM CICS Transaction Gateway">
   <i l="itr96.htm#wp1038254" t="9.4.1 Including the Transaction Gateway Routines in the Runtime" />
   <i l="itr97.htm#wp1038268" t="9.4.2 Connecting to CICS Applications" />
  </i>
  <i l="itr98.htm#wp1036507" t="9.5 Working with IBM TXSeries CICS">
   <i l="itr99.htm#wp1036519" t="9.5.1 How TXSeries CICS Works with ACUCOBOL-GT" />
   <i l="itr910.htm#wp1036604" t="9.5.2 Modernizing Applications" />
  </i>
  <i l="itr911.htm#wp1045339" t="9.6 Working with Sun Mainframe Rehosting Software" />
  <i l="itr912.htm#wp1036616" t="9.7 Working With BEA Tuxedo">
   <i l="itr913.htm#wp1036634" t="9.7.1 Creating a Tuxedo Client Program" />
   <i l="itr914.htm#wp1036658" t="9.7.2 Creating a Tuxedo Server" />
   <i l="itr915.htm#wp1036667" t="9.7.3 Running Your Tuxedo Application" />
  </i>
  <i l="itr916.htm#wp1040313" t="9.8 Background Debugging Options">
   <i l="itr917.htm#wp1041654" t="9.8.1 Background Debugging With an xterm" />
   <i l="itr918.htm#wp1040314" t="9.8.2 Defining debugging methods with &quot;ADM_t&quot;">
    <i l="itr919.htm#wp1040334" t="9.8.2.1 Using an xterm" />
    <i l="itr920.htm#wp1040337" t="9.8.2.2 Using a terminal" />
    <i l="itr921.htm#wp1041032" t="9.8.2.3 Using the thin client" />
   </i>
  </i>
 </i>
 <i l="itr10.htm#wp1032818" t="Chapter  10: Working with Messaging Middleware">
  <i l="itr102.htm#wp1055663" t="10.1 Support for IBM WebSphere MQ" />
  <i l="itr103.htm#wp1054333" t="10.2 Support for IBM Shared Libraries" />
  <i l="itr104.htm#wp1054337" t="10.3 Support for WebSphere MQ COPY Files" />
  <i l="itr105.htm#wp1055592" t="10.4 Connecting to WebSphere MQ Applications">
   <i l="itr106.htm#wp1054414" t="10.4.1 Adding WebSphere MQ Calls to Your ACUCOBOL-GT Program">
    <i l="itr107.htm#wp1054436" t="10.4.1.1 Connecting to the queue manager" />
    <i l="itr108.htm#wp1054482" t="10.4.1.2 Opening specific queues" />
    <i l="itr109.htm#wp1054544" t="10.4.1.3 Reading messages from queues" />
    <i l="itr1010.htm#wp1054631" t="10.4.1.4 Writing messages to queues" />
    <i l="itr1011.htm#wp1054711" t="10.4.1.5 Closing queues" />
    <i l="itr1012.htm#wp1054760" t="10.4.1.6 Disconnecting from the queue manager" />
   </i>
   <i l="itr1013.htm#wp1054799" t="10.4.2 Setting Up Working-Storage" />
   <i l="itr1014.htm#wp1054810" t="10.4.3 Compiling Your Application" />
   <i l="itr1015.htm#wp1054813" t="10.4.4 Configuring the Runtime and Environment" />
  </i>
 </i>
 <i l="itr11.htm#wp1032818" t="Chapter  11: Working with Non-Vision Data">
  <i l="itr112.htm#wp1036482" t="11.1 Introduction" />
  <i l="itr113.htm#wp1037152" t="11.2 Working with XML Data">
   <i l="itr114.htm#wp1036493" t="11.2.1 XML Concepts">
    <i l="itr115.htm#wp1036516" t="11.2.1.1 XML documents" />
    <i l="itr116.htm#wp1046133" t="11.2.1.2 XML parsers" />
    <i l="itr117.htm#wp1036708" t="11.2.1.3 Usage" />
   </i>
   <i l="itr118.htm#wp1036726" t="11.2.2 The XML-to-FD Utility">
    <i l="itr119.htm#wp1037615" t="11.2.2.1 xml2fd output" />
    <i l="itr1110.htm#wp1037616" t="11.2.2.2 xml2fd command options" />
   </i>
   <i l="itr1111.htm#wp1038519" t="11.2.3 The AcuXML Interface">
    <i l="itr1112.htm#wp1050420" t="11.2.3.1 Data dictionaries" />
    <i l="itr1113.htm#wp1037652" t="11.2.3.2 AcuXML configuration variables" />
   </i>
   <i l="itr1114.htm#wp1036764" t="11.2.4 Using AcuXML">
    <i l="itr1117.htm#wp1036816" t="11.2.4.1 AcuXML output structures" />
    <i l="itr1118.htm#wp1036850" t="11.2.4.2 Restrictions" />
   </i>
   <i l="itr1119.htm#wp1037348" t="11.2.5 AcuXML Error Reporting" />
   <i l="itr1120.htm#wp1046184" t="11.2.6 Using the C$XML Routine">
    <i l="itr1121.htm#wp1046188" t="11.2.6.1 General procedure" />
    <i l="itr1122.htm#wp1046200" t="11.2.6.2 Parsing an XML file" />
    <i l="itr1123.htm#wp1046242" t="11.2.6.3 Moving to an element" />
    <i l="itr1124.htm#wp1049623" t="11.2.6.4 Retrieving data" />
    <i l="itr1125.htm#wp1046342" t="11.2.6.5 Adding, modifying, or deleting data" />
    <i l="itr1126.htm#wp1046355" t="11.2.6.6 Writing a file" />
    <i l="itr1127.htm#wp1046360" t="11.2.6.7 Releasing the parser" />
    <i l="itr1128.htm#wp1046363" t="11.2.6.8 Retrieving errors" />
    <i l="itr1129.htm#wp1049362" t="11.2.6.9 Retrieving attributes" />
    <i l="itr1130.htm#wp1049393" t="11.2.6.10 Retrieving comments" />
    <i l="itr1131.htm#wp1046371" t="11.2.6.11 C$XML examples" />
   </i>
  </i>
  <i l="itr1132.htm#wp1046174" t="11.3 Working with Relational Data">
   <i l="itr1133.htm#wp1039178" t="11.3.1 Acu4GL Interface" />
   <i l="itr1134.htm#wp1039188" t="11.3.2 Embedded SQL">
    <i l="itr1135.htm#wp1039191" t="11.3.2.1 Embedding SQL statements into ACUCOBOL-GT" />
    <i l="itr1136.htm#wp1039200" t="11.3.2.2 Supported ESQL pre-compilers" />
   </i>
  </i>
  <i l="itr1137.htm#wp1037189" t="11.4 Working with ODBC Data" />
  <i l="itr1138.htm#wp1037191" t="11.5 Working with File Systems like C-ISAM and KSAM" />
  <i l="itr1139.htm#wp1045393" t="11.6 Working with an EXTFH Interface">
   <i l="itr1140.htm#wp1045398" t="11.6.1 Using the EXTFH Interface" />
   <i l="itr1141.htm#wp1045404" t="11.6.2 Making EXTFH Libraries Available to the Runtime">
    <i l="itr1142.htm#wp1045420" t="11.6.2.1 Accessing files through EXTFH" />
    <i l="itr1143.htm#wp1045433" t="11.6.2.2 Searching for function names" />
    <i l="itr1144.htm#wp1045443" t="11.6.2.3 Setting libraries for indexed, relative, and sequential files" />
    <i l="itr1145.htm#wp1045453" t="11.6.2.4 Statically linking EXTFH-compatible libraries" />
   </i>
  </i>
  <i l="itr1146.htm#wp1051422" t="11.7 File System Configuration" />
  <i l="itr1147.htm#wp1044791" t="11.8 File System Initialization" />
 </i>
</WebWorksHelpTOC>