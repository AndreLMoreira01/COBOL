<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />
  <meta http-equiv="Content-Style-Type" content="text/css" />
  <meta name="GENERATOR" content="Quadralay WebWorks Publisher Professional Edition 7.0.6.1058" />
  <meta name="TEMPLATEBASE" content="Acucorp WWH" />
  <meta name="LASTUPDATED" content="06/08/06 15:00:50" />
  <title>8.6  Sample Mobile Solution</title>
  <link rel="StyleSheet" href="document.css" type="text/css" />
  <link rel="StyleSheet" href="catalog.css" type="text/css" />
<script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/context.js"></script>
  <script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/towwhdir.js"></script>
  <script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/wwhpagef.js"></script>

  <script type="text/javascript" language="JavaScript1.2">
   <!--
    // Set reference to top level help frame
    //
    var  WWHFrame = WWHGetWWHFrame("");
   // -->
  </script>
 </head>

 <body onLoad="WWHUpdate();">

    <a href="../docs.htm" target="acudoc"><img src="images/sbooks.gif" width="70" height="27" border="0" alt="Books" align="right" /></a>
    <span style="font-size: 18px ; font-weight: bold"><font face="Arial, Helvetica, sans-serif">
       A Guide to Interoperating with ACUCOBOL-GT <br />
    </font></span>
    <span style="font-size: 14px ; font-weight: bold"><font face="Arial, Helvetica, sans-serif">
       Version 7.2
     </font></span>

 <p />

 <blockquote>
<p class="breadcrumb"><a href="itr8.htm">Chapter 8: Accessing ACUCOBOL-GT Applications from Mobile Devices</a> &gt; </p>
<a name="wp1036610"> </a><h2 class="pHeading1">
8.6  Sample Mobile Solution
</h2>
<a name="wp1036611"> </a><p class="pBody">
Now that we've outlined some basic design issues for our mobile implementation and introduced suitable implementation technologies-SOA and component adapters-let's describe a sample project that integrates a COBOL back-end application with a front-end application that resides on a handheld device.  
</p>
<a name="wp1036612"> </a><p class="pBody">
Assume we have a widget sales and tracking ACUCOBOL-GT desktop application that has a graphical front end.  With the program's SOA, all of its I/O functions are performed in subprograms that can act as services.  The mobile functionality we want to add is the ability to modify customer data files from a handheld device.  
</p>
<a name="wp1037002"> </a><p class="pBody">
Several factors can influence the design of mobile systems, including strong user preference for a particular device, required functionality, and available programming skills.  For our sample system, we've chosen an iPAQ handheld device running Pocket PC 2003 as our front-end, and we use a wireless access point to achieve our wireless network connectivity.  We use an always-connected model with pessimistic locking implemented via a lock table.  A user must lock a record in order to modify it, and no one else may update that file until the first user unlocks it.
</p>
<a name="wp1036618"> </a><p class="pBody">
For the component adapter setup, we need to develop client and server components.  Creating the client component typically involves new user interface development.  Because file I/O functions are packaged as services and used with component adapters, we can write our mobile front-end application in any language supported by our chosen device.  In this case, we use C# to develop a user interface that includes a series of entry fields and buttons that let us view, add, delete, or modify a customer record.  Our front-end application calls COBOL services via component adapters, and those COBOL services in turn execute the business logic.  
</p>
<a name="wp1036619"> </a><p class="pBody">
On the server side, we use the component adapter development environment to identify COBOL logic and create the COBOL components.  We can use the same environment to generate C# proxies for the COBOL services, which allow communication with the non-COBOL front-end application.  A Service Definition Language (SDL) file can be used to establish the runtime command line and any parameters passed to and from the COBOL back-end application.  This file can be generated by the component adapter development software, if desired.
</p>
<a name="wp1036620"> </a><p class="pBody">
Then, we install the appropriate component pieces and broker software on the client and the server-in our sample, the client portion resides on the iPAQ handheld, and the server component piece runs on Windows XP.  
</p>
<a name="wp1036621"> </a><p class="pBody">
The resulting system gives users the ability to quickly and easily confirm or modify customer data in the field.  The legacy back-end application logic is preserved while new technology is introduced on an easy-to-use mobile front end.  
</p>
 </blockquote>

 <hr />

 <table align="left" border="0" cellspacing="0" cellpadding="0">
   <tr>
     <td align="left" width="300">
       <span style="font-size: 12px ; font-weight: bold ; font-family: Arial, Helvetica, sans-serif">
         <a href="http://www.acucorp.com">Acucorp, Inc.</a><br />
       </span>
       <span style="font-size: 10px ; font-family: Arial, Helvetica, sans-serif">
         Voice: 800.262.6585 (U.S.A. and Canada)<br />
         Voice: 858.689.4500<br />
         Fax: 858.689.4550<br />
         Please share your comments on this manual<br />
         or on any Acucorp documentation with the<br />
         <a href="mailto:docfeedback@acucorp.com?subject=E-01-UG-060622-Interop-7.2">Acucorp Communications Department</a>.<br />
       </span>
     </td>
   </tr>
 </table>

<script type="text/javascript" language="JavaScript1.2">
   <!--
    document.write(WWHRelatedTopicsDivTag() + WWHPopupDivTag());
   // -->
  </script>

 
</body>
</html>
