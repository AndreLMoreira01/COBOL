<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />
  <meta http-equiv="Content-Style-Type" content="text/css" />
  <meta name="GENERATOR" content="Quadralay WebWorks Publisher Professional Edition 7.0.5.1025" />
  <meta name="TEMPLATEBASE" content="Acucorp WWH" />
  <meta name="LASTUPDATED" content="06/15/06 14:43:47" />
  <title>S$IO Routine</title>
  <link rel="StyleSheet" href="document.css" type="text/css" />
  <link rel="StyleSheet" href="catalog.css" type="text/css" />
<script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/context.js"></script>
  <script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/towwhdir.js"></script>
  <script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/wwhpagef.js"></script>

  <script type="text/javascript" language="JavaScript1.2">
   <!--
    // Set reference to top level help frame
    //
    var  WWHFrame = WWHGetWWHFrame("");
   // -->
  </script>
 </head>

 <body onLoad="WWHUpdate();">

    <a href="../docs.htm" target="acudoc"><img src="images/sbooks.gif" width="70" height="27" border="0" alt="Books" align="right" /></a>
    <span style="font-size: 18px ; font-weight: bold"><font face="Arial, Helvetica, sans-serif">
       ACUCOBOL-GT Appendices <br />
    </font></span>
    <span style="font-size: 14px ; font-weight: bold"><font face="Arial, Helvetica, sans-serif">
       Version 7.2
     </font></span>

 <p />

 <blockquote>
<p class="breadcrumb"><a href="gt4i.htm">Appendix I:  ACUCOBOL-GT Library Routines</a> &gt; <a href="gt4i2.htm">I.1 Library Routines</a> &gt; </p>
<a name="wp1294876"> </a><h2 class="pHeading2">
S$IO Routine
</h2>
<a name="wp1294877"> </a><p class="pBody">
The S$IO routine provides an interface to the sequential file handler.  Calls to the routine require an operation code and a variable number of parameters, depending on the operation called.  The return code is set automatically after the call.  The external variable &quot;F-ERRNO&quot; is set according to any errors found.  &quot;F-ERRNO&quot; may not be reset on entry to S$IO, and should be checked only if S$IO returns an error condition.
</p>
<a name="wp1294878"> </a><p class="pNote">
<hr />
<b>Note:  </b>File locking should be applied whenever SEEK operations are used.
<hr />
</p>
<a name="wp1294879"> </a><h3 class="pHeadingRef">
USAGE
</h3>
<div class="pPreformatted"><pre class="pPreformatted">
CALL &quot;S$IO&quot; <a name="wp1294880"> </a>
    USING OP-CODE, PARAMETERS<a name="wp1481679"> </a>
</pre></div>
<a name="wp1294881"> </a><h3 class="pHeadingRef">
PARAMETERS
</h3>
<a name="wp1294882"> </a><p class="pBody">
<b class="cBold">OP-CODE</b>     Numeric parameter
</p>
<a name="wp1294883"> </a><p class="pBody">
Specifies the file handling routine to be performed.  The following table lists each op-code and its corresponding operation.  The operations are detailed below:
</p>
<a name="wp1294917"> </a><p class="pBody">
</p><div>
<table border="1" cellpadding="2" cellspacing="2">
  <caption></caption>
  <tr align="left" valign="top">    <th><a name="wp1294886"> </a>
Code

</th>
    <th><a name="wp1294888"> </a>
Operation

</th>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1294890"> </a><p class="pCellBody">
1
</p>
</td>
    <td><a name="wp1294892"> </a><p class="pCellBody">
S-OPEN-FUNCTION
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1294894"> </a><p class="pCellBody">
2
</p>
</td>
    <td><a name="wp1294896"> </a><p class="pCellBody">
S-CLOSE-FUNCTION
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1294898"> </a><p class="pCellBody">
3
</p>
</td>
    <td><a name="wp1294900"> </a><p class="pCellBody">
S-MAKE-FUNCTION
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1294902"> </a><p class="pCellBody">
4
</p>
</td>
    <td><a name="wp1294904"> </a><p class="pCellBody">
S-READ-FUNCTION
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1294906"> </a><p class="pCellBody">
5
</p>
</td>
    <td><a name="wp1294908"> </a><p class="pCellBody">
S-WRITE-FUNCTION
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1294910"> </a><p class="pCellBody">
6
</p>
</td>
    <td><a name="wp1294912"> </a><p class="pCellBody">
S-REWRITE-FUNCTION
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1294914"> </a><p class="pCellBody">
7
</p>
</td>
    <td><a name="wp1294916"> </a><p class="pCellBody">
S-SEEK-FUNCTION
</p>
</td>
</tr>
</table>
</div>
<p class="pBody">
</p>
<a name="wp1294919"> </a><p class="pBody">
<b class="cBold">PARAMETERS</b>     variable depending on op-code
</p>
<a name="wp1294920"> </a><p class="pBody">
The remaining parameters vary depending on the operation selected.  They provide information and hold results for the operations specified.  Parameters may be omitted from those operations that do not require them.  The parameters are detailed in the section titled &quot;Description&quot; below.
</p>
<a name="wp1294921"> </a><h3 class="pHeadingRef">
Description
</h3>
<a name="wp1294922"> </a><p class="pBody">
All parameters passed to S$IO are passed by reference.  This applies even to parameters that are integer values in the corresponding file handling routines.  
</p>
<a name="wp1294923"> </a><p class="pBody">
Except for the MAKE function, S$IO automatically terminates PIC X parameters with a LOW-VALUES byte.  
</p>
<a name="wp1294924"> </a><p class="pBody">
You do not have to specify SYNC for level 01 or level 77 parameters because they are automatically synchronized by ACUCOBOL-GT.
</p>
<a name="wp1294925"> </a><p class="pBody">
The &quot;filesys.def&quot; COPY file contains many useful definitions for use with S$IO.  It contains definitions for the S$IO op-codes as well as the &quot;F-ERRNO&quot; error values.  It also incudes many useful pre-declared variables that are of the proper type and usage.
</p>
<a name="wp1294926"> </a><p class="pNoteHead">
<hr />
<b>Note:  </b>The behavior of this routine is affected by the setting of the FILENAME_SPACES configuration variable that may or may not allow spaces in a file name.  See the documentation on <a  href="gt4h132.htm#wp1035905">FILENAME_SPACES</a> in Appendix H for information about the terminating character for path names.
</p>
<a name="wp1294927"> </a><p class="pNoteEnd">
The runtime configuration variables FILE_PREFIX and FILE_SUFFIX are ignored by the S$IO routine.
<hr />
</p>
<a name="wp1294928"> </a><h3 class="pHeadingRef">
OP-CODES and PARAMETERS
</h3>
<a name="wp1294929"> </a><h3 class="pHeadingRef">
S-OPEN-FUNCTION (op-code 1)
</h3>
<a name="wp1294930"> </a><p class="pBody">
This routine opens an existing sequential file.  If it is successful, the value in RETURN-CODE should be moved to a data item that is USAGE HANDLE.  This data item is passed as the open file handle to the other file handling routines.  If it fails, RETURN-CODE is set to a NULL value.
</p>
<a name="wp1294931"> </a><p class="pBody">
The S-OPEN-FUNCTION routine has four required parameters, and three optional parameters: <em class="cEmphasis">name</em>, <em class="cEmphasis">mode</em>, <em class="cEmphasis">recsize</em>, <em class="cEmphasis">type</em>, <em class="cEmphasis">blocking</em>, <em class="cEmphasis">padding</em>, <em class="cEmphasis">pipe_name.</em>
</p>
<a name="wp1294932"> </a><p class="pBody">
<span class="cBoldItalic">Name</span> is the name of the file to open.  It need not be null-terminated.
</p>
<a name="wp1294933"> </a><p class="pBody">
<span class="cBoldItalic">Mode</span> is one of the following values (defined in &quot;filesys.def&quot;):
</p>
<a name="wp1295710"> </a><p class="pBodyRelative">
</p><div>
<table border="0" cellpadding="6" cellspacing="1">
  <caption></caption>
  <tr align="left" valign="top">    <td><a name="wp1295716"> </a><p class="pCellBody">
Finput
</p>
</td>
    <td><a name="wp1295718"> </a><p class="pCellBody">
open for input only
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1295720"> </a><p class="pCellBody">
Foutput
</p>
</td>
    <td><a name="wp1295722"> </a><p class="pCellBody">
open for output only
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1295724"> </a><p class="pCellBody">
Fio
</p>
</td>
    <td><a name="wp1295726"> </a><p class="pCellBody">
open for input and output
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1295728"> </a><p class="pCellBody">
Fextend
</p>
</td>
    <td><a name="wp1295730"> </a><p class="pCellBody">
open for output only (same as Foutput)
</p>
</td>
</tr>
</table>
</div>
<p class="pBodyRelative">
</p>
<a name="wp1294938"> </a><p class="pBody">
&quot;Foutput&quot; does not delete the current file (this behavior differs from the OPEN OUTPUT statement in COBOL).
</p>
<a name="wp1294939"> </a><p class="pNote">
<hr />
<b>Note:  </b>This routine only opens files that already exist.  If the file does not exist, the routine fails, even when opening with mode &quot;Foutput&quot;.
<hr />
</p>
<a name="wp1294940"> </a><p class="pBody">
Mode may furthermore have one of the following flags added to it to indicate file locking options (defined in &quot;filesys.def&quot;):
</p>
<a name="wp1295731"> </a><p class="pBodyRelative">
</p><div>
<table border="0" cellpadding="6" cellspacing="1">
  <caption></caption>
  <tr align="left" valign="top">    <td><a name="wp1295737"> </a><p class="pCellBody">
Fread_lock
</p>
</td>
    <td><a name="wp1295739"> </a><p class="pCellBody">
locks file against other updaters
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1295741"> </a><p class="pCellBody">
Fwrite_lock
</p>
</td>
    <td><a name="wp1295743"> </a><p class="pCellBody">
locks file against all others
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1295745"> </a><p class="pCellBody">
Fmass_update
</p>
</td>
    <td><a name="wp1295747"> </a><p class="pCellBody">
locks file against all others (same as Fwrite_lock)
</p>
</td>
</tr>
</table>
</div>
<p class="pBodyRelative">
</p>
<a name="wp1294945"> </a><p class="pBody">
If &quot;Fmass_update&quot; is used,  the file system is directed to emphasize speed of updates over file security.
</p>
<a name="wp1294946"> </a><p class="pBody">
Additionally, &quot;Fmulti_lock&quot; may be added to <em class="cEmphasis">mode</em> to request that more than one record lock be maintained in the file by this process.  If this option is not specified, then any I/O operation on the file will first release any currently locked record.  This results in only one record lock being set in the file at any time.  When this option is used, locked records are released only when the file is closed or when the UNLOCK routine is called.
</p>
<a name="wp1294947"> </a><p class="pBody">
<span class="cBoldItalic">Recsize</span> is the maximum size of each record.  This must be known at open time.
</p>
<a name="wp1294948"> </a><p class="pBody">
<span class="cBoldItalic">Type</span> is the type of sequential file, and is one of the following values (defined in &quot;filesys.def&quot;):
</p>
<a name="wp1295750"> </a><p class="pBodyRelative">
</p><div>
<table border="0" cellpadding="6" cellspacing="1">
  <caption></caption>
  <tr align="left" valign="top">    <td><a name="wp1295756"> </a><p class="pCellBody">
S-FIXED
</p>
</td>
    <td><a name="wp1295758"> </a><p class="pCellBody">
fixed record binary sequential file
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1295760"> </a><p class="pCellBody">
S-VAR-COUNT
</p>
</td>
    <td><a name="wp1295762"> </a><p class="pCellBody">
variable record length binary sequential file
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1295764"> </a><p class="pCellBody">
S-LINE
</p>
</td>
    <td><a name="wp1295766"> </a><p class="pCellBody">
line sequential file
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1295768"> </a><p class="pCellBody">
S-PRINT
</p>
</td>
    <td><a name="wp1295770"> </a><p class="pCellBody">
line sequential file
</p>
</td>
</tr>
</table>
</div>
<p class="pBodyRelative">
</p>
<a name="wp1294953"> </a><p class="pBody">
<span class="cBoldItalic">Blocking</span> is the size of a block, in bytes.  This parameter is optional and defaults to 0, meaning that a block is the size of a record.
</p>
<a name="wp1294954"> </a><p class="pBody">
<span class="cBoldItalic">Padding</span> is the value of the pad character for filling short blocks.  This parameter is optional and defaults to 0, meaning that any short blocks are padded with a binary 0 value.
</p>
<a name="wp1294955"> </a><p class="pBody">
<span class="cBoldItalic">Pipe-name</span> is the name of the pipe to open instead of a file.  This parameter is optional.  It only has an effect on UNIX machines.
</p>
<a name="wp1294956"> </a><h3 class="pHeadingRef">
S-CLOSE-FUNCTION (op-code 2)
</h3>
<a name="wp1294957"> </a><p class="pBody">
This routine closes an open file.  It also removes currently held locks on the file.  S-CLOSE-FUNCTION has only one parameter, <em class="cEmphasis">f</em>, a file handle returned by the S-OPEN-FUNCTION.  For some file systems, it is possible that S-CLOSE-FUNCTION will write additional records that had been previously buffered by the system.  For this reason, it is possible that a &quot;disk full&quot; condition can occur.
</p>
<a name="wp1294958"> </a><h3 class="pHeadingRef">
S-MAKE-FUNCTION (op-code 3)
</h3>
<a name="wp1294959"> </a><p class="pBody">
This routine creates a new sequential file.  It will overwrite any existing file of the same name.  However, it will not overwrite a file that is currently in use.  If the file is in use, the error E_FILE_LOCKED is returned.  
</p>
<a name="wp1294960"> </a><p class="pBody">
This routine does not automatically terminate its parameters with LOW-VALUES.  You must ensure that its parameters are correctly terminated.
</p>
<a name="wp1294961"> </a><p class="pBody">
The S-MAKE-FUNCTION routine takes two parameters: <em class="cEmphasis">name</em> and <em class="cEmphasis">l_parms</em>.
</p>
<a name="wp1294962"> </a><p class="pBody">
<span class="cBoldItalic">Name</span> contains the name of the file.  The name need not be null-terminated.
</p>
<a name="wp1294963"> </a><p class="pBody">
<span class="cBoldItalic">L-parms</span> is a string that describes various logical characteristics of the file.  The string consists of three numeric fields separated by commas.  The string must be null-terminated.  This parameter is optional.  If it is not specified, the values are not known to the runtime.  The fields are as follows:
</p>
<div class="pSmartList1"><ol type="1" class="pSmartList1">
<a name="wp1294964"> </a><div class="pSmartList1"><li><em class="cEmphasis">Maximum record size.</em>  This is the size in bytes of the largest record to be placed in the file.  This can range from 1 to 67,108,864.</li></div>
<a name="wp1294965"> </a><div class="pSmartList1"><li>The <em class="cEmphasis">file type</em> (accepted values are the same as described in S-OPEN-FUNCTION).  This must be a single byte containing a binary value that indicates the type of the file.</li></div>
<a name="wp1294966"> </a><div class="pSmartList1"><li><em class="cEmphasis">Block size</em>.  This is the size of a block of records.</li></div>
</ol></div>
<a name="wp1294967"> </a><h3 class="pHeadingRef">
S-READ-FUNCTION (op-code 4)
</h3>
<a name="wp1294968"> </a><p class="pBody">
This routine reads the next record in the sequence of records.  The S-READ-FUNCTION routine has two parameters, <em class="cEmphasis">f</em> and <em class="cEmphasis">record</em>.  
</p>
<a name="wp1294969"> </a><p class="pBody">
<span class="cBoldItalic">F</span> must be a valid file handle returned by S-OPEN-FUNCTION.  
</p>
<a name="wp1294970"> </a><p class="pBody">
<span class="cBoldItalic">Record</span> points to the area to hold the record read.
</p>
<a name="wp1294971"> </a><p class="pBody">
If S-READ-FUNCTION succeeds, RETURN-CODE is set to the size of the record read, plus one.  If it fails, RETURN-CODE is set to zero.  However, if the function fails due to the record being locked, the file pointer is set to the locked record.
</p>
<a name="wp1294972"> </a><p class="pBody">
Records read in a file open for input only are not locked.  Furthermore, most file systems do not block the reading of locked records in a file open for input (this feature depends on the host file system - not all support it).  Records read from a file open for I/O are automatically locked unless the external variable &quot;f-no-lock&quot; is set to a non-zero value, in which case they are treated in the same manner as files open for input.
</p>
<a name="wp1294973"> </a><h3 class="pHeadingRef">
S-WRITE-FUNCTION (op-code 5)
</h3>
<a name="wp1294974"> </a><p class="pBody">
This routine adds a new record to the named file.  It has four parameters: <em class="cEmphasis">f</em>, <em class="cEmphasis">record</em>, <em class="cEmphasis">size</em>, and <em class="cEmphasis">cr_cntrl</em>.
</p>
<a name="wp1294975"> </a><p class="pBody">
<span class="cBoldItalic">F</span> must be a valid file handle returned by S-OPEN-FUNCTION.  
</p>
<a name="wp1294976"> </a><p class="pBody">
<span class="cBoldItalic">Record</span> points to the record to add.
</p>
<a name="wp1294977"> </a><p class="pBody">
<span class="cBoldItalic">Size</span> is the size of the record.  If size is zero, then the maximum record size for the file is used.
</p>
<a name="wp1294978"> </a><p class="pBody">
<span class="cBoldItalic">Cr_cntrl</span> is the number of lines to advance before writing the new record.  This is only valid for print files.
</p>
<a name="wp1294979"> </a><p class="pBody">
The S-WRITE-FUNCTION routine does not change the current file position.
</p>
<a name="wp1294980"> </a><h3 class="pHeadingRef">
S-REWRITE-FUNCTION (op-code 6)
</h3>
<a name="wp1294981"> </a><p class="pBody">
This routine replaces an existing record in the file.  It has three parameters: <em class="cEmphasis">f</em>, <em class="cEmphasis">record</em>, and <em class="cEmphasis">size</em>.
</p>
<a name="wp1294982"> </a><p class="pBody">
<span class="cBoldItalic">F</span> must be a valid file handle returned by S-OPEN-FUNCTION.  
</p>
<a name="wp1294983"> </a><p class="pBody">
<span class="cBoldItalic">Record</span> points to the new record to place in the file.   
</p>
<a name="wp1294984"> </a><p class="pBody">
<span class="cBoldItalic">Size</span> is the size of the record.  It may be zero to indicate the maximum record size for the file.  The size of the new record need not match the size of the existing record.
</p>
<a name="wp1294985"> </a><p class="pBody">
The S-REWRITE-FUNCTION routine does not affect the file position.
</p>
<a name="wp1294986"> </a><h3 class="pHeadingRef">
S-SEEK-FUNCTION (op-code 7)
</h3>
<a name="wp1294987"> </a><p class="pBody">
This routine changes the current position of the file for subsequent READs.
</p>
<a name="wp1294988"> </a><p class="pBody">
The only time the runtime supports a seek in a sequential file is 1) to find the last record in order to read the file backwards, and 2) after each READ to seek to the previous record.  <em class="cEmphasis">These are the only uses of SEEK supported by this library.</em>  The file must be locked to ensure that other users of the file don't add to it.  
</p>
<a name="wp1294989"> </a><p class="pBody">
S-SEEK-FUNCTION has three parameters: <em class="cEmphasis">f</em>, <em class="cEmphasis">offset</em> and <em class="cEmphasis">mode</em>.
</p>
<a name="wp1294990"> </a><p class="pBody">
<span class="cBoldItalic">F</span> must be a valid file handle returned by OPEN.
</p>
<a name="wp1294991"> </a><p class="pBody">
<span class="cBoldItalic">Offset</span> is the number of bytes to move from the current file position.  Offset is limited to a 32-bit value.
</p>
<a name="wp1294992"> </a><p class="pBody">
<span class="cBoldItalic">Mode</span> is a flag that specifies the position from which the offset is measured.  A value of zero sets the position at the beginning of the file, regardless of the current position.  A value of one sets the position to the current position.  A value of two sets the position to the end of the file.  Note that offset can be negative value.  
</p>
 </blockquote>

 <hr />

 <table align="left" border="0" cellspacing="0" cellpadding="0">
   <tr>
     <td align="left" width="300">
       <span style="font-size: 12px ; font-weight: bold ; font-family: Arial, Helvetica, sans-serif">
         <a href="http://www.acucorp.com">Acucorp, Inc.</a><br />
       </span>
       <span style="font-size: 10px ; font-family: Arial, Helvetica, sans-serif">
         Voice: 800.262.6585 (U.S.A. and Canada)<br />
         Voice: 858.689.4500<br />
         Fax: 858.689.4550<br />
         Please share your comments on this manual<br />
         or on any Acucorp documentation with the<br />
         <a href="mailto:docfeedback@acucorp.com subject=E-01-DS-060621-ACUCOBOL-GT-7.2">Acucorp Communications Department</a>.<br />
       </span>
     </td>
   </tr>
 </table>

<script type="text/javascript" language="JavaScript1.2">
   <!--
    document.write(WWHRelatedTopicsDivTag() + WWHPopupDivTag());
   // -->
  </script>

 
</body>
</html>
