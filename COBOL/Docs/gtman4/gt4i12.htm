<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />
  <meta http-equiv="Content-Style-Type" content="text/css" />
  <meta name="GENERATOR" content="Quadralay WebWorks Publisher Professional Edition 7.0.5.1025" />
  <meta name="TEMPLATEBASE" content="Acucorp WWH" />
  <meta name="LASTUPDATED" content="06/15/06 14:43:47" />
  <title>CBL_ERROR_PROC Routine</title>
  <link rel="StyleSheet" href="document.css" type="text/css" />
  <link rel="StyleSheet" href="catalog.css" type="text/css" />
<script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/context.js"></script>
  <script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/towwhdir.js"></script>
  <script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/wwhpagef.js"></script>

  <script type="text/javascript" language="JavaScript1.2">
   <!--
    // Set reference to top level help frame
    //
    var  WWHFrame = WWHGetWWHFrame("");
   // -->
  </script>
 </head>

 <body onLoad="WWHUpdate();">

    <a href="../docs.htm" target="acudoc"><img src="images/sbooks.gif" width="70" height="27" border="0" alt="Books" align="right" /></a>
    <span style="font-size: 18px ; font-weight: bold"><font face="Arial, Helvetica, sans-serif">
       ACUCOBOL-GT Appendices <br />
    </font></span>
    <span style="font-size: 14px ; font-weight: bold"><font face="Arial, Helvetica, sans-serif">
       Version 7.2
     </font></span>

 <p />

 <blockquote>
<p class="breadcrumb"><a href="gt4i.htm">Appendix I:  ACUCOBOL-GT Library Routines</a> &gt; <a href="gt4i2.htm">I.1 Library Routines</a> &gt; </p>
<a name="wp1034906"> </a><h2 class="pHeading2">
CBL_ERROR_PROC Routine
</h2>
<a name="wp1034911"> </a><p class="pBody">
CBL_ERROR_PROC installs or removes error procedures to be called automatically if and when the current run unit generates any of certain runtime errors.  This implementation calls error procedures only when a run unit generates what is called an <em class="cEmphasis">intermediate</em> runtime error.  The list of intermediate runtime errors includes:
</p>
<div class="pSmartList1"><ul class="pSmartList1">
<a name="wp1034912"> </a><div class="pSmartList1"><li>&quot;File error #&quot;</li></div>
<a name="wp1034913"> </a><div class="pSmartList1"><li>&quot;File error # on #&quot;</li></div>
<a name="wp1034914"> </a><div class="pSmartList1"><li>&quot;Illegal MERGE&quot;</li></div>
<a name="wp1034915"> </a><div class="pSmartList1"><li>&quot;Illegal RELEASE&quot;</li></div>
<a name="wp1034916"> </a><div class="pSmartList1"><li>&quot;Illegal RETURN&quot;</li></div>
<a name="wp1034917"> </a><div class="pSmartList1"><li>&quot;Illegal SORT&quot;</li></div>
<a name="wp1034918"> </a><div class="pSmartList1"><li>&quot;Index out of bounds&quot;</li></div>
<a name="wp1034919"> </a><div class="pSmartList1"><li>&quot;INSPECT REPLACING size mismatch&quot;</li></div>
<a name="wp1034920"> </a><div class="pSmartList1"><li>&quot;Invalid or missing parameter&quot;</li></div>
<a name="wp1034921"> </a><div class="pSmartList1"><li>&quot;Non-numeric data in numeric field&quot;</li></div>
<a name="wp1034922"> </a><div class="pSmartList1"><li>&quot;Passed USING item smaller than corresponding LINKAGE item&quot;</li></div>
<a name="wp1034923"> </a><div class="pSmartList1"><li>&quot;Program missing or inaccessible&quot;</li></div>
<a name="wp1034924"> </a><div class="pSmartList1"><li>&quot;Reference modifier range error&quot;</li></div>
<a name="wp1034925"> </a><div class="pSmartList1"><li>&quot;Transaction error #&quot;</li></div>
<a name="wp1034926"> </a><div class="pSmartList1"><li>&quot;Transaction error # on #&quot;</li></div>
<a name="wp1034927"> </a><div class="pSmartList1"><li>&quot;Use of a LINKAGE data item not passed by the caller&quot;</li></div>
</ul></div>
<a name="wp1034928"> </a><p class="pBody">
The &quot;#&quot; signs are replaced at run time by error names, numbers, or other information.
</p>
<a name="wp1034929"> </a><h3 class="pHeadingRef">
Usage 
</h3>
<div class="pPreformatted"><pre class="pPreformatted">
CALL &quot;CBL_ERROR_PROC&quot; <a name="wp1034930"> </a>
    USING INSTALL-FLAG PROGRAM-NAME<a name="wp1471930"> </a>
    [RETURNING STATUS-CODE] <a name="wp1034931"> </a>
</pre></div>
<a name="wp1034932"> </a><h3 class="pHeadingRef">
Parameters
</h3>
<a name="wp1034933"> </a><p class="pBody">
<b class="cBold">INSTALL-FLAG</b>   Numeric data item or literal 
</p>
<a name="wp1034934"> </a><p class="pBody">
Zero if the error procedure is to be installed; nonzero if it is to be removed.  
</p>
<a name="wp1034935"> </a><p class="pBody">
<b class="cBold">PROGRAM-NAME</b>   Alphanumeric data item or literal 
</p>
<a name="wp1034936"> </a><p class="pBody">
Name of the error procedure to be installed or removed.  
</p>
<a name="wp1034937"> </a><p class="pBody">
<b class="cBold">STATUS-CODE</b>   Any numeric data item 
</p>
<a name="wp1034938"> </a><p class="pBody">
Always zero.  (It is returned only for Micro Focus compatibility.) 
</p>
<a name="wp1034939"> </a><h3 class="pHeadingRef">
Description 
</h3>
<a name="wp1034940"> </a><p class="pBody">
A run unit can dynamically build a single queue of one or more error procedures to be called if and when the run unit generates any of certain runtime errors.  Not all runtime errors are treated in this way.  Some, such as memory allocation errors, are so severe that the runtime cannot continue and must be aborted.  Others, such as size errors, are handled by ordinary COBOL code.  Runtime errors which call error procedures are called <em class="cEmphasis">intermediate</em> errors.  
</p>
<a name="wp1034941"> </a><p class="pBody">
When an error procedure is installed, it is placed at the beginning of the queue (or moved to the beginning if it is already in the queue).  
</p>
<a name="wp1034942"> </a><p class="pBody">
When an intermediate runtime error occurs, and there are error or exit procedures in the queues, the error procedures in the queue are called, one by one, as though by a CALL statement, in sequential order (the opposite of installation order), with a single PIC X(325) argument containing the text of an appropriate error message.  This error message may contain newline characters and is null-terminated like a C string.  Each procedure is removed from the queue just before it is called.  
</p>
<a name="wp1270341"> </a><p class="pNote">
<hr />
<b>Note:  </b>You can cause the runtime to also include the program name and the address of the program failure in the string passed to the error procedure by setting the INCLUDE_PGM_INFO runtime configuration variable.  See the entry for <a  href="gt4h159.htm#wp1137129">INCLUDE_PGM_INFO</a> in Appendix H. 
<hr />
</p>
<a name="wp1034943"> </a><p class="pBody">
An error procedure must end with an EXIT PROGRAM RETURNING statement which contains an appropriate return value.  If the return value is zero, then subsequent error procedures are removed from the queue and are not called.  
</p>
<a name="wp1034944"> </a><p class="pBody">
After all error procedures are called, the exit procedures, if any, are called.  Then the run unit is terminated.  
</p>
<a name="wp1034945"> </a><p class="pBody">
If an error procedure generates an intermediate runtime error, it is terminated and the remaining error procedures, if any, are called.  Then the exit procedures, if any, are called, and the run unit is terminated.  
</p>
<a name="wp1034946"> </a><p class="pBody">
If an intermediate runtime error occurs when there are no error or exit procedures in the queues, it is handled in the usual way.  In some cases, the error is ignored.  In other cases, the runtime issues an error message and terminates the entire application, not just the run unit which generated the error.  
</p>
<a name="wp1034947"> </a><p class="pNote">
<hr />
<b>Note:  </b>An error procedure may install or remove exit procedures and other error procedures.  This practice is not generally recommended, however, because it may lead to hard-to-predict behaviors resulting in part from the runtime modifications employed in the handling of error and exit procedures.  
<hr />
</p>
<a name="wp1034948"> </a><p class="pBody">
Error procedure names are case-insensitive and must not contain spaces.  
</p>
<a name="wp1034951"> </a><p class="pBody">
To prevent the program from entering an infinite loop or non-terminating condition, the total number of error and exit procedures installed or called is limited to the value of the configuration parameter MAX_ERROR_AND_EXIT_PROCS.  The default value is 64.  Any attempt to exceed this limit aborts the application.  
</p>
 </blockquote>

 <hr />

 <table align="left" border="0" cellspacing="0" cellpadding="0">
   <tr>
     <td align="left" width="300">
       <span style="font-size: 12px ; font-weight: bold ; font-family: Arial, Helvetica, sans-serif">
         <a href="http://www.acucorp.com">Acucorp, Inc.</a><br />
       </span>
       <span style="font-size: 10px ; font-family: Arial, Helvetica, sans-serif">
         Voice: 800.262.6585 (U.S.A. and Canada)<br />
         Voice: 858.689.4500<br />
         Fax: 858.689.4550<br />
         Please share your comments on this manual<br />
         or on any Acucorp documentation with the<br />
         <a href="mailto:docfeedback@acucorp.com subject=E-01-DS-060621-ACUCOBOL-GT-7.2">Acucorp Communications Department</a>.<br />
       </span>
     </td>
   </tr>
 </table>

<script type="text/javascript" language="JavaScript1.2">
   <!--
    document.write(WWHRelatedTopicsDivTag() + WWHPopupDivTag());
   // -->
  </script>

 
</body>
</html>
