<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />
  <meta http-equiv="Content-Style-Type" content="text/css" />
  <meta name="GENERATOR" content="Quadralay WebWorks Publisher Professional Edition 7.0.5.1025" />
  <meta name="TEMPLATEBASE" content="Acucorp WWH" />
  <meta name="LASTUPDATED" content="06/15/06 14:43:47" />
  <title>C$LOCALPRINT Routine</title>
  <link rel="StyleSheet" href="document.css" type="text/css" />
  <link rel="StyleSheet" href="catalog.css" type="text/css" />
<script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/context.js"></script>
  <script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/towwhdir.js"></script>
  <script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/wwhpagef.js"></script>

  <script type="text/javascript" language="JavaScript1.2">
   <!--
    // Set reference to top level help frame
    //
    var  WWHFrame = WWHGetWWHFrame("");
   // -->
  </script>
 </head>

 <body onLoad="WWHUpdate();">

    <a href="../docs.htm" target="acudoc"><img src="images/sbooks.gif" width="70" height="27" border="0" alt="Books" align="right" /></a>
    <span style="font-size: 18px ; font-weight: bold"><font face="Arial, Helvetica, sans-serif">
       ACUCOBOL-GT Appendices <br />
    </font></span>
    <span style="font-size: 14px ; font-weight: bold"><font face="Arial, Helvetica, sans-serif">
       Version 7.2
     </font></span>

 <p />

 <blockquote>
<p class="breadcrumb"><a href="gt4i.htm">Appendix I:  ACUCOBOL-GT Library Routines</a> &gt; <a href="gt4i2.htm">I.1 Library Routines</a> &gt; </p>
<a name="wp1036188"> </a><h2 class="pHeading2">
C$LOCALPRINT Routine
</h2>
<a name="wp1036193"> </a><p class="pBody">
The C$LOCALPRINT routine provides access to the ACUCOBOL-GT window manager's local print mechanism.  This allows the program to write to a printer or other device attached directly to the user's terminal.  One or two USING parameters should be provided.   
</p>
<a name="wp1036194"> </a><h3 class="pHeadingRef">
Usage
</h3>
<div class="pPreformatted"><pre class="pPreformatted">
CALL &quot;C$LOCALPRINT&quot;<a name="wp1036195"> </a>
    USING SOURCE-DATA, LINE-SPACE<a name="wp1036196"> </a>
</pre></div>
<a name="wp1036197"> </a><h3 class="pHeadingRef">
Parameters
</h3>
<a name="wp1036198"> </a><p class="pBody">
<b class="cBold">SOURCE-DATA</b>   PIC X(n)
</p>
<a name="wp1036199"> </a><p class="pBody">
This contains the data that will be sent to the local device.  Any trailing spaces will be removed before the data is sent.  
</p>
<a name="wp1036200"> </a><p class="pBody">
<b class="cBold">LINE-SPACE</b>    Numeric parameter (optional)
</p>
<a name="wp1036201"> </a><p class="pBody">
The second parameter, if specified, determines the line spacing provided by the routine.  Its value is interpreted as follows:
</p>
<a name="wp1036219"> </a><p class="pBody">
</p><div>
<table border="0" cellpadding="6" cellspacing="1">
  <caption></caption>
  <tr align="left" valign="top">    <td><a name="wp1036204"> </a><p class="pCellBody">
0
</p>
</td>
    <td><a name="wp1036206"> </a><p class="pCellBody">
No additional characters are sent after the data
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1036208"> </a><p class="pCellBody">
1
</p>
</td>
    <td><a name="wp1036210"> </a><p class="pCellBody">
A carriage return is sent after the data
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1036212"> </a><p class="pCellBody">
2
</p>
</td>
    <td><a name="wp1036214"> </a><p class="pCellBody">
A carriage return and a line feed are sent after the data
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1036216"> </a><p class="pCellBody">
3
</p>
</td>
    <td><a name="wp1036218"> </a><p class="pCellBody">
A carriage return and a form feed are sent after the data
</p>
</td>
</tr>
</table>
</div>
<p class="pBody">
</p>
<a name="wp1036220"> </a><p class="pBody">
If the second parameter is not supplied, then it is treated as if it were a &quot;2&quot;.  
</p>
<a name="wp1036221"> </a><p class="pBody">
You may add either or both of the following values to the value contained in the second parameter:
</p>
<a name="wp1036231"> </a><p class="pBody">
</p><div>
<table border="0" cellpadding="6" cellspacing="1">
  <caption></caption>
  <tr align="left" valign="top">    <td><a name="wp1036224"> </a><p class="pCellBody">
+10
</p>
</td>
    <td><a name="wp1036226"> </a><p class="pCellBody">
Any line-advancing control sequences are sent before the data instead of after.
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1036228"> </a><p class="pCellBody">
+20
</p>
</td>
    <td><a name="wp1036230"> </a><p class="pCellBody">
Inhibits the sending of the disable-printer terminal sequence after sending the data.
</p>
</td>
</tr>
</table>
</div>
<p class="pBody">
</p>
<a name="wp1036232"> </a><p class="pBody">
For example, a second parameter value of &quot;12&quot; causes the printer to be advanced one line prior to sending the data (since a value of &quot;2&quot; causes the printer to advance one line after sending the data).  
</p>
<a name="wp1036233"> </a><p class="pBody">
A second parameter value of &quot;8&quot; (with a dummy first parameter) causes the disable-print sequence to be sent to the terminal on its own.
</p>
<a name="wp1036234"> </a><h3 class="pHeadingRef">
Description
</h3>
<a name="wp1036235"> </a><p class="pBody">
When this routine executes, it performs the following steps in this order: 
</p>
<div class="pSmartList1"><ol type="1" class="pSmartList1">
<a name="wp1036236"> </a><div class="pSmartList1"><li>The terminal's Enable Print command is sent.  This causes subsequent data sent to the terminal to be also sent to the attached device.</li></div>
<a name="wp1036237"> </a><div class="pSmartList1"><li>The data specified in the first USING parameter (less trailing spaces) is sent to the terminal.  No interpretation or modification is done to this data.</li></div>
<a name="wp1036238"> </a><div class="pSmartList1"><li>The appropriate line spacing characters specified by the second USING parameter are sent to the terminal.</li></div>
<a name="wp1036239"> </a><div class="pSmartList1"><li>The terminal's Disable Print command is sent.  This turns off the pass-through mode.</li></div>
<a name="wp1036240"> </a><div class="pSmartList1"><li>The current cursor location is set to the home position of the current window.  The window manager is instructed to define the current screen state as &quot;undefined&quot;.  This causes the window manager to behave correctly if the terminal's pass-through mode is destructive to the screen (e.g., characters appear on the screen as well as being sent to the attached device).  </li></div>
</ol></div>
<a name="wp1036241"> </a><p class="pNote">
<hr />
<b>Note:  </b>Some terminals handle pass-through printing in an invisible fashion (the characters go to the printer, but do not show up on the screen), while others echo the characters onto the screen too.  For maximum portability, you should assume that a call to C$LOCALPRINT will cause garbage to appear on the screen and should arrange to repaint the screen when you are finished with the local device.
<hr />
</p>
<a name="wp1036242"> </a><p class="pBody">
The routine assumes that the attached terminal is able to do pass-through printing.  You may use the ACCEPT FROM TERMINAL-INFO verb to test for this ability beforehand if you desire.  You need to ensure that any communication restrictions imposed by the terminal are followed.  For example, some terminals require that the attached device run at the same baud rate as the terminal.
</p>
<a name="wp1036243"> </a><p class="pBody">
With programs that use the Window's console (DOS-box) runtime, the C$LOCALPRINT routine simulates local printing via the following procedure.  When the routine is called for the first time, the runtime system opens a file to which it writes the passed data.  The name of the file is determined by the setting of the environment variable LPRINTER.  Usually this will be set to the name of a device such as PRN, LPT1, and so forth.  If this variable is not set, then the default name PRN is used.  Serial ports are <em class="cEmphasis">not</em> supported.
</p>
<a name="wp1036244"> </a><p class="pBody">
Once this file is open, it is not closed by the runtime system.  If you need to close it, you can call C$LOCALPRINT with a dummy first parameter and a second parameter of &quot;9&quot;.  Non-Windows console runtimes ignore this form of the call.  Also note that no error checking is possible.  If the runtime cannot open the LPRINTER file, it prints an error message and stops.
</p>
 </blockquote>

 <hr />

 <table align="left" border="0" cellspacing="0" cellpadding="0">
   <tr>
     <td align="left" width="300">
       <span style="font-size: 12px ; font-weight: bold ; font-family: Arial, Helvetica, sans-serif">
         <a href="http://www.acucorp.com">Acucorp, Inc.</a><br />
       </span>
       <span style="font-size: 10px ; font-family: Arial, Helvetica, sans-serif">
         Voice: 800.262.6585 (U.S.A. and Canada)<br />
         Voice: 858.689.4500<br />
         Fax: 858.689.4550<br />
         Please share your comments on this manual<br />
         or on any Acucorp documentation with the<br />
         <a href="mailto:docfeedback@acucorp.com subject=E-01-DS-060621-ACUCOBOL-GT-7.2">Acucorp Communications Department</a>.<br />
       </span>
     </td>
   </tr>
 </table>

<script type="text/javascript" language="JavaScript1.2">
   <!--
    document.write(WWHRelatedTopicsDivTag() + WWHPopupDivTag());
   // -->
  </script>

 
</body>
</html>
