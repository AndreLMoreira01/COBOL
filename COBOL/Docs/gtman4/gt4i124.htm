<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />
  <meta http-equiv="Content-Style-Type" content="text/css" />
  <meta name="GENERATOR" content="Quadralay WebWorks Publisher Professional Edition 7.0.5.1025" />
  <meta name="TEMPLATEBASE" content="Acucorp WWH" />
  <meta name="LASTUPDATED" content="06/15/06 14:43:47" />
  <title>$WINHELP Routine</title>
  <link rel="StyleSheet" href="document.css" type="text/css" />
  <link rel="StyleSheet" href="catalog.css" type="text/css" />
<script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/context.js"></script>
  <script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/towwhdir.js"></script>
  <script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/wwhpagef.js"></script>

  <script type="text/javascript" language="JavaScript1.2">
   <!--
    // Set reference to top level help frame
    //
    var  WWHFrame = WWHGetWWHFrame("");
   // -->
  </script>
 </head>

 <body onLoad="WWHUpdate();">

    <a href="../docs.htm" target="acudoc"><img src="images/sbooks.gif" width="70" height="27" border="0" alt="Books" align="right" /></a>
    <span style="font-size: 18px ; font-weight: bold"><font face="Arial, Helvetica, sans-serif">
       ACUCOBOL-GT Appendices <br />
    </font></span>
    <span style="font-size: 14px ; font-weight: bold"><font face="Arial, Helvetica, sans-serif">
       Version 7.2
     </font></span>

 <p />

 <blockquote>
<p class="breadcrumb"><a href="gt4i.htm">Appendix I:  ACUCOBOL-GT Library Routines</a> &gt; <a href="gt4i2.htm">I.1 Library Routines</a> &gt; </p>
<a name="wp1038702"> </a><h2 class="pHeading2">
$WINHELP Routine
</h2>
<a name="wp1038708"> </a><p class="pBody">
If you have the Microsoft Windows Software Development Kit (SDK), you can access help files created with the SDK help compiler by calling the $WINHELP library routine.  You can also access compiled HTML files that have the &quot;.chm&quot; extension.  This is a support routine for Windows and Windows NT, and is not portable to other systems.  
</p>
<a name="wp1038710"> </a><p class="pBody">
$WINHELP provides a direct interface to the Microsoft &quot;WinHelp&quot; library routine for files created with the SDK help compiler.  This routine allows you to perform various functions using Microsoft Help.  Normally, you would use this to allow the user to browse help information associated with your application.   
</p>
<a name="wp1038711"> </a><p class="pBody">
For compiled HTML files whose names end with the &quot;.chm&quot; extension, $WINHELP invokes the Microsoft HTML Help Viewer application &quot;hh.exe.&quot;
</p>
<a name="wp1038713"> </a><h3 class="pHeadingRef">
Usage
</h3>
<div class="pPreformatted"><pre class="pPreformatted">
CALL &quot;$WINHELP&quot;<a name="wp1038714"> </a>
    USING HELP-FILE, OP-CODE, PARAM-VAL<a name="wp1038715"> </a>
</pre></div>
<a name="wp1038717"> </a><h3 class="pHeadingRef">
Parameters
</h3>
<a name="wp1038718"> </a><p class="pBody">
<b class="cBold">HELP-FILE </b>  PIC X(n)
</p>
<a name="wp1038719"> </a><p class="pBody">
This is the file name of the help file.
</p>
<a name="wp1038720"> </a><p class="pBody">
<b class="cBold">OP-CODE   </b>Numeric parameter
</p>
<a name="wp1038721"> </a><p class="pBody">
This value indicates the desired operation.
</p>
<a name="wp1038722"> </a><p class="pBody">
<b class="cBold">PARAM-VAL   </b>Type depends on op-code
</p>
<a name="wp1038723"> </a><p class="pBody">
This is an operation-dependent parameter.  It may be omitted for several operations.
</p>
<a name="wp1083747"> </a><p class="pBody">
The behavior of this routine is affected by the FILENAME_SPACES configuration variable. The value of  FILENAME_SPACES determines whether spaces are allowed in a file name.  See the entry for FILENAME_SPACES in Appendix&#160;H for more information.
</p>
<a name="wp1038726"> </a><h3 class="pHeadingRef">
HLP Files
</h3>
<a name="wp1038730"> </a><p class="pBody">
Microsoft Help allows the user to search through &quot;.HLP&quot; files in a variety of ways.  In order to use Microsoft Help in your application, you must create one or more &quot;.HLP&quot; files.  To do this, you need a program that converts text files into <em class="cEmphasis">help</em> files.  This is called a <em class="cEmphasis">help compiler</em>.  You can find a help compiler (called &quot;hc&quot;) and instructions on its use in the Microsoft Windows SDK.  You will also find information on how to construct the text files that get compiled into help files.    
</p>
<a name="wp1038731"> </a><h3 class="pHeadingRef">
WinHelp
</h3>
<a name="wp1038732"> </a><p class="pBody">
After you've created help files, use the WinHelp library routine to interact with the Microsoft Help application that is bundled with Windows.  This allows you to perform a variety of functions such as opening one of your help files and directing Help to a particular topic.  WinHelp is fully explained in the SDK documents.
</p>
<a name="wp1038733"> </a><p class="pBody">
$WINHELP provides a direct interface to WinHelp.  The advantages to using $WINHELP are:
</p>
<div class="pSmartList1"><ul class="pSmartList1">
<a name="wp1038734"> </a><div class="pSmartList1"><li>you don't have to relink the runtime system </li></div>
<a name="wp1038735"> </a><div class="pSmartList1"><li>you use a simplified calling sequence </li></div>
</ul></div>
<a name="wp1038736"> </a><p class="pBody">
WinHelp takes four parameters: the handle of the main application window, the name of the help file, an operation code and an operation-dependent parameter.  $WINHELP takes similar parameters, but with the following differences:
</p>
<div class="pSmartList1"><ul class="pSmartList1">
<a name="wp1038737"> </a><div class="pSmartList1"><li>You do not pass the window-handle parameter.  $WINHELP always supplies this parameter using the main ACUCOBOL-GT window.  Thus, you pass (at most) three parameters to $WINHELP instead of the four that are passed to WinHelp.</li></div>
<a name="wp1038738"> </a><div class="pSmartList1"><li>If the operation-dependent parameter is not needed, you may omit it.  In this case, $WINHELP will pass a value of zero to WinHelp.</li></div>
<a name="wp1038739"> </a><div class="pSmartList1"><li>All parameters are passed BY REFERENCE (the default for COBOL).  </li></div>
</ul></div>
<a name="wp1038740"> </a><p class="pBody">
In summary, you pass either two or three parameters to $WINHELP.  These are (in order):
</p>
<div class="pSmartList1"><ol type="1" class="pSmartList1">
<a name="wp1038741"> </a><div class="pSmartList1"><li>the filename of the help file</li></div>
<a name="wp1038742"> </a><div class="pSmartList1"><li>the desired operation code</li></div>
<a name="wp1038743"> </a><div class="pSmartList1"><li>an operation-dependent parameter (which can be omitted)</li></div>
</ol></div>
<a name="wp1038746"> </a><p class="pBody">
As a convenience, the COBOL declarations for the operation codes can be found in the file &quot;winhelp.def&quot;.  The operation codes found there exactly correspond to the operation codes documented for WinHelp in the SDK.
</p>
<a name="wp1180696"> </a><h3 class="pHeadingRef">
Commonly Used Operations
</h3>
<a name="wp1180697"> </a><p class="pBody">
Most of the operation codes are used to manage context-sensitive help.  For more information about ACUCOBOL-GT support for context-sensitive help, see Chapter 10 in Book 2, <em class="cEmphasis">User Interface Programming</em>.  For a simple, context-<em class="cEmphasis">independent</em> help, you will typically use just the following operations:
</p>
<a name="wp1177204"> </a><p class="pBody">
<b class="cBold">HELP-CONTENTS</b> -- Use this operation to call up the table of contents to your help file.  You do not use the third parameter for this call.  
</p>
<a name="wp1038755"> </a><p class="pBody">
<b class="cBold">HELP-PARTIALKEY</b> -- Use this operation to bring up the keyword-search window.  The third parameter should be the entire or partial keyword you want to find.  Typically, this will be set to LOW-VALUES to allow key searches throughout the keyword list.  One easy way to do this is to use &quot;x'00'&quot; as the third parameter.  
</p>
<a name="wp1038760"> </a><p class="pBody">
<b class="cBold">HELP-HELPONHELP -- </b>Calls up Help's own help file.  The third parameter is not used.  
</p>
<a name="wp1038765"> </a><p class="pBody">
<b class="cBold">HELP-QUIT</b> -- Use this to exit the Help application.  Microsoft requires that each application using Help logs out when it is done (if it doesn't, then Help keeps running after the application has quit).  Note that $WINHELP tracks each help file used and automatically logs out each one when the runtime shuts down.  Because of this, you need to use HELP-QUIT only if you want to shut down Help prior to exiting your application.
</p>
<a name="wp1038769"> </a><p class="pBody">
The help system provided with the ACUCOBOL-GT debugger uses these calls.  The debugger presents three options to the user: &quot;Contents&quot;, &quot;Search&quot;, and &quot;Help on Help&quot;.  The COBOL code that corresponds to these cases is:
</p>
<div class="pPreformatted"><pre class="pPreformatted">
     evaluate menu-selection<a name="wp1038770"> </a>
        when menu-contents<a name="wp1038771"> </a>
           call &quot;$winhelp&quot; using<a name="wp1038772"> </a>
           &quot;acudebug.hlp&quot;, <a name="wp1038773"> </a>
           help-contents<a name="wp1038774"> </a>
<a name="wp1038775"> </a>
        when menu-search<a name="wp1038776"> </a>
           call &quot;$winhelp&quot; using<a name="wp1038777"> </a>
           &quot;acudebug.hlp&quot;, <a name="wp1038778"> </a>
           help-partialkey, x&quot;00&quot;<a name="wp1038779"> </a>
<a name="wp1038780"> </a>
        when menu-help-on-help<a name="wp1038781"> </a>
           call &quot;$winhelp&quot; using <a name="wp1038782"> </a>
           &quot;acudebug.hlp&quot;, <a name="wp1038783"> </a>
           help-helponhelp<a name="wp1038784"> </a>
     end-evaluate.<a name="wp1038785"> </a>
</pre></div>
<a name="wp1038786"> </a><p class="pBody">
This is all that's required to provide a simple help system.  For information on creating a context-sensitive help system, see the SDK documentation.
</p>
<a name="wp1038787"> </a><h3 class="pHeadingRef">
CHM Files
</h3>
<a name="wp1038790"> </a><p class="pBody">
Microsoft makes an online help system called HTML Help.  HTML Help uses the underlying components of Microsoft Internet Explorer to display help content.  HTML Help supports HTML, ActiveX, Java, scripting (JavaScript and Microsoft Visual Basic Script), and HTML image formats (.jpeg, .gif, .png).
</p>
<a name="wp1038791"> </a><p class="pBody">
To create online help for your application, use the authoring tool in HTML Help called HTML Help Workshop (HHW).  HHW will help you create a compiled HTML file that ends with the &quot;.chm&quot; extension.  The &quot;Official Microsoft Help Authoring Kit&quot; from Microsoft Press has more information about help authoring.  Contact Microsoft for more information about compiled HTML files. 
</p>
<a name="wp1038792"> </a><p class="pBody">
$WINHELP will automatically detect the &quot;.chm&quot; file extension and invoke the Microsoft HTML Help Viewer application (hh.exe) to access the file.  Only two operation codes are supported, HELP-CONTENTS and HELP-CONTEXT.  When the operation code is HELP-CONTENTS, $WINHELP simply passes the specified compiled HTML help file name as a command line argument to hh.exe.  When the second parameter to $WINHELP, the operation code, is HELP-CONTEXT, $WINHELP constructs a command line using the following template:
</p>
<div class="pPreformattedRelative"><pre class="pPreformattedRelative">
hh.exe -mapid context_id help_file<a name="wp1038793"> </a>
</pre></div>
<a name="wp1038794"> </a><p class="pBody">
where &quot;help_file&quot; is the first parameter to $WINHELP and &quot;context_id&quot; is the third parameter to $WINHELP.  For example, the COBOL call:
</p>
<div class="pPreformattedRelative"><pre class="pPreformattedRelative">
CALL &quot;$WINHELP&quot; USING &quot;c:\mydir\myhelp.chm&quot;, 
HELP-CONTENTS<a name="wp1038795"> </a>
</pre></div>
<a name="wp1038796"> </a><p class="pBody">
translates to the system command line:
</p>
<div class="pPreformattedRelative"><pre class="pPreformattedRelative">
hh c:\mydir\myhelp.chm<a name="wp1038797"> </a>
</pre></div>
<a name="wp1038798"> </a><p class="pBody">
and
</p>
<div class="pPreformattedRelative"><pre class="pPreformattedRelative">
CALL &quot;$WINHELP&quot; USING &quot;c:\mydir\myhelp.chm&quot;, <a name="wp1038799"> </a>
    HELP-CONTEXT, 72<a name="wp1038800"> </a>
</pre></div>
<a name="wp1038801"> </a><p class="pBody">
translates to:
</p>
<div class="pPreformattedRelative"><pre class="pPreformattedRelative">
hh -mapid 72 c:\mydir\myhelp.chm<a name="wp1038802"> </a>
</pre></div>
 </blockquote>

 <hr />

 <table align="left" border="0" cellspacing="0" cellpadding="0">
   <tr>
     <td align="left" width="300">
       <span style="font-size: 12px ; font-weight: bold ; font-family: Arial, Helvetica, sans-serif">
         <a href="http://www.acucorp.com">Acucorp, Inc.</a><br />
       </span>
       <span style="font-size: 10px ; font-family: Arial, Helvetica, sans-serif">
         Voice: 800.262.6585 (U.S.A. and Canada)<br />
         Voice: 858.689.4500<br />
         Fax: 858.689.4550<br />
         Please share your comments on this manual<br />
         or on any Acucorp documentation with the<br />
         <a href="mailto:docfeedback@acucorp.com subject=E-01-DS-060621-ACUCOBOL-GT-7.2">Acucorp Communications Department</a>.<br />
       </span>
     </td>
   </tr>
 </table>

<script type="text/javascript" language="JavaScript1.2">
   <!--
    document.write(WWHRelatedTopicsDivTag() + WWHPopupDivTag());
   // -->
  </script>

 
</body>
</html>
