<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />
  <meta http-equiv="Content-Style-Type" content="text/css" />
  <meta name="GENERATOR" content="Quadralay WebWorks Publisher Professional Edition 7.0.5.1025" />
  <meta name="TEMPLATEBASE" content="Acucorp WWH" />
  <meta name="LASTUPDATED" content="06/14/06 08:20:56" />
  <title>2.1.13  Miscellaneous Options</title>
  <link rel="StyleSheet" href="document.css" type="text/css" />
  <link rel="StyleSheet" href="catalog.css" type="text/css" />
<script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/context.js"></script>
  <script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/towwhdir.js"></script>
  <script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/wwhpagef.js"></script>

  <script type="text/javascript" language="JavaScript1.2">
   <!--
    // Set reference to top level help frame
    //
    var  WWHFrame = WWHGetWWHFrame("");
   // -->
  </script>
 </head>

 <body onLoad="WWHUpdate();">

    <a href="../docs.htm" target="acudoc"><img src="images/sbooks.gif" width="70" height="27" border="0" alt="Books" align="right" /></a>
    <span style="font-size: 18px ; font-weight: bold"><font face="Arial, Helvetica, sans-serif">
       ACUCOBOL-GT User's Guide <br />
    </font></span>
    <span style="font-size: 14px ; font-weight: bold"><font face="Arial, Helvetica, sans-serif">
       Version 7.2
     </font></span>

 <p />

 <blockquote>
<p class="breadcrumb"><a href="gt12.htm"><br />Chapter 2: Compiler and Runtime</a> &gt; <a href="gt122.htm">2.1 Using the Compiler</a> &gt; </p>
<a name="wp1032959"> </a><h2 class="pHeading2">
2.1.13  Miscellaneous Options
</h2>
<a name="wp1032963"> </a><p class="pBody">
<b class="cBold"></b></p><div>
<table border="0" cellpadding="6" cellspacing="1">
  <caption></caption>
  <tr align="left" valign="top">    <td><a name="wp1109057"> </a><p class="pCellBody">
<b class="cBold">--arithmeticVSC2</b>
</p>
</td>
    <td><a name="wp1109059"> </a><p class="pCellBody">
Causes truncation of intermediate results in arithmetic statements to follow the rules of VS&#160;COBOL&#160;II and COBOL/370. 
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1109061"> </a><p class="pCellBody">
<b style="font-style: normal" class="cBold">--brand&#160;</b><b style="font-style: italic" class="cBold">serial#<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</b>
</p>
</td>
    <td><a name="wp1109063"> </a><p class="pCellBody">
Causes the compiler to embed the specified value into the object file.  <em class="cEmphasis">Serial#</em> is a separate argument of up to 20 characters.  When you specify this option and a value, the COBOL object is associated with the value of <em class="cEmphasis">serial#</em> in such a way that it will execute only with a runtime that has the corresponding serial number.  Attempts to execute the program with a runtime that has a different serial number (either as the initial program, or as a called subprogram) result in the runtime displaying the message &quot;Incorrect serial number&quot; and returning a call error of 28.  To display a runtime's serial number, execute the runtime with the &quot;-v&quot; option.
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1126385"> </a><p class="pCellBody">
 <b class="cBold">--javaclass</b>
</p>
</td>
    <td><a name="wp1126410"> </a><p class="pCellBody">
Generates a &quot;.java&quot; file in addition to a &quot;.acu&quot; file.  The &quot;.java&quot; file has the same prefix as the &quot;.acu&quot; file and is placed in the same directory.  This &quot;.java&quot; file is a Java class that calls the COBOL program being compiled.  Refer to <span style="font-family: Arial, Verdana, Helvetica, sans-serif; font-style: italic">A Guide to Interoperating with ACUCOBOL-GT, </span>section 2.2 for more information on calling COBOL from Java.  
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1126389"> </a><p class="pCellBody">
<b class="cBold">--javamain</b>
</p>
</td>
    <td><a name="wp1126640"> </a><p class="pCellBody">
Generates a &quot;.java&quot; file in addition to a &quot;.acu&quot; file.  The &quot;.java&quot; file has the same prefix as the &quot;.acu&quot; file and is placed in the same directory.  This &quot;.java&quot; file is a Java class with a main method added.  The class calls the COBOL program that is being compiled.  Refer to <span style="font-family: Arial, Verdana, Helvetica, sans-serif; font-style: italic">A Guide to Interoperating with ACUCOBOL-GT, </span>section 2.2 for more information on calling COBOL from Java.   
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1126393"> </a><p class="pCellBody">
<b class="cBold">--netexe</b>
</p>
</td>
    <td><a name="wp1127158"> </a><p class="pCellBody">
Generates a .NET executable file for command line execution.  The name of the executable is the name of the program followed by &quot;.exe.&quot;  All valid ACUCOBOL-GT command line options can be specified with the executable, as well as any of the following Linkage Section parameters:  
</p>
<a name="wp1127159"> </a><p class="pCellBody">
-int: 
</p>
<a name="wp1127160"> </a><p class="pCellBody">
-string: 
</p>
<a name="wp1127161"> </a><p class="pCellBody">
-uint: 
</p>
<a name="wp1127162"> </a><p class="pCellBody">
-short: 
</p>
<a name="wp1127163"> </a><p class="pCellBody">
-ushort: 
</p>
<a name="wp1127164"> </a><p class="pCellBody">
-float: 
</p>
<a name="wp1127165"> </a><p class="pCellBody">
-double: 
</p>
<a name="wp1127166"> </a><p class="pCellBody">
-long: 
</p>
<a name="wp1127167"> </a><p class="pCellBody">
-ulong: 
</p>
<a name="wp1127168"> </a><p class="pCellBody">
-byte:
</p>
<a name="wp1126395"> </a><p class="pCellBody">
See <span style="font-family: Arial, Verdana, Helvetica, sans-serif; font-style: italic">A Guide to Interoperating with ACUCOBOL-GT, </span>section 5.4 for more details.  
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1126397"> </a><p class="pCellBody">
<b class="cBold">--netdll</b>
</p>
</td>
    <td><a name="wp1126399"> </a><p class="pCellBody">
Generates a .NET dynamic link library (DLL) that gives .NET assemblies-both executables and DLLs-a programmatic interface to your COBOL program.  All COBOL entry points are exposed as .NET methods along with ACUCOBOL-GT runtime properties and methods.  This allows .NET programmers to set ACUCOBOL-GT command options and call runtime interfaces from their .NET assembly.  Refer to <span style="font-family: Arial, Verdana, Helvetica, sans-serif; font-style: italic">A Guide to Interoperating with ACUCOBOL-GT, </span>section 5.4 for more details. 
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1109065"> </a><p class="pCellBody">
<b class="cBold">-defines</b>
</p>
</td>
    <td><a name="wp1109067"> </a><p class="pCellBody">
This option must be followed by the name of a file as the next separate argument.  This option causes the compiler to find all level 78s in a COPY file and create equivalent C-language &quot;#define&quot; statements in the specified file.  For more information, see <a  href="gt1221.htm#wp1033095">section 2.1.18, &quot;Help, Version Information, and Communication With C Programs.&quot;</a>
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1129137"> </a><p class="pCellBody">
<b class="cBold">-Qm</b>
</p>
</td>
    <td><a name="wp1129139"> </a><p class="pCellBody">
This option specifies the number of errors the compiler reports before it exits.  The option must be followed by a positive numeric argument, which is the maximum number of errors the compiler reports before it exits.  The default value is &quot;100&quot;.
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1129133"> </a><p class="pCellBody">
<b class="cBold">-Qp</b>
</p>
</td>
    <td><a name="wp1129135"> </a><p class="pCellBody">
This option allows the compiler to skip entire sections of code when it finds an error.  In particular, when this option is used, the compiler skips to the next period (&quot;.&quot;) when an error is detected.  
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1109072"> </a><p class="pCellBody">
<b class="cBold">-Za</b>
</p>
</td>
    <td><a name="wp1109077"> </a><p class="pCellBody">
Causes the compiler to generate code to test array references at runtime.  If an index is used which is out-of-bounds, the runtime system displays an error message showing the index value and the allowed bounds.  (This causes some extra code to be generated and prevents certain table optimizations from occurring, so it should be turned off once a program is fully debugged.)  With this option, the compiler does not re-use previously computed index values.  
</p>
<a name="wp1109078"> </a><p class="pCellBody">
Because subscript overflow is the most common cause of memory access violation errors, adding this option is a good first step when you are looking for the cause of a memory access violation.  (See <a  href="gt1627.htm#wp1032773">section 6.4.1, &quot;Memory Access Violations,&quot;</a> for more details.)
</p>
<a name="wp1109082"> </a><p class="pCellBody">
This option also generates code that performs range checking on reference modification at run time.  Reference modification that creates a data item whose size or leftmost position parameter is out of range of the data item it references causes the runtime to display the error message &quot;Reference modifier range error.&quot;
</p>
<a name="wp1109083"> </a><p class="pCellBody">
This option also causes the runtime to test the LINKAGE items automatically.  When an item defined in the Linkage Section is not referenced in the USING phrase of the Procedure Division statement, the runtime returns an error message.
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1109085"> </a><p class="pCellBody">
<b class="cBold">-Zc</b>
</p>
</td>
    <td><a name="wp1109087"> </a><p class="pCellBody">
This &quot;compact&quot; option causes ACUCOBOL-GT to optimize for smaller code instead of faster code. 
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1109089"> </a><p class="pCellBody">
<b class="cBold">-Zd</b>
</p>
</td>
    <td><a name="wp1109091"> </a><p class="pCellBody">
Although still supported, this option has been replaced by the &quot;-Gd&quot; option.  Both options produce the same results. 
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1109093"> </a><p class="pCellBody">
<b class="cBold">-Zg</b>
</p>
</td>
    <td><a name="wp1109098"> </a><p class="pCellBody">
Enables the use of segmentation (overlays) in the source.  If this option is not used, then section numbers will be ignored. 
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1109100"> </a><p class="pCellBody">
<b class="cBold">-Zi</b>
</p>
</td>
    <td><a name="wp1109104"> </a><p class="pCellBody">
Causes the program to be compiled as if it had the &quot;IS INITIAL PROGRAM&quot; phrase specified in its PROGRAM-ID paragraph.  This can be useful, in some cases, when you are compiling programs that do not contain adequate memory management (no CANCEL verbs, for example). 
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1109106"> </a><p class="pCellBody">
<b class="cBold">-Zl</b>
</p>
</td>
    <td><a name="wp1109111"> </a><p class="pCellBody">
All data items may be larger than 64KB. This option is obsolete. (In versions prior to 6.0, this option caused the compiler to allow data items larger than 64 KB.) See Book 3, <em class="cEmphasis">Reference Manual</em>, section 5.1.6, &quot;Large Data Handling,&quot; for more information. 
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1109113"> </a><p class="pCellBody">
<b class="cBold">-Zm</b>
</p>
</td>
    <td><a name="wp1109115"> </a><p class="pCellBody">
Causes the compiler to generate code that tells the runtime the size of a data item specified in a Format 7 SET statement, as in:
</p>
<div class="pPreformatted"><pre class="pPreformatted">
SET pointer TO ADDRESS OF data-item.<a name="wp1109116"> </a>
</pre></div>
<a name="wp1109117"> </a><p class="pCellBody">
This option supports thin client applications that pass pointers in calls to DLLs on the display host.  For complete information, see section 6.5.6, &quot;Calling Dynamic Link Libraries (DLLs),&quot; in the <em class="cEmphasis">AcuConnect User's Guide</em>.
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1109119"> </a><p class="pCellBody">
<b class="cBold">-Zn</b>
</p>
</td>
    <td><a name="wp1109124"> </a><p class="pCellBody">
This turns off ACUCOBOL-GT's local optimizer.  This is useful primarily to see if the optimizer is introducing errors in the generated object code.  This option also prevents the compiler from re-using previously computed index values. 
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1109126"> </a><p class="pCellBody">
<b class="cBold">-Zo</b>
</p>
</td>
    <td><a name="wp1109128"> </a><p class="pCellBody">
Although still supported, this option has been replaced by the &quot;-Fo&quot; option.  Both options produce the same results. 
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1109130"> </a><p class="pCellBody">
<b class="cBold">-Zr</b>
</p>
</td>
    <td><a name="wp1109134"> </a><p class="pCellBody">
Allows for recursive PERFORM statements.  When this switch is used, the PERFORM verb is modified so that return addresses are stored on a stack.  Only the most recent PERFORM statement has an active return address.  When this option is used, a paragraph under the control of a PERFORM statement may (directly or indirectly) PERFORM itself.  See PERFORM_STACK, in Book 4, Appendix H.  
</p>
<a name="wp1109137"> </a><p class="pCellBody">
This behavior is the default.  For backward compatibility, &quot;-Zr&quot; acts like &quot;-Zr1&quot;.  If you compile for compatibility with Version 3.1 or earlier, recursive PERFORMs are turned <em class="cEmphasis">off</em> by default.  This behavior may affect existing programs that do not compile for earlier compatibility.  Event procedures require the ability to do recursive PERFORMs.
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1109139"> </a><p class="pCellBody">
<b class="cBold">-Zr0</b>
</p>
</td>
    <td><a name="wp1109143"> </a><p class="pCellBody">
This option tells the compiler not to allow recursive PERFORMs.  Event procedures require the ability to do recursive PERFORMs. 
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1109145"> </a><p class="pCellBody">
<b class="cBold">-Zr1</b>
</p>
</td>
    <td><a name="wp1109149"> </a><p class="pCellBody">
This option tells the compiler to allow recursive PERFORMs.  Event procedures require the ability to do recursive PERFORMs. 
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1109151"> </a><p class="pCellBody">
<b class="cBold">-Zs</b>
</p>
</td>
    <td><a name="wp1109155"> </a><p class="pCellBody">
Although still supported, this option has been replaced by the &quot;-Gy&quot; option.  Both options produce the same results. 
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1109157"> </a><p class="pCellBody">
<b class="cBold">-Zw</b>
</p>
</td>
    <td><a name="wp1109161"> </a><p class="pCellBody">
This option prepares a program for import into the AcuBench Screen Designer.  It causes the compiler to mark windows and screen controls with additional information that can be used by the graphical screen import utility or Character-to-GUI Wizard.  Graphical windows imported into the Screen Designer will be more complete if the program is first compiled with this option, and character-based screens converted by the wizard are more likely to contain the proper control type for each field.  Using this option makes your compiled program somewhat larger, so you should use it only when you are importing screens into the workbench.  (See the &quot;-import&quot; and &quot;--char2gui&quot; options in <a  href="gt1223.htm#wp1090230">section 2.2, &quot;Using the Runtime System,&quot;</a> for related information.)  
</p>
<a name="wp1109166"> </a><p class="pCellBody">
You can also use the &quot;-Ml&quot;, &quot;-Mm&quot;, and &quot;-Mu&quot; options to affect the case of the additional information.  This will affect how these items are seen in the Screen Designer, and in your subsequently generated code.  Specifying &quot;-Zw -Ml&quot; will cause the data imported into the Screen Designer to be in lowercase.  The default is uppercase (&quot;-Mu&quot;).  To specify uppercase for the first letter of each word, and lower case for the rest of each word, use &quot;-Mm&quot;.
</p>
<a name="wp1109167"> </a><p class="pCellBody">
If you compile with &quot;-Zw&quot;, your screens may use only literal reference modifications, i.e., &quot;data-item(4:20)&quot;, for any of their data items to be imported into workbench correctly.  Data items that use more complicated variants of reference modification do not import correctly.   For example, &quot;data-item(data-start:data-length)&quot; imports as &quot;data-item(:)&quot;, and you need to insert the correct values into the workbench.
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1109169"> </a><p class="pCellBody">
<b class="cBold">-Zx</b> 
</p>
</td>
    <td><a name="wp1109171"> </a><p class="pCellBody">
Although still supported, this option has been replaced by the &quot;-Fx&quot; option.  Both options produce the same results. 
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1109173"> </a><p class="pCellBody">
<b class="cBold">-Zy</b>
</p>
</td>
    <td><a name="wp1109178"> </a><p class="pCellBody">
This option lets you treat ACCEPT FROM DATE as ACCEPT FROM CENTURY-DATE, and ACCEPT FROM DAY as ACCEPT FROM CENTURY-DAY.  If you use this option, the 4-digit year format will be used for ACCEPT FROM DATE providing that: 
</p>
<a name="wp1109179"> </a><p class="pCellBody">
1. The receiving field is numeric or numeric edited and contains eight or more integer digits; or
</p>
<a name="wp1109180"> </a><p class="pCellBody">
2. The receiving field is not numeric or numeric edited and contains eight or more character positions.
</p>
<a name="wp1109181"> </a><p class="pCellBody">
If neither of the above conditions applies, then ACCEPT FROM DATE will return its normal 6-digit format even if you use &quot;-Zy&quot;.
</p>
<a name="wp1109182"> </a><p class="pCellBody">
ACCEPT FROM DAY works in the same fashion, except that the receiving field must have seven or more digits/positions in order to receive the new format.
</p>
<a name="wp1109183"> </a><p class="pCellBody">
Information on ACCEPT FROM DATE and ACCEPT FROM DAY is located in the <em class="cEmphasis">Reference Manual </em>entry for the ACCEPT verb, Format 3, in section 6.6.
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1109185"> </a><p class="pCellBody">
<b class="cBold">-Zz</b>
</p>
</td>
    <td><a name="wp1109190"> </a><p class="pCellBody">
This option causes spaces in a USAGE DISPLAY numeric item to be treated as the value zero, and non-numeric data to be treated as numeric.  It does this by treating the high-value half of each byte as &quot;3&quot; so as to bring all bytes in the variable within the range of 30 to 3F.  
</p>
<a name="wp1109191"> </a><p class="pCellBody">
&quot;-Zz&quot; must be specified at compile time in order to prevent the optimizer from mis-constructing the program.  Note that this option should be used only if you need it, because it causes less efficient programs to be produced. 
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1109193"> </a><p class="pCellBody">
<b class="cBold">-Z3</b>
</p>
</td>
    <td><a name="wp1109196"> </a><p class="pCellBody">
Causes ACUCOBOL-GT to produce programs that can be run by the Version 1.3 runtime system.  Specifying this will limit several features of later versions.  If you use a restricted feature, you will receive an error message at compile time.  This flag also implies the &quot;-C3&quot; option to ensure compatible behavior of the compiled program (see above). 
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1109198"> </a><p class="pCellBody">
<b class="cBold">-Z4</b>
</p>
</td>
    <td><a name="wp1109200"> </a><p class="pCellBody">
Similar to the &quot;-Z3&quot; option, except that the produced object can be run by the Version 1.4 runtime system.  Implies &quot;-C4&quot;. 
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1109202"> </a><p class="pCellBody">
<b class="cBold">-Z5</b>
</p>
</td>
    <td><a name="wp1109204"> </a><p class="pCellBody">
Causes the compiler to produce object files that can be run by the Version 1.5 runtime system.  This option implies &quot;-C5&quot;. 
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1109206"> </a><p class="pCellBody">
<b class="cBold">-Z20</b>
</p>
</td>
    <td><a name="wp1109208"> </a><p class="pCellBody">
Creates object code that can be run with a Version 2.0 runtime (chart verbs are not supported).  This option implies &quot;-C20&quot;. 
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1109210"> </a><p class="pCellBody">
<b class="cBold">-Z21</b>
</p>
</td>
    <td><a name="wp1109212"> </a><p class="pCellBody">
Creates object code that can be run with a Version 2.1 runtime. 
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1109214"> </a><p class="pCellBody">
<b class="cBold">-Z22</b>
</p>
</td>
    <td><a name="wp1109216"> </a><p class="pCellBody">
Creates object code that can be run with a Version 2.2 runtime. 
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1109218"> </a><p class="pCellBody">
<b class="cBold">-Z23</b>
</p>
</td>
    <td><a name="wp1109220"> </a><p class="pCellBody">
Creates object code that can be run with a Version 2.3 runtime. 
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1109222"> </a><p class="pCellBody">
<b class="cBold">-Z24</b>
</p>
</td>
    <td><a name="wp1109224"> </a><p class="pCellBody">
Creates object code that can be run with a Version 2.4 runtime. 
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1109226"> </a><p class="pCellBody">
<b class="cBold">-Z30</b>
</p>
</td>
    <td><a name="wp1109228"> </a><p class="pCellBody">
Creates object code that can be run with a Version 3.0 runtime. 
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1109230"> </a><p class="pCellBody">
<b class="cBold">-Z31</b>
</p>
</td>
    <td><a name="wp1109232"> </a><p class="pCellBody">
Creates object code that can be run with a Version 3.1 runtime. 
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1109234"> </a><p class="pCellBody">
<b class="cBold">-Z32</b>
</p>
</td>
    <td><a name="wp1109236"> </a><p class="pCellBody">
Creates object code that can be run with a Version 3.2 runtime. 
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1109238"> </a><p class="pCellBody">
<b class="cBold">-Z40</b>
</p>
</td>
    <td><a name="wp1109240"> </a><p class="pCellBody">
Creates object code that can be run with a Version 4.0 runtime. 
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1109242"> </a><p class="pCellBody">
<b class="cBold">-Z41</b>
</p>
</td>
    <td><a name="wp1109244"> </a><p class="pCellBody">
Creates object code that can be run with a Version 4.1 runtime.
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1109246"> </a><p class="pCellBody">
<b class="cBold">-Z42</b>
</p>
</td>
    <td><a name="wp1109248"> </a><p class="pCellBody">
Creates object code that can be run with a Version 4.2 runtime.
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1109250"> </a><p class="pCellBody">
<b class="cBold">-Z43</b>
</p>
</td>
    <td><a name="wp1109252"> </a><p class="pCellBody">
Creates object code that can be run with a Version 4.3 runtime.
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1109254"> </a><p class="pCellBody">
<b class="cBold">-Z50</b>
</p>
</td>
    <td><a name="wp1109256"> </a><p class="pCellBody">
Creates object code that can be run with a Version 5.0 runtime.
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1109258"> </a><p class="pCellBody">
<b class="cBold">-Z51</b>
</p>
</td>
    <td><a name="wp1109260"> </a><p class="pCellBody">
Creates object code that can be run with a Version 5.1 runtime.
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1109262"> </a><p class="pCellBody">
<b class="cBold">-Z52</b>
</p>
</td>
    <td><a name="wp1109264"> </a><p class="pCellBody">
Creates object code that can be run with a Version 5.2 runtime.
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1109266"> </a><p class="pCellBody">
<b class="cBold">-Z60</b>
</p>
</td>
    <td><a name="wp1109268"> </a><p class="pCellBody">
Creates object code that can be run with a Version 6.0 runtime.
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1109270"> </a><p class="pCellBody">
<b class="cBold">-Z61</b>
</p>
</td>
    <td><a name="wp1109272"> </a><p class="pCellBody">
Creates object code that can be run with a Version 6.1 runtime.
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1113176"> </a><p class="pCellBody">
<b class="cBold">-Z62</b>
</p>
</td>
    <td><a name="wp1113178"> </a><p class="pCellBody">
Creates object code that can be run with a Version 6.2 runtime.
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1128601"> </a><p class="pCellBody">
<b class="cBold">-Z70</b>
</p>
</td>
    <td><a name="wp1128620"> </a><p class="pCellBody">
Creates object code that can be run with a Version 7.0 runtime.
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1128597"> </a><p class="pCellBody">
<b class="cBold">-Z71</b>
</p>
</td>
    <td><a name="wp1128674"> </a><p class="pCellBody">
Creates object code that can be run with a Version 7.1 runtime.
</p>
</td>
</tr>
</table>
</div>
<p class="pBody"><b class="cBold"></b>
</p>
 </blockquote>

 <hr />

 <table align="left" border="0" cellspacing="0" cellpadding="0">
   <tr>
     <td align="left" width="300">
       <span style="font-size: 12px ; font-weight: bold ; font-family: Arial, Helvetica, sans-serif">
         <a href="http://www.acucorp.com">Acucorp, Inc.</a><br />
       </span>
       <span style="font-size: 10px ; font-family: Arial, Helvetica, sans-serif">
         Voice: 800.262.6585 (U.S.A. and Canada)<br />
         Voice: 858.689.4500<br />
         Fax: 858.689.4550<br />
         Please share your comments on this manual<br />
         or on any Acucorp documentation with the<br />
         <a href="mailto:docfeedback@acucorp.com">Acucorp Communications Department</a>.<br />
       </span>
     </td>
   </tr>
 </table>

<script type="text/javascript" language="JavaScript1.2">
   <!--
    document.write(WWHRelatedTopicsDivTag() + WWHPopupDivTag());
   // -->
  </script>

 
</body>
</html>
