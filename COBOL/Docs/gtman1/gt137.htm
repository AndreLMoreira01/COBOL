<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />
  <meta http-equiv="Content-Style-Type" content="text/css" />
  <meta name="GENERATOR" content="Quadralay WebWorks Publisher Professional Edition 7.0.5.1025" />
  <meta name="TEMPLATEBASE" content="Acucorp WWH" />
  <meta name="LASTUPDATED" content="06/14/06 08:21:09" />
  <title>3.1.3.2  Other commands   </title>
  <link rel="StyleSheet" href="document.css" type="text/css" />
  <link rel="StyleSheet" href="catalog.css" type="text/css" />
<script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/context.js"></script>
  <script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/towwhdir.js"></script>
  <script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/wwhpagef.js"></script>

  <script type="text/javascript" language="JavaScript1.2">
   <!--
    // Set reference to top level help frame
    //
    var  WWHFrame = WWHGetWWHFrame("");
   // -->
  </script>
 </head>

 <body onLoad="WWHUpdate();">

    <a href="../docs.htm" target="acudoc"><img src="images/sbooks.gif" width="70" height="27" border="0" alt="Books" align="right" /></a>
    <span style="font-size: 18px ; font-weight: bold"><font face="Arial, Helvetica, sans-serif">
       ACUCOBOL-GT User's Guide <br />
    </font></span>
    <span style="font-size: 14px ; font-weight: bold"><font face="Arial, Helvetica, sans-serif">
       Version 7.2
     </font></span>

 <p />

 <blockquote>
<p class="breadcrumb"><a href="gt13.htm"><br />Chapter 3:  Debugger and Utilities</a> &gt; <a href="gt132.htm">3.1 Runtime Debugger</a> &gt; <a href="gt135.htm">3.1.3  Debugger Commands</a> &gt; </p>
<a name="wp1039131"> </a><h2 class="pHeading3">
3.1.3.2  Other commands   
</h2>
<a name="wp1040602"> </a><p class="pBody">
 </p><div>
<table border="1" cellpadding="2" cellspacing="2">
  <caption></caption>
  <tr align="left" valign="top">    <th><a name="wp1039735"> </a>
Command

</th>
    <th><a name="wp1086237"> </a>
Menu Option

</th>
    <th><a name="wp1039737"> </a>
Description 

</th>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1039739"> </a><p class="pCellBody">
!
</p>
</td>
    <td><a name="wp1086239"> </a><p class="pCellBody">
File/Shell
</p>
</td>
    <td><a name="wp1039741"> </a><p class="pCellBody">
Invokes the operating system's command processor, allowing you to enter commands.  
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1111677"> </a><p class="pCellBody">
!!
</p>
</td>
    <td><div class="pPreformatted"><pre class="pPreformatted">
    <a name="wp1111679"> </a>
</pre></div>
</td>
    <td><a name="wp1111681"> </a><p class="pCellBody">
Returns the process ID (PID) for the current runtime execution.
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1039743"> </a><p class="pCellBody">
&lt;<em class="cEmphasis">script-file </em>
</p>
</td>
    <td><a name="wp1086241"> </a><p class="pCellBody">
File/Run<em class="cEmphasis"> </em>Script
</p>
</td>
    <td><a name="wp1039745"> </a><p class="pCellBody">
Runs a script file.  Causes all input (debugger and program) to be read from the script.  Control returns to the keyboard when the script is finished.   
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1039747"> </a><p class="pCellBody">
&gt;
</p>
</td>
    <td><a name="wp1086243"> </a><p class="pCellBody">
File/Stop Recorder
</p>
</td>
    <td><a name="wp1039749"> </a><p class="pCellBody">
Ends your recording.  If you do not end your recording, the script is saved and closed when the debugger closes.
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1039751"> </a><p class="pCellBody">
&gt;<em class="cEmphasis">script-file </em>
</p>
</td>
    <td><a name="wp1086245"> </a><p class="pCellBody">
File/Record<em class="cEmphasis"> </em>Script
</p>
</td>
    <td><a name="wp1039753"> </a><p class="pCellBody">
Turns on a recorder that saves all of your keyboard input and menu selections to a file of your choice.    
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1039755"> </a><p class="pCellBody">
A <em class="cEmphasis">variable </em>
</p>
</td>
    <td><a name="wp1086247"> </a><p class="pCellBody">
Data/Accept
</p>
</td>
    <td><a name="wp1039757"> </a><p class="pCellBody">
Lets you modify the contents of a variable.   
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1039759"> </a><p class="pCellBody">
B 
</p>
</td>
    <td><a name="wp1086249"> </a><p class="pCellBody">
View/Breakpoints 
</p>
<a name="wp1087666"> </a><p class="pCellBody">
Breakpoints/View 
</p>
</td>
    <td><a name="wp1039761"> </a><p class="pCellBody">
Displays a dialog box with all existing breakpoints.  You can add/modify breakpoints from this dialog box.
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1039763"> </a><p class="pCellBody">
B <em class="cEmphasis">address, <br />[skip #] </em>
</p>
</td>
    <td><a name="wp1086251"> </a><p class="pCellBody">
Breakpoints/Set
</p>
</td>
    <td><a name="wp1039765"> </a><p class="pCellBody">
Sets a breakpoint with a skip count.  The breakpoint will not be activated until it has been hit <em class="cEmphasis">skip#</em> times.  
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1039767"> </a><p class="pCellBody">
B <em class="cEmphasis">address, <br />[skip #], [WHEN cond]</em>
</p>
</td>
    <td><a name="wp1086253"> </a><p class="pCellBody">
Breakpoints/Set
</p>
</td>
    <td><a name="wp1039769"> </a><p class="pCellBody">
Sets a breakpoint with a skip count and/or condition.  The breakpoint will not be activated unless <em class="cEmphasis">cond</em> is true <em class="cEmphasis">#</em> times.  
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1039771"> </a><p class="pCellBody">
C <em class="cEmphasis">address </em>
</p>
</td>
    <td><a name="wp1086255"> </a><p class="pCellBody">
Breakpoints/Clear
</p>
</td>
    <td><a name="wp1039773"> </a><p class="pCellBody">
Removes a breakpoint.  You can enter either the breakpoint's paragraph name or hexadecimal address.
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1039775"> </a><p class="pCellBody">
CA 
</p>
</td>
    <td><a name="wp1086257"> </a><p class="pCellBody">
Breakpoints/Clear All
</p>
</td>
    <td><a name="wp1039777"> </a><p class="pCellBody">
Removes all breakpoints. 
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1039779"> </a><p class="pCellBody">
CM <em class="cEmphasis">number</em>
</p>
</td>
    <td><a name="wp1086259"> </a><p class="pCellBody">
Data/Monitor/Clear
</p>
</td>
    <td><a name="wp1039781"> </a><p class="pCellBody">
Clears variable monitor <em class="cEmphasis">number</em>. 
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1039783"> </a><p class="pCellBody">
CMA
</p>
</td>
    <td><a name="wp1086261"> </a><p class="pCellBody">
Data/Monitor/Clear All
</p>
</td>
    <td><a name="wp1039785"> </a><p class="pCellBody">
Clears all variable monitors.
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1039787"> </a><p class="pCellBody">
CWA 
</p>
</td>
    <td><div class="pPreformatted"><pre class="pPreformatted">
    <a name="wp1086263"> </a>
</pre></div>
</td>
    <td><a name="wp1039789"> </a><p class="pCellBody">
Clears all variable watches.
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1039791"> </a><p class="pCellBody">
D <em class="cEmphasis">variable [, X] </em>
</p>
</td>
    <td><a name="wp1086265"> </a><p class="pCellBody">
Data/Display
</p>
</td>
    <td><a name="wp1039793"> </a><p class="pCellBody">
Shows the contents of a variable.  The value is shown in the debugger command window.  If <em class="cEmphasis">X</em> is appended to the display command, the variable is displayed in hexadecimal.
</p>
<a name="wp1087551"> </a><p class="pCellBody">
If the variable is specified by its <em class="cEmphasis">absolute address</em> from a program listing, it must be preceded by &quot;.&quot; (a period)
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1087954"> </a><p class="pCellBody">
D <em class="cEmphasis">variable</em>(<em class="cEmphasis">x</em>:<em class="cEmphasis">y</em>)
</p>
</td>
    <td><div class="pPreformatted"><pre class="pPreformatted">
    <a name="wp1087956"> </a>
</pre></div>
</td>
    <td><a name="wp1087958"> </a><p class="pCellBody">
Display a reference modified variable.  The command &quot;d my-var(2:5)&quot;, for example, displays five characters, starting with the second character of the variable string.
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1039795"> </a><p class="pCellBody">
E 
</p>
</td>
    <td><a name="wp1086269"> </a><p class="pCellBody">
File/Exit<em class="cEmphasis"> </em>Debugger
</p>
</td>
    <td><a name="wp1039797"> </a><p class="pCellBody">
Turns off the debugger while continuing the execution of your program.
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1039799"> </a><p class="pCellBody">
G
</p>
</td>
    <td><a name="wp1086271"> </a><p class="pCellBody">
Run/Continue
</p>
</td>
    <td><a name="wp1039801"> </a><p class="pCellBody">
Resumes execution of your program from its current location.
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1039803"> </a><p class="pCellBody">
G <em class="cEmphasis">address</em>
</p>
</td>
    <td><div class="pPreformatted"><pre class="pPreformatted">
    <a name="wp1086273"> </a>
</pre></div>
</td>
    <td><a name="wp1039805"> </a><p class="pCellBody">
Sets a temporary breakpoint at address, and continues execution.
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1039807"> </a><p class="pCellBody">
GE 
</p>
</td>
    <td><a name="wp1086275"> </a><p class="pCellBody">
Run/Go until Program Exits
</p>
</td>
    <td><a name="wp1039809"> </a><p class="pCellBody">
Runs your program until the current program exits to its calling program.  
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1039811"> </a><p class="pCellBody">
GP 
</p>
</td>
    <td><a name="wp1086277"> </a><p class="pCellBody">
Run/Go until Paragraph Returns
</p>
</td>
    <td><a name="wp1039813"> </a><p class="pCellBody">
Runs your program until the current paragraph returns to the point from which it was performed. 
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1039815"> </a><p class="pCellBody">
H
</p>
</td>
    <td><div class="pPreformatted"><pre class="pPreformatted">
    <a name="wp1086279"> </a>
</pre></div>
</td>
    <td><a name="wp1039817"> </a><p class="pCellBody">
Displays the online help files.
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1039819"> </a><p class="pCellBody">
L  
</p>
</td>
    <td><div class="pPreformatted"><pre class="pPreformatted">
    <a name="wp1086281"> </a>
</pre></div>
</td>
    <td><a name="wp1039821"> </a><p class="pCellBody">
Displays the name of source paragraph or section which is being executed.
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1039823"> </a><p class="pCellBody">
M  
</p>
</td>
    <td><a name="wp1086283"> </a><p class="pCellBody">
View/Monitors 
</p>
<a name="wp1087667"> </a><p class="pCellBody">
Data/Monitor/List
</p>
</td>
    <td><a name="wp1039825"> </a><p class="pCellBody">
Shows all monitored variables and their values.  This also displays a sequence number for each monitor, which is used to clear the monitor.
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1039827"> </a><p class="pCellBody">
M <em class="cEmphasis">variable  </em>
</p>
</td>
    <td><a name="wp1086285"> </a><p class="pCellBody">
Data/Monitor/Set
</p>
</td>
    <td><a name="wp1039829"> </a><p class="pCellBody">
Causes the program to stop whenever the named variable changes its value.  The variable is shown in the Watch Window.
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1039831"> </a><p class="pCellBody">
P [#] 
</p>
</td>
    <td><a name="wp1086287"> </a><p class="pCellBody">
Step Over
</p>
</td>
    <td><a name="wp1039833"> </a><p class="pCellBody">
Steps over the next statement.  With a count, the program will step count times.  Use this command if you want to step through a program following only the original thread.
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1039835"> </a><p class="pCellBody">
Q! 
</p>
</td>
    <td><a name="wp1086289"> </a><p class="pCellBody">
File/Quit
</p>
</td>
    <td><a name="wp1039837"> </a><p class="pCellBody">
Halts your application and exits the debugger.
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1039839"> </a><p class="pCellBody">
R <em class="cEmphasis">script</em>
</p>
</td>
    <td><div class="pPreformatted"><pre class="pPreformatted">
    <a name="wp1086291"> </a>
</pre></div>
</td>
    <td><a name="wp1039841"> </a><p class="pCellBody">
Run a debugging script.  The debugger reads commands from a script (but user-input is gathered normally).
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1039843"> </a><p class="pCellBody">
RA [#] 
</p>
</td>
    <td><a name="wp1086293"> </a><p class="pCellBody">
Run/Run<em class="cEmphasis"> </em>all<em class="cEmphasis"> </em>Threads
</p>
</td>
    <td><a name="wp1039845"> </a><p class="pCellBody">
Toggles or sets the &quot;Run All Threads&quot; setting.<br />If # is 0, only the current thread will run.<br />If # is non-0, all threads will run.
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1039847"> </a><p class="pCellBody">
S [#] 
</p>
</td>
    <td><a name="wp1086295"> </a><p class="pCellBody">
Step Into
</p>
</td>
    <td><a name="wp1039849"> </a><p class="pCellBody">
Executes one statement of your program and then returns control to the debugger.  You may follow the command with the number of steps to take. This command will follow a new thread if one is created.  If you want to follow the original thread, use the &quot;step over&quot; command (P) described above. 
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1039851"> </a><p class="pCellBody">
SA
</p>
</td>
    <td><a name="wp1086297"> </a><p class="pCellBody">
Run/Auto Step 
</p>
</td>
    <td><a name="wp1039853"> </a><p class="pCellBody">
Causes your program to execute &quot;step&quot; commands repeatedly until it reaches the end of the program., or until you stop auto-step by pressing the spacebar while the debugger is active.  Like the &quot;step into&quot; command (S), this follows a new thread if one is created.
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1039855"> </a><p class="pCellBody">
ST [#]
</p>
</td>
    <td><a name="wp1086299"> </a><p class="pCellBody">
Run/Thread
</p>
</td>
    <td><a name="wp1039857"> </a><p class="pCellBody">
Switches to the thread identified by the given number (or the next thread, if no number is given).  The &quot;Run&quot; menu displays the number assigned to each threads. 
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1039859"> </a><p class="pCellBody">
T flush
</p>
</td>
    <td><div class="pPreformatted"><pre class="pPreformatted">
    <a name="wp1086301"> </a>
</pre></div>
</td>
    <td><a name="wp1039861"> </a><p class="pCellBody">
Causes the error file to be flushed to disk after each write, if you are writing to an error file. 
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1039863"> </a><p class="pCellBody">
TF [#]
</p>
</td>
    <td><a name="wp1086303"> </a><p class="pCellBody">
File/Trace Files
</p>
</td>
    <td><a name="wp1039865"> </a><p class="pCellBody">
Turns on file tracing.  The # indicates the level of tracing, from 1 to 9, where 1 is the lowest and 9 is the highest. 
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1039867"> </a><p class="pCellBody">
TP
</p>
</td>
    <td><a name="wp1086305"> </a><p class="pCellBody">
File/Trace<em class="cEmphasis"> </em>Paragraphs
</p>
</td>
    <td><a name="wp1039869"> </a><p class="pCellBody">
Toggles paragraph tracing, which is a listing of all paragraphs and sections entered at runtime. 
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1039871"> </a><p class="pCellBody">
U
</p>
</td>
    <td><a name="wp1086307"> </a><p class="pCellBody">
View/Memory Usage
</p>
</td>
    <td><a name="wp1039873"> </a><p class="pCellBody">
Displays the amount of dynamically allocated memory currently used by the runtime system. 
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1039875"> </a><p class="pCellBody">
V
</p>
</td>
    <td><a name="wp1086309"> </a><p class="pCellBody">
View/Screen
</p>
</td>
    <td><a name="wp1039877"> </a><p class="pCellBody">
Displays your application's current screen.  Press any key or click the left mouse button to return to the debugger.
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1039879"> </a><p class="pCellBody">
WA 
</p>
</td>
    <td><a name="wp1086311"> </a><p class="pCellBody">
Data/Monitor/Set
</p>
</td>
    <td><a name="wp1039881"> </a><p class="pCellBody">
Places a variable in the Watch Window.  The difference between a watched variable and a monitored variable is that watched variables do<em class="cEmphasis"> not</em> cause program execution to halt when they change.
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1039883"> </a><p class="pCellBody">
WS <em class="cEmphasis">number</em>
</p>
</td>
    <td><a name="wp1086313"> </a><p class="pCellBody">
Source/Window<em class="cEmphasis"> </em>Size
</p>
</td>
    <td><a name="wp1039885"> </a><p class="pCellBody">
Specifies the number of lines to show in the command window.  
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1039887"> </a><p class="pCellBody">
WW <em class="cEmphasis">number</em>
</p>
</td>
    <td><a name="wp1086315"> </a><p class="pCellBody">
Source/Watch Size
</p>
</td>
    <td><a name="wp1039889"> </a><p class="pCellBody">
Specifies the number of lines to display in the Watch Window.  The number cannot exceed the number of watched/monitored items.
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1039891"> </a><p class="pCellBody">
<b class="cBold">F8</b>
</p>
</td>
    <td><a name="wp1086317"> </a><p class="pCellBody">
&#160;
</p>
</td>
    <td><a name="wp1039893"> </a><p class="pCellBody">
Recalls the last command entered for editing. 
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1039895"> </a><p class="pCellBody">
<b class="cBold">Ctrl + N</b>
</p>
</td>
    <td><a name="wp1086319"> </a><p class="pCellBody">
&#160;
</p>
</td>
    <td><a name="wp1039897"> </a><p class="pCellBody">
Shows the next line in the Watch Window.
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1039899"> </a><p class="pCellBody">
<b class="cBold">Ctrl + P</b>
</p>
</td>
    <td><a name="wp1086321"> </a><p class="pCellBody">
&#160;
</p>
</td>
    <td><a name="wp1039901"> </a><p class="pCellBody">
Shows the previous line in the Watch Window. 
</p>
</td>
</tr>
</table>
</div>
<p class="pBody">
</p>
 </blockquote>

 <hr />

 <table align="left" border="0" cellspacing="0" cellpadding="0">
   <tr>
     <td align="left" width="300">
       <span style="font-size: 12px ; font-weight: bold ; font-family: Arial, Helvetica, sans-serif">
         <a href="http://www.acucorp.com">Acucorp, Inc.</a><br />
       </span>
       <span style="font-size: 10px ; font-family: Arial, Helvetica, sans-serif">
         Voice: 800.262.6585 (U.S.A. and Canada)<br />
         Voice: 858.689.4500<br />
         Fax: 858.689.4550<br />
         Please share your comments on this manual<br />
         or on any Acucorp documentation with the<br />
         <a href="mailto:docfeedback@acucorp.com">Acucorp Communications Department</a>.<br />
       </span>
     </td>
   </tr>
 </table>

<script type="text/javascript" language="JavaScript1.2">
   <!--
    document.write(WWHRelatedTopicsDivTag() + WWHPopupDivTag());
   // -->
  </script>

 
</body>
</html>
