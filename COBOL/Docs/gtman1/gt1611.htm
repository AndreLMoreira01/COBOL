<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />
  <meta http-equiv="Content-Style-Type" content="text/css" />
  <meta name="GENERATOR" content="Quadralay WebWorks Publisher Professional Edition 7.0.5.1025" />
  <meta name="TEMPLATEBASE" content="Acucorp WWH" />
  <meta name="LASTUPDATED" content="06/14/06 08:22:19" />
  <title>6.1.3.6  Keys</title>
  <link rel="StyleSheet" href="document.css" type="text/css" />
  <link rel="StyleSheet" href="catalog.css" type="text/css" />
<script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/context.js"></script>
  <script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/towwhdir.js"></script>
  <script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/wwhpagef.js"></script>

  <script type="text/javascript" language="JavaScript1.2">
   <!--
    // Set reference to top level help frame
    //
    var  WWHFrame = WWHGetWWHFrame("");
   // -->
  </script>
 </head>

 <body onLoad="WWHUpdate();">

    <a href="../docs.htm" target="acudoc"><img src="images/sbooks.gif" width="70" height="27" border="0" alt="Books" align="right" /></a>
    <span style="font-size: 18px ; font-weight: bold"><font face="Arial, Helvetica, sans-serif">
       ACUCOBOL-GT User's Guide <br />
    </font></span>
    <span style="font-size: 14px ; font-weight: bold"><font face="Arial, Helvetica, sans-serif">
       Version 7.2
     </font></span>

 <p />

 <blockquote>
<p class="breadcrumb"><a href="gt16.htm"><br />Chapter 6:  Programmer's Guide</a> &gt; <a href="gt162.htm">6.1 Handling Files</a> &gt; <a href="gt165.htm">6.1.3  Indexed Files - Vision</a> &gt; </p>
<a name="wp1044829"> </a><h2 class="pHeading3">
6.1.3.6  Keys
</h2>
<a name="wp1032336"> </a><p class="pBody">
Vision files allow up to 120 keys for sorting.  One key is the primary key, all others are alternates.  In a record, a key may not occupy physical space that exceeds the minimum record length.  Thus, a 10-byte key cannot occupy positions 20-29 in a record with a minimum record length of 28.
</p>
<a name="wp1032337"> </a><p class="pBody">
You can specify whether duplicates are allowed for the primary key and for each alternate key.  If duplicates are allowed for a particular key, it is possible to write a record whose key fields contain exactly the same data as the key fields of an existing record.  In this case, the records are stored in chronological order.
</p>
<a name="wp1044999"> </a><p class="pNote">
<hr />
<b>Note:  </b>It is generally recommended that you not allow duplicate primary keys unless the file is processed only in ACCESS SEQUENTIAL mode.  Allowing duplicate primary keys in files that are processed in DYNAMIC and RANDOM access modes, could generate unanticipated results.  The rules that govern the treatment of duplicate primary key values are presented in General Rule 16 of section 4.3.1, &quot;File-Control Paragraph,&quot; in Book 3, <em class="cEmphasis">Reference Manual</em>.
<hr />
</p>
<a name="wp1032338"> </a><p class="pBody">
Every alternate key causes significant additional overhead.  (Keys have the least amount of overhead when duplicates are allowed to occur.)  The keys for a data file are automatically stored in a compressed form.  
</p>
<a name="wp1045061"> </a><p class="pBody">
A key may be a contiguous part of the records, or it may be split into as many as 16 segments.  If you are compiling for compatibility with versions earlier than Vision Version 4, you can have no more than six segments.  You must use Vision Version 4, or later, if you want more than six segments.  
</p>
<a name="wp1045062"> </a><p class="pBody">
Suppose you have the following record structure in a file called AJAX-SUPPLIES: 
</p>
<div class="pPreformatted"><pre class="pPreformatted">
01  CUSTOMER-RECORD.<a name="wp1032343"> </a>
    03  CUSTOMER-NO           PIC 9(6).<a name="wp1032344"> </a>
    03  CUSTOMER-BALANCE      PIC S9(9)V99.<a name="wp1032345"> </a>
    03  CUSTOMER-NAME         PIC X(30).<a name="wp1032346"> </a>
    03  CUSTOMER-CONTACT      PIC X(30).<a name="wp1032347"> </a>
</pre></div>
<a name="wp1032348"> </a><p class="pBody">
To use CUSTOMER-NAME as the primary key, you would use the syntax shown in the last line below:
</p>
<div class="pPreformatted"><pre class="pPreformatted">
FILE-CONTROL.<a name="wp1032349"> </a>
     SELECT AJAX-SUPPLIES<a name="wp1032350"> </a>
     ASSIGN TO DISK &quot;INDEX.DAT&quot;<a name="wp1032351"> </a>
     RECORD KEY IS CUSTOMER-NAME.<a name="wp1032352"> </a>
</pre></div>
<a name="wp1032353"> </a><p class="pBody">
If data elements are contiguous and defined in the order that would be used for sorting, they may be grouped and defined together as a key.  For example, suppose you wanted to use CUSTOMER-BALANCE, CUSTOMER-NAME as an alternate key.  Because these two fields are contiguous and are defined in the same sequence they will be used for sorting, the most efficient way to define the alternate key is to establish a group item that includes both fields.  For example:
</p>
<div class="pPreformatted"><pre class="pPreformatted">
01  CUSTOMER RECORD<a name="wp1032354"> </a>
    03  CUSTOMER-NO               PIC 9(6).<a name="wp1032355"> </a>
    03  CUSTOMER-BALNAME.<a name="wp1032356"> </a>
        05  CUSTOMER-BALANCE      PIC S9(9)V99.<a name="wp1032357"> </a>
        05  CUSTOMER-NAME         PIC X(30).<a name="wp1032358"> </a>
    03  CUSTOMER-CONTACT          PIC X(30).<a name="wp1032359"> </a>
</pre></div>
<a name="wp1032360"> </a><p class="pBody">
Then, to define CUSTOMER-BALNAME as an alternate key, you would use the syntax shown in the last line below: 
</p>
<div class="pPreformatted"><pre class="pPreformatted">
FILE-CONTROL.<a name="wp1032361"> </a>
     SELECT AJAX-SUPPLIES<a name="wp1032362"> </a>
     ASSIGN TO DISK &quot;INDEX.DAT&quot;<a name="wp1032363"> </a>
     RECORD KEY IS CUSTOMER-NAME<a name="wp1032364"> </a>
     ALTERNATE KEY IS CUSTOMER-BALNAME.<a name="wp1032365"> </a>
</pre></div>
<a name="wp1032366"> </a><p class="pBody">
Suppose now that you want to define a sort sequence that uses fields that are <em class="cEmphasis">not </em>contiguous, or are defined in a <em class="cEmphasis">different order</em> from the sorting order.  In this case, you could either:
</p>
<div class="pSmartList1"><ul class="pSmartList1">
<a name="wp1032367"> </a><div class="pSmartList1"><li>move the fields around, or duplicate them, so that they are contiguous and are in the same sequence in which they will be used for sorting</li></div>
<a name="wp1032368"> </a><div class="pSmartList1"><li>define a <em class="cEmphasis">split key</em></li></div>
</ul></div>
<a name="wp1032371"> </a><p class="pBody">
Split keys allow you to specify up to <em class="cEmphasis">16 segments of data elements</em> as the components of a key.  (Note that if you compile for compatibility with versions earlier than Vision Version 4, you can have no more than six segments.)  The data segments need not be contiguous and need not be listed in the order they appear within the record.  The composite length of a split key cannot exceed 250 bytes, and no key can be defined beyond the minimum record length. 
</p>
<a name="wp1032372"> </a><p class="pBody">
For example, to define an alternate key consisting of CUSTOMER-BALANCE, CUSTOMER-NAME, and CUSTOMER-NO, use the syntax shown in the last two lines below:
</p>
<div class="pPreformatted"><pre class="pPreformatted">
FILE-CONTROL.<a name="wp1032373"> </a>
    SELECT AJAX-SUPPLIES<a name="wp1032374"> </a>
    ASSIGN TO DISK &quot;INDEX.DAT&quot;<a name="wp1032375"> </a>
    RECORD KEY IS CUSTOMER-NAME<a name="wp1032376"> </a>
    ALTERNATE RECORD KEY IS CUSTOMER-BALNAME<a name="wp1032377"> </a>
    ALTERNATE RECORD KEY IS BAL2-KEY = <a name="wp1032378"> </a>
      CUSTOMER-BALANCE, CUSTOMER-NAME, CUSTOMER-NO.<a name="wp1032379"> </a>
</pre></div>
<a name="wp1032380"> </a><p class="pBody">
In this example, BAL2-KEY is a user-defined word and is the name you would use in your READ and START statements.  Note that BAL2-KEY is <em class="cEmphasis">not</em> defined in Working-Storage.  This is the <em class="cEmphasis">only</em> definition of the key.  
</p>
 </blockquote>

 <hr />

 <table align="left" border="0" cellspacing="0" cellpadding="0">
   <tr>
     <td align="left" width="300">
       <span style="font-size: 12px ; font-weight: bold ; font-family: Arial, Helvetica, sans-serif">
         <a href="http://www.acucorp.com">Acucorp, Inc.</a><br />
       </span>
       <span style="font-size: 10px ; font-family: Arial, Helvetica, sans-serif">
         Voice: 800.262.6585 (U.S.A. and Canada)<br />
         Voice: 858.689.4500<br />
         Fax: 858.689.4550<br />
         Please share your comments on this manual<br />
         or on any Acucorp documentation with the<br />
         <a href="mailto:docfeedback@acucorp.com">Acucorp Communications Department</a>.<br />
       </span>
     </td>
   </tr>
 </table>

<script type="text/javascript" language="JavaScript1.2">
   <!--
    document.write(WWHRelatedTopicsDivTag() + WWHPopupDivTag());
   // -->
  </script>

 
</body>
</html>
