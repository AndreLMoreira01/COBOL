<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />
  <meta http-equiv="Content-Style-Type" content="text/css" />
  <meta name="GENERATOR" content="Quadralay WebWorks Publisher Professional Edition 7.0.5.1025" />
  <meta name="TEMPLATEBASE" content="Acucorp WWH" />
  <meta name="LASTUPDATED" content="06/14/06 08:21:09" />
  <title>3.1.3.9  Data menu</title>
  <link rel="StyleSheet" href="document.css" type="text/css" />
  <link rel="StyleSheet" href="catalog.css" type="text/css" />
<script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/context.js"></script>
  <script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/towwhdir.js"></script>
  <script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/wwhpagef.js"></script>

  <script type="text/javascript" language="JavaScript1.2">
   <!--
    // Set reference to top level help frame
    //
    var  WWHFrame = WWHGetWWHFrame("");
   // -->
  </script>
 </head>

 <body onLoad="WWHUpdate();">

    <a href="../docs.htm" target="acudoc"><img src="images/sbooks.gif" width="70" height="27" border="0" alt="Books" align="right" /></a>
    <span style="font-size: 18px ; font-weight: bold"><font face="Arial, Helvetica, sans-serif">
       ACUCOBOL-GT User's Guide <br />
    </font></span>
    <span style="font-size: 14px ; font-weight: bold"><font face="Arial, Helvetica, sans-serif">
       Version 7.2
     </font></span>

 <p />

 <blockquote>
<p class="breadcrumb"><a href="gt13.htm"><br />Chapter 3:  Debugger and Utilities</a> &gt; <a href="gt132.htm">3.1 Runtime Debugger</a> &gt; <a href="gt135.htm">3.1.3  Debugger Commands</a> &gt; </p>
<a name="wp1032758"> </a><h2 class="pHeading3">
3.1.3.9  Data menu
</h2>
<a name="wp1032761"> </a><p class="pBody">
The <em class="cEmphasis">Data</em> menu contains commands relating to your program's variables.</p><div><img src="ch3_8_de.gif" height="206" width="407" border="0" hspace="0" vspace="0"/>
</div><p class="pBody">
</p>
<a name="wp1032765"> </a><p class="pBody">
You may use name qualification with the <em class="cEmphasis">Display</em>, <em class="cEmphasis">Accept</em>, and <em class="cEmphasis">Monitor</em> commands.  For example, you may type &quot;FIELD-1 IN GROUP-1&quot; to refer to FIELD-1 of GROUP-1.  Name qualification is not supported for on-screen commands (such as F7) and for situations in which you double-click on the data name.
</p>
<a name="wp1032769"> </a><p class="pBody">
<b class="cBold">Display </b>shows the contents of a variable.  With source-level debugging, you can either click on the variable name in the code before you select Display, or wait to be prompted.)  Numeric variables are converted to show their value.  Other variables are shown as text.  The value is shown in the debugger command window.    
</p>
<a name="wp1032770"> </a><p class="pBody">
Table elements cannot be highlighted with a mouse click.  Instead, use this keyboard command:
</p>
<div class="pPreformattedRelative"><pre class="pPreformattedRelative">
d  variable  (index)<a name="wp1032771"> </a>
</pre></div>
<a name="wp1032772"> </a><p class="pBody">
Follow the variable's name with the desired index in parentheses.  The index must be a numeric literal.    
</p>
<a name="wp1088034"> </a><p class="pBody">
To display a reference modified variable (that is, to view some portion or substring of the data item), use the syntax:
</p>
<div class="pPreformattedRelative"><pre class="pPreformattedRelative">
d  variable(x:y)<a name="wp1088227"> </a>
</pre></div>
<a name="wp1088234"> </a><p class="pBody">
This shows <em class="cEmphasis">y</em> characters of <em class="cEmphasis">variable</em>, starting from character <em class="cEmphasis">x</em>.
</p>
<a name="wp1032773"> </a><p class="pBody">
Keep in mind that you must compile with &quot;-Gd&quot; or &quot;-Gy&quot; in order to reference variables <em class="cEmphasis">by name</em>.  If the program was not compiled with one of these options, you must refer to each variable by its <em class="cEmphasis">absolute address</em> from a program listing, preceded by &quot;.&quot; (a period).   For example:
</p>
<div class="pPreformattedRelative"><pre class="pPreformattedRelative">
d  .213.5<a name="wp1032774"> </a>
</pre></div>
<a name="wp1032775"> </a><p class="pBody">
The keyboard form of this command is &quot;D <em class="cEmphasis">variable</em>&quot;.
</p>
<a name="wp1032778"> </a><p class="pBody">
<b class="cBold">Display in Hex </b>shows the contents of a variable in hexadecimal.  (With source-level debugging, either click on the variable name in the code before you select Display in Hex, or wait to be prompted for the name.) 
</p>
<a name="wp1032779"> </a><p class="pBody">
This option allows you to determine the data stored in each byte of the variable.  The value is shown in the command window below the source code.
</p>
<a name="wp1032781"> </a><p class="pBody">
Table elements cannot be highlighted with a mouse click. To view a table element, follow the variable's name with the desired index in parentheses, as shown here:
</p>
<div class="pPreformattedRelative"><pre class="pPreformattedRelative">
d  variable  (index),  x<a name="wp1032782"> </a>
</pre></div>
<a name="wp1032783"> </a><p class="pBody">
The index must be a numeric literal. 
</p>
<a name="wp1032784"> </a><p class="pBody">
Keep in mind that you must compile with &quot;-Gd&quot; or &quot;-Gy&quot; in order to reference variables by name.  If the program was not compiled with one of these options, you must refer to each variable by its absolute address from a program listing. 
</p>
<a name="wp1032785"> </a><p class="pBody">
The keyboard form of this command is &quot;D <em class="cEmphasis">variable</em>, X&quot;.
</p>
<a name="wp1032788"> </a><p class="pBody">
<b class="cBold">Accept </b>allows you to modify the contents of a variable.  (With source-level debugging, either click on the variable name in the code before you select Accept, or wait to be prompted for the name.)  For numeric variables, the value entered is converted to the internal storage format of the variable.    
</p>
<a name="wp1032789"> </a><p class="pBody">
The current value of the variable is shown as the default.  To leave the current value in place, press Enter.
</p>
<a name="wp1032790"> </a><p class="pBody">
Table elements cannot be highlighted with a mouse click. To modify a table element, follow the variable's name with the desired index in parentheses, as shown here:
</p>
<div class="pPreformattedRelative"><pre class="pPreformattedRelative">
a  variable  (index)<a name="wp1032791"> </a>
</pre></div>
<a name="wp1032792"> </a><p class="pBody">
The index must be a numeric literal. 
</p>
<a name="wp1032793"> </a><p class="pBody">
Keep in mind that you must compile with &quot;-Gd&quot; or &quot;-Gy&quot; in order to reference variables by name.  If the program was not compiled with one of these options, you must refer to each variable by its absolute address from a program listing. 
</p>
<a name="wp1032794"> </a><p class="pBody">
The keyboard form of this command is &quot;A <em class="cEmphasis">variable</em>&quot;.
</p>
<a name="wp1085453"> </a><p class="pBody">
<b class="cBold">Accept in Hex</b> allows you to modify the contents of a variable in hexadecimal format.  You can enter or display up to 2048 hex characters (1024 bytes of data).
</p>
<a name="wp1085471"> </a><p class="pBody">
To accept a variable in hexadecimal format from the command line, use the command:
</p>
<div class="pPreformattedRelative"><pre class="pPreformattedRelative">
a  variable  x<a name="wp1087943"> </a>
</pre></div>
<a name="wp1032797"> </a><p class="pBody">
The <b class="cBold">Monitor </b>submenu contains commands that relate to monitored variables.        
</p>
<a name="wp1032800"> </a><p class="pBody">
<b class="cBold">Set</b> displays a dialog box which prompts you for the name of a variable to be included in the Watch Window.  (For source-level debugging, either click on the variable name in the code before you select Monitor, or wait to be prompted for the name.)  The Monitor dialog box looks like this:</p><div><img src="ch3_9_mo.gif" height="144" width="389" border="0" hspace="0" vspace="0"/>
</div><p class="pBody">
</p>
<a name="wp1032802"> </a><p class="pBody">
The Monitor dialog box includes a check box labeled &quot;Break when changed&quot;.  When this box is checked, the selected variable becomes monitored, and if it is unchecked, the variable is only <em class="cEmphasis">watched</em>.  The default value of this check box is On (checked).
</p>
<a name="wp1032805"> </a><p class="pBody">
If the &quot;Break when changed&quot; box is checked in the Monitor dialog box, monitoring a variable suspends the program run.  Any time a monitored variable changes, the program stops executing and control returns to the debugger, where the new value of the variable is displayed in the command area of the debugger window and in the Watch Window.  
</p>
<a name="wp1032806"> </a><p class="pBody">
If the &quot;Break when changed&quot; box is unchecked in the Monitor dialog box, the item is watched.  Though changes to a watched variable's value are indicated in the Watch Window like those of a monitored variable, these changes do not cause the program to stop executing.
</p>
<a name="wp1032807"> </a><p class="pBody">
You can tell which variables in the Watch Window are monitored by the phrase &quot;(break)&quot; following the variable name (i.e., those variables for which the &quot;Break when changed&quot; check box was clicked on).  The watched variables do not have this phrase displayed after their names.
</p>
<a name="wp1090070"> </a><p class="pBody">
When any variables are set for monitor/watch, a new window is created as a sub-window of the main debugger canvas, located at the top of the screen.  This window, called the &quot;Watch Window&quot;, shows all the monitored/watched variables and their values, one name/value per line (values that exceed the size of the window are truncated).  By default, the Watch Window contains as many lines as there are variables being monitored, up to a maximum of three.  If you set more than 3 variables, you can scroll through the Watch Window to view them all, or you can make the Watch Window larger with the Window Size option on the Source menu.  If your system does not use the mouse, you can scroll the Watch Window using <span style="font-family: Arial, Verdana, Helvetica, sans-serif; font-weight: bold">Ctrl&#160;+&#160;P</span> (for previous item) and <span style="font-family: Arial, Verdana, Helvetica, sans-serif; font-weight: bold">Ctrl&#160;+&#160;N</span> (for next item) keys on your keyboard.  The maximum number of variables you can set is limited only by system memory.  The Watch Window looks like this:
</p>
<a name="wp1070744"> </a><p class="pBodyRelative">
</p><div><img src="ch3_10_w.gif" height="114" width="407" border="0" hspace="0" vspace="0"/>
</div><p class="pBodyRelative">
</p>
<a name="wp1032810"> </a><p class="pBody">
To monitor a table element, follow the variable's name with the desired index in parentheses, as shown here (table elements cannot be highlighted with a mouse click):
</p>
<div class="pPreformattedRelative"><pre class="pPreformattedRelative">
m  variable  (index)<a name="wp1032811"> </a>
</pre></div>
<a name="wp1032812"> </a><p class="pBody">
The index must be a numeric literal. 
</p>
<a name="wp1032813"> </a><p class="pBody">
Keep in mind that you must compile with &quot;-Gd&quot; or &quot;-Gy&quot; in order to reference variables <em class="cEmphasis">by name</em>.  If the program was not compiled with one of these options, you must refer to each variable by its <em class="cEmphasis">absolute address</em> from a program listing. 
</p>
<a name="wp1032814"> </a><p class="pBody">
The keyboard form of this command is &quot;M <em class="cEmphasis">variable</em>&quot;.
</p>
<a name="wp1032816"> </a><p class="pBody">
<em style="font-style: normal; font-weight: bold" class="cEmphasis">List</em> shows all monitored variables and their values.  Also displays a sequence number for each monitor.  You need the sequence number to clear an individual monitor.  See <em class="cEmphasis">Clear</em>, below.    
</p>
<a name="wp1032817"> </a><p class="pBody">
The keyboard form of this command is &quot;M&quot;.
</p>
<a name="wp1032819"> </a><p class="pBody">
<b style="font-weight: bold" class="cBold">Clear</b><em style="font-weight: normal" class="cEmphasis"> </em>clears a monitor from one variable.  You will be prompted to identify the variable by number.  Use the <em class="cEmphasis">List</em><b class="cBold"> </b>option to display all monitors and their numbers.  
</p>
<a name="wp1032820"> </a><p class="pBody">
The keyboard form of this command is &quot;CM <em class="cEmphasis">number</em>&quot;.
</p>
<a name="wp1032822"> </a><p class="pBody">
<b style="font-weight: bold" class="cBold">Clear All</b><em style="font-weight: normal" class="cEmphasis"> </em>clears all monitors.
</p>
<a name="wp1032823"> </a><p class="pBody">
The keyboard form of this command is &quot;CMA&quot;.
</p>
 </blockquote>

 <hr />

 <table align="left" border="0" cellspacing="0" cellpadding="0">
   <tr>
     <td align="left" width="300">
       <span style="font-size: 12px ; font-weight: bold ; font-family: Arial, Helvetica, sans-serif">
         <a href="http://www.acucorp.com">Acucorp, Inc.</a><br />
       </span>
       <span style="font-size: 10px ; font-family: Arial, Helvetica, sans-serif">
         Voice: 800.262.6585 (U.S.A. and Canada)<br />
         Voice: 858.689.4500<br />
         Fax: 858.689.4550<br />
         Please share your comments on this manual<br />
         or on any Acucorp documentation with the<br />
         <a href="mailto:docfeedback@acucorp.com">Acucorp Communications Department</a>.<br />
       </span>
     </td>
   </tr>
 </table>

<script type="text/javascript" language="JavaScript1.2">
   <!--
    document.write(WWHRelatedTopicsDivTag() + WWHPopupDivTag());
   // -->
  </script>

 
</body>
</html>
