<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />
  <meta http-equiv="Content-Style-Type" content="text/css" />
  <meta name="GENERATOR" content="Quadralay WebWorks Publisher Professional Edition 7.0.6.1058" />
  <meta name="TEMPLATEBASE" content="Acucorp WWH" />
  <meta name="LASTUPDATED" content="07/13/05 15:22:12" />
  <title>5.5  File Tracing</title>
  <link rel="StyleSheet" href="document.css" type="text/css" />
  <link rel="StyleSheet" href="catalog.css" type="text/css" />
<script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/context.js"></script>
  <script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/towwhdir.js"></script>
  <script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/wwhpagef.js"></script>

  <script type="text/javascript" language="JavaScript1.2">
   <!--
    // Set reference to top level help frame
    //
    var  WWHFrame = WWHGetWWHFrame("");
   // -->
  </script>
 </head>

 <body onLoad="WWHUpdate();">

    <a href="../docs.htm" target="acudoc"><img src="images/sbooks.gif" width="70" height="27" border="0" alt="Books" align="right" /></a>
    <span style="font-size: 18px ; font-weight: bold"><font face="Arial, Helvetica, sans-serif">
       ACUCOBOL-GT Runtime Manual <br />
    </font></span>
    <span style="font-size: 14px ; font-weight: bold"><font face="Arial, Helvetica, sans-serif">
       Version 7
     </font></span>

 <p />

 <blockquote>
<p class="breadcrumb"><a href="run5.htm"><br />Chapter 5: Runtime Debugger</a> &gt; </p>
<a name="wp1037917"> </a><h2 class="pHeading1">
5.5  File Tracing
</h2>
<a name="wp1037920"> </a><p class="pBody">
File tracing is always available.  Programs do not need to be compiled with the debug options to use file tracing.  File tracing can be especially helpful in assessing the cause of a problem.  File tracing provides valuable information about file OPENs, READs, and WRITEs.  File status codes for unsuccessful I/O operations are also shown, and configuration variable settings can be examined.  For relative files, file trace includes record numbers.
</p>
<a name="wp1037921"> </a><p class="pBody">
To enable file tracing, type:
</p>
<div class="pPreformattedRelative"><pre class="pPreformattedRelative">
runcbl  -dlxe  <em class="cEmphasis">errfile</em>   <em class="cEmphasis">myprog</em><a name="wp1037922"> </a>
</pre></div>
<a name="wp1037923"> </a><p class="pBody">
where:
</p>
<a name="wp1037949"> </a><p class="pBodyRelative">
</p><div>
<table border="0" cellpadding="6" cellspacing="1">
  <caption></caption>
  <tr align="left" valign="top">    <td><a name="wp1037926"> </a><p class="pCellBody">
<b class="cBold">-d</b>
</p>
</td>
    <td><a name="wp1037928"> </a><p class="pCellBody">
turns on the debugger
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1037930"> </a><p class="pCellBody">
<b class="cBold">-l</b>
</p>
</td>
    <td><a name="wp1037932"> </a><p class="pCellBody">
(optional) causes the contents of the runtime configuration file to be included in the error output
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1037934"> </a><p class="pCellBody">
<b class="cBold">-x</b>
</p>
</td>
    <td><a name="wp1037936"> </a><p class="pCellBody">
causes the runtime system to display the operating system's corresponding error number for file error &quot;30&quot; on the error output.  This information may help in determining the problem. 
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1037938"> </a><p class="pCellBody">
<b class="cBold">-e</b>
</p>
</td>
    <td><a name="wp1037940"> </a><p class="pCellBody">
causes the error output to be placed in the file named immediately after the option
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1037942"> </a><p class="pCellBody">
<span class="cBoldItalic">errfile</span>
</p>
</td>
    <td><a name="wp1037944"> </a><p class="pCellBody">
is the user-specified name of the error file. This file is opened as an empty file when the runtime is initiated.  Do not forget to specify the error file name--if you run with &quot;-e&quot;, immediately followed by your program name instead of an error file name, your object code file will be deleted and opened as an empty file. 
</p>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1037946"> </a><p class="pCellBody">
<span class="cBoldItalic">myprog&#160;&#160;&#160;&#160;&#160;</span>
</p>
</td>
    <td><a name="wp1037948"> </a><p class="pCellBody">
<span style="font-family: Arial, Verdana, Helvetica, sans-serif; font-style: italic"> </span>is the name of your object code file
</p>
</td>
</tr>
</table>
</div>
<p class="pBodyRelative">
</p>
<a name="wp1037950"> </a><p class="pBody">
After you press Enter you are at the debugger screen.  To turn on file tracing, type:
</p>
<div class="pPreformattedRelative"><pre class="pPreformattedRelative">
tf [#]  <a name="wp1037951"> </a>
</pre></div>
<a name="wp1037952"> </a><p class="pBody">
&quot;File trace&quot; is echoed on the screen.  
</p>
<a name="wp1037953"> </a><p class="pBody">
Some file systems can print extra information if a higher level of tracing is enabled.  This extra information is useful primarily to the Acucorp Technical Support department, and they may ask you to execute a &quot;tf  #&quot; for some integer.
</p>
<a name="wp1037955"> </a><p class="pBody">
File tracing can also be enabled with the FILE_TRACE runtime configuration variable.  Some attributes of trace output can be tailored with the TRACE_STYLE configuration variable.  For more information about both of these variables, see Appendix H of Book 4.
</p>
<a name="wp1037957"> </a><p class="pBody">
If you are writing to an error file, you can execute this debugger command:
</p>
<div class="pPreformattedRelative"><pre class="pPreformattedRelative">
t  flush  <a name="wp1037958"> </a>
</pre></div>
<a name="wp1037959"> </a><p class="pBody">
to cause the error file to be flushed to disk after each write.  This can be useful if your program terminates unexpectedly.  It allows the error file to contain everything that the runtime sent to it.  Without this command, the error file could be empty following an unexpected program termination, even though a great deal of information had been written to it.  Note that this option slows down the processing but ensures that the error file is complete.
</p>
<a name="wp1037960"> </a><p class="pBody">
To start the program, enter:
</p>
<div class="pPreformattedRelative"><pre class="pPreformattedRelative">
g  <a name="wp1037961"> </a>
</pre></div>
<a name="wp1037962"> </a><p class="pBody">
Proceed until you encounter the error condition, and then exit.  Your error file contains the error information, all COBOL configuration file variables that you have set, and a record of every file operation.  
</p>
<a name="wp1037963"> </a><h3 class="pHeadingRef">
File Trace Timestamps
</h3>
<a name="wp1037966"> </a><p class="pBody">
If you are directing file trace output to an error file, you can elect to include timestamp information.  When this option is enabled, a timestamp is placed at the beginning of every line in the trace file.  (When you are debugging a problem, it is sometime helpful to know the exact time of each file operation.)  The format of the timestamp is: HH:MM:SS.mmmmmm, where &quot;mmmmmm&quot; is the finest resolution that the runtime can obtain from the system.
</p>
<a name="wp1037967"> </a><p class="pBody">
There are three ways to enable timestamps in the trace file.
</p>
<div class="pSmartList1"><ol type="1" class="pSmartList1">
<a name="wp1037968"> </a><div class="pSmartList1"><li>In the debugger, before you start the program with the &quot;g&quot; command, enter:</li></div>
<div class="pPreformattedRelative"><pre class="pPreformattedRelative">
t timestamp<a name="wp1037969"> </a>
</pre></div>
<a name="wp1037971"> </a><div class="pSmartList1"><li>Before you start the program, in the runtime configuration file set the FILE_TRACE_TIMESTAMP variable to &quot;1&quot; (on, true, yes).  This variable is set to &quot;0&quot; (off, false, no), by default.  </li></div>
<a name="wp1037972"> </a><p class="pIndented1">
When set in the appropriate server configuration file, FILE_TRACE_TIMESTAMP can also be used with AcuServer and AcuConnect (see the associated product documentation for more information).
</p>
<a name="wp1037973"> </a><div class="pSmartList1"><li>Before you start the program, in the runtime configuration file set the TRACE_STYLE variable to TIMESTAMP.</li></div>
</ol></div>
<a name="wp1037974"> </a><p class="pBody">
Timestamp information is included only when file trace information is directed to a file.  
</p>
<a name="wp1037975"> </a><p class="pBody">
Timestamp output can add significant file I/O overhead and may have a noticeable impact on performance.
</p>
 </blockquote>

 <hr />

 <table align="left" border="0" cellspacing="0" cellpadding="0">
   <tr>
     <td align="left" width="300">
       <span style="font-size: 12px ; font-weight: bold ; font-family: Arial, Helvetica, sans-serif">
         <a href="http://www.acucorp.com">Acucorp, Inc.</a><br />
       </span>
       <span style="font-size: 10px ; font-family: Arial, Helvetica, sans-serif">
         Voice: (800) 262-6585 (U.S.A. and Canada)<br />
         Voice: (858) 689-4500<br />
         Fax: (858) 689-4550<br />
         Please share your comments on this manual<br />
         or on any Acucorp documentation with the<br />
         <a href="mailto:docfeedback@acucorp.com">Acucorp Communications Department</a>.<br />
       </span>
     </td>
   </tr>
 </table>

<script type="text/javascript" language="JavaScript1.2">
   <!--
    document.write(WWHRelatedTopicsDivTag() + WWHPopupDivTag());
   // -->
  </script>

 
</body>
</html>
